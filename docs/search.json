[{"path":"/articles/joint_latent_class_model_with_Jointlcmm.html","id":"background-on-the-model","dir":"Articles","previous_headings":"","what":"Background on the model","title":"How to estimate a joint latent class mixed model using Jointlcmm function","text":"Joint models used analyse simultaneously two related phenomena, evolution variable occurence event. Joint latent class models (JLCM) consist linear mixed model proportional hazard model linked latent classes. population split several groups, latent classes, class caracterized specific evolution dependent variable associated risk event.    Latent class membership defined discrete random variable \\(c_{}\\) equals \\(g\\) subject \\(\\) belongs latent class \\(g\\) (\\(g\\) = 1, …,\\(G\\)). variable \\(c_{}\\) latent; probability described using multinomial logistic model according covariates \\(X_{ci}\\): \\(\\pi_{ig}= P(c_{} = g|X_{ci}) = \\frac{\\exp(\\xi_{0g}+X_{ci}\\xi_{1g})}{ \\sum_{l=1}^{G}\\exp(\\xi_{0l}+X_{ci}\\xi_{1l})}\\) continuous Gaussian variable, trajectories \\(Y\\) defined conditionally latent class linear mixed model. , conditional class \\(g\\), model defined subject \\(\\) occasion \\(j\\):   \\[Y_{ij}|_{c_{}=g} = X_{2ij}\\beta+X_{3ij}\\gamma_{g}+Z_{ij}b_{}+\\epsilon_{ij}\\]   \\(X_{2ij}\\), \\(X_{3ij}\\) \\(Z_{ij}\\) vectors covariates respectively associated common fixed effects classes \\(\\beta\\), class-specific fixed effects \\(\\gamma_{g}\\) individual random effects \\(b_{}|_{ci=g}\\) called \\(b_{ig}\\) whose distributions now class-specific. \\(X_{2}\\) \\(X_{3}\\) can’t common variables. proporional hazard model defined conditionaly class \\(g\\) :   \\[\\lambda(t)|_{c_{}=g} = \\lambda_{0g}(t)\\exp(X_{4i}\\psi+X_{5i}\\eta_g)\\]   \\(X_{4i}\\) \\(X_{5i}\\) vectors covariates respectively associated common effects aver classes \\(\\psi\\) class-specific effects \\(\\eta_g\\).","code":""},{"path":"/articles/joint_latent_class_model_with_Jointlcmm.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"How to estimate a joint latent class mixed model using Jointlcmm function","text":"use paquid sample included package. Please refer introduction vignette details data. consider subjects risk dementia begining study : also create variables used example :","code":"paquidS <- paquid[which(paquid$agedem > paquid$age_init),] library(NormPsy) paquidS$normMMSE <- normMMSE(paquidS$MMSE) paquidS$age65 <- (paquidS$age-65)/10"},{"path":"/articles/joint_latent_class_model_with_Jointlcmm.html","id":"first-use-of-jointlcmm-function","dir":"Articles","previous_headings":"","what":"First use of Jointlcmm function","title":"How to estimate a joint latent class mixed model using Jointlcmm function","text":"model jointly trajectory normMMSE time dementia. JLCM estimated fixed number latent classes, begin specifying model 1 latent class.","code":""},{"path":"/articles/joint_latent_class_model_with_Jointlcmm.html","id":"linear-mixed-model-for-normmmse-trajectory","dir":"Articles","previous_headings":"First use of Jointlcmm function","what":"1. Linear mixed model for normMMSE trajectory","title":"How to estimate a joint latent class mixed model using Jointlcmm function","text":"begin specifying linear mixed model normMMSE. consider specification hlme vignette, quadratic trajectory age adjusted CEP.","code":"lmm <- hlme(normMMSE ~ age65 + I(age65^2) + CEP , random =~ age65 + I(age65^2),               subject = 'ID', data = paquidS,verbose=FALSE) summary(lmm) #> Heterogenous linear mixed model  #>      fitted by maximum likelihood method  #>   #> hlme(fixed = normMMSE ~ age65 + I(age65^2) + CEP, random = ~age65 +  #>     I(age65^2), subject = \"ID\", data = paquidS, verbose = FALSE) #>   #> Statistical Model:  #>      Dataset: paquidS  #>      Number of subjects: 499  #>      Number of observations: 2213  #>      Number of observations deleted: 36  #>      Number of latent classes: 1  #>      Number of parameters: 11   #>   #> Iteration process:  #>      Convergence criteria satisfied  #>      Number of iterations:  21  #>      Convergence criteria: parameters= 3e-06  #>                          : likelihood= 1.1e-05  #>                          : second derivatives= 1.3e-13  #>   #> Goodness-of-fit statistics:  #>      maximum log-likelihood: -8916.59   #>      AIC: 17855.18   #>      BIC: 17901.52   #>   #>   #> Maximum Likelihood Estimates:  #>   #> Fixed effects in the longitudinal model: #>  #>                  coef      Se     Wald p-value #> intercept    64.64416 1.95728   33.027 0.00000 #> age65         5.59810 2.30213    2.432 0.01503 #> I(age65^2)   -6.09658 0.79083   -7.709 0.00000 #> CEP          13.65079 1.35072   10.106 0.00000 #>  #>  #> Variance-covariance matrix of the random-effects: #>             intercept     age65 I(age65^2) #> intercept   212.80179                      #> age65      -216.41729  456.5118            #> I(age65^2)   55.71578 -145.7874   59.36679 #>  #>                                coef      Se #> Residual standard error:   10.07244 0.20278"},{"path":"/articles/joint_latent_class_model_with_Jointlcmm.html","id":"survival-model-for-dementia-diagnosis","dir":"Articles","previous_headings":"First use of Jointlcmm function","what":"2. Survival model for dementia diagnosis","title":"How to estimate a joint latent class mixed model using Jointlcmm function","text":"Joinlcmm assumes parametric baseline risk function. thus need determine family baseline risks. , use jointlcmm function longitudinal part hlme. application, risk dementia described according age problem delayed entry. program handles specifying age_init Surv object. try different families baseline risks (Weibull, Splines, piecewise constant) systematically adjust CEP male. Weibull model gives best fit. possible change parameterization survival model (log instead +/-sqrt)","code":"# Weibull distribution mj1 <- Jointlcmm(normMMSE ~ age65 + I(age65^2) + CEP, random =~ age65 + I(age65^2),                   survival = Surv(age_init, agedem, dem) ~ CEP + male, hazard = \"Weibull\",                  subject = 'ID', data = paquidS, verbose=FALSE) mj1$best #> event1 +/-sqrt(Weibull1) event1 +/-sqrt(Weibull2)                      CEP  #>                0.1038941                3.6270872               -0.2484354  #>                     male                intercept                    age65  #>               -0.2007211               64.6441641                5.5980977  #>               I(age65^2)                      CEP                 varcov 1  #>               -6.0965763               13.6507881              212.8020164  #>                 varcov 2                 varcov 3                 varcov 4  #>             -216.4176788              456.5123512               55.7159127  #>                 varcov 5                 varcov 6                   stderr  #>             -145.7875460               59.3668519               10.0724388 # Note that to reduce computation time, we could fix the parameters of the longitudinal  #part to those of the linear mixed model  binit <- c(1,1,1,1,lmm$best) mj1bis <- Jointlcmm(normMMSE ~ age65 + I(age65^2) + CEP, random =~ age65 + I(age65^2),                     survival = Surv(age_init, agedem, dem) ~ CEP + male, hazard = \"Weibull\",                     subject = 'ID', data = paquidS,B=binit, posfix=5:15, verbose=FALSE) # Piecewise constant hazard mjP1 <- Jointlcmm(normMMSE ~ age65 + I(age65^2) + CEP, random =~ age65 + I(age65^2),                   survival = Surv(age_init, agedem, dem) ~ CEP + male, hazard = \"piecewise\",                   subject = 'ID', data = paquidS, verbose=FALSE) # Hazard approximated by cubic splines (3 intern knots located at the quantiles by default mjS1 <- Jointlcmm(normMMSE ~ age65 + I(age65^2) + CEP, random =~ age65 + I(age65^2),                   survival = Surv(age_init, agedem, dem) ~ CEP + male, hazard = \"splines\",                   subject = 'ID', data = paquidS, verbose=FALSE) # From the summary table, we prefer the Weibull model summarytable(mj1,mjP1,mjS1) #>      G    loglik npm      BIC %class1 #> mj1  1 -9449.079  15 18991.35     100 #> mjP1 1 -9452.777  17 19011.17     100 #> mjS1 1 -9447.433  20 19019.12     100 summarytable(mj1,mjP1,mjS1,which=c(\"npm\",\"loglik\",\"AIC\")) #>      npm    loglik      AIC #> mj1   15 -9449.079 18928.16 #> mjP1  17 -9452.777 18939.55 #> mjS1  20 -9447.433 18934.87 # Summary of the model summary(mj1) #> Joint latent class model for quantitative outcome and competing risks  #>      fitted by maximum likelihood method  #>   #> Jointlcmm(fixed = normMMSE ~ age65 + I(age65^2) + CEP, random = ~age65 +  #>     I(age65^2), subject = \"ID\", survival = Surv(age_init, agedem,  #>     dem) ~ CEP + male, hazard = \"Weibull\", data = paquidS, verbose = FALSE) #>   #> Statistical Model:  #>      Dataset: paquidS  #>      Number of subjects: 499  #>      Number of observations: 2213  #>      Number of latent classes: 1  #>      Number of parameters: 15   #>      Event 1:  #>         Number of events: 128 #>         Weibull baseline risk function  #>   #> Iteration process:  #>      Convergence criteria satisfied  #>      Number of iterations:  37  #>      Convergence criteria: parameters= 2.6e-06  #>                          : likelihood= 2.3e-07  #>                          : second derivatives= 1.2e-12  #>   #> Goodness-of-fit statistics:  #>      maximum log-likelihood: -9449.08   #>      AIC: 18928.16   #>      BIC: 18991.35   #>      Score test statistic for CI assumption: 168.544 (p-value=0)  #>   #> Maximum Likelihood Estimates:  #>   #> Parameters in the proportional hazard model: #>  #>                                coef      Se     Wald p-value #> event1 +/-sqrt(Weibull1)    0.10389 0.00060  174.217 0.00000 #> event1 +/-sqrt(Weibull2)    3.62709 0.17427   20.812 0.00000 #> CEP                        -0.24844 0.18806   -1.321 0.18650 #> male                       -0.20072 0.20399   -0.984 0.32513 #>  #> Fixed effects in the longitudinal model: #>  #>                  coef      Se     Wald p-value #> intercept    64.64416 1.95705   33.031 0.00000 #> age65         5.59810 2.30170    2.432 0.01501 #> I(age65^2)   -6.09658 0.79069   -7.710 0.00000 #> CEP          13.65079 1.35071   10.106 0.00000 #>  #>  #> Variance-covariance matrix of the random-effects: #>             intercept     age65 I(age65^2) #> intercept   212.80202                      #> age65      -216.41768  456.5124            #> I(age65^2)   55.71591 -145.7876   59.36685 #>  #>                               coef      Se #> Residual standard error   10.07244 0.20278 binit <- c(1,1,1,1,lmm$best) mj1ter <- Jointlcmm(normMMSE ~ age65 + I(age65^2) + CEP, random =~ age65 + I(age65^2),                     survival = Surv(age_init, agedem, dem) ~ CEP + male, hazard = \"Weibull\",                     subject = 'ID', data = paquidS,B=binit, posfix=5:15,logscale = TRUE, verbose=FALSE) # Same loglikelihood, HR, only the parameters of the baseline risk function change. summary(mj1ter) #> Joint latent class model for quantitative outcome and competing risks  #>      fitted by maximum likelihood method  #>   #> Jointlcmm(fixed = normMMSE ~ age65 + I(age65^2) + CEP, random = ~age65 +  #>     I(age65^2), subject = \"ID\", survival = Surv(age_init, agedem,  #>     dem) ~ CEP + male, hazard = \"Weibull\", data = paquidS, logscale = TRUE,  #>     posfix = 5:15, verbose = FALSE) #>   #> Statistical Model:  #>      Dataset: paquidS  #>      Number of subjects: 499  #>      Number of observations: 2213  #>      Number of latent classes: 1  #>      Number of parameters: 15   #>      Number of estimated parameters: 4   #>      Event 1:  #>         Number of events: 128 #>         Weibull baseline risk function  #>   #> Iteration process:  #>      Convergence criteria satisfied  #>      Number of iterations:  90  #>      Convergence criteria: parameters= 6.4e-05  #>                          : likelihood= 4.1e-05  #>                          : second derivatives= 8e-07  #>   #> Goodness-of-fit statistics:  #>      maximum log-likelihood: -9449.08   #>      AIC: 18906.16   #>      BIC: 18923.01   #>      Score test statistic for CI assumption: 168.584 (p-value=0)  #>   #> Maximum Likelihood Estimates:  #>   #> Parameters in the proportional hazard model: #>  #>                            coef      Se    Wald p-value #> event1 log(Weibull1)  -59.41437 3.23421 -18.371 0.00000 #> event1 log(Weibull2)    2.57409 0.05404  47.632 0.00000 #> CEP                    -0.24874 0.18777  -1.325 0.18526 #> male                   -0.20153 0.20280  -0.994 0.32035 #>  #> Fixed effects in the longitudinal model: #>  #>                  coef  Se Wald p-value #> intercept    64.64416*                 #> age65         5.59810*                 #> I(age65^2)   -6.09658*                 #> CEP          13.65079*                 #>  #>  #> Variance-covariance matrix of the random-effects: #>            intercept   age65       I(age65^2) #> intercept   212.80179*                        #> age65      -216.41729*  456.51175*            #> I(age65^2)   55.71578* -145.78735* 59.36679*  #>  #>                               coef  Se #> Residual standard error   10.07244*    #>  #>  * coefficient fixed by the user  #>"},{"path":"/articles/joint_latent_class_model_with_Jointlcmm.html","id":"estimation-with-different-numbers-of-latent-classes","dir":"Articles","previous_headings":"First use of Jointlcmm function","what":"3. Estimation with different numbers of latent classes","title":"How to estimate a joint latent class mixed model using Jointlcmm function","text":"specification model G=1 done (one class means independent models), can estimate model one class. cumbersome step analysis since estimation replicated different numbers latent classes various initial values avoid convergence toward local maximum.","code":""},{"path":"/articles/joint_latent_class_model_with_Jointlcmm.html","id":"model-with-two-latent-classes","dir":"Articles","previous_headings":"First use of Jointlcmm function > 3. Estimation with different numbers of latent classes","what":"3.1 Model with two latent classes","title":"How to estimate a joint latent class mixed model using Jointlcmm function","text":"choose consider proportional hazards given fit obtained continue class-specific baseline risk functions allow flexibility. Note results terms classification seem close. estimates model summary. first model, can look different output functions available package evaluate quality fit model.   predictions model:   model obtained first call jointlcmm necessarily maximum likelihood estimator 2 classes. model must refitted initial values. different possibilities package: random departure asymptotic distribution estimates G=1 initial values chosen user grid search replicates R times random departures maximu M iterations algorithm time. program finishes estimation departure gave best log likelihood M iterations. recommended latent class models ensure convergence toward global maximum. grid search can take lot time replicating R model estimation. recommend use 100 random departures possible 30-50 iterations. , illustrate procedure less replicates iterations reduce processing time. example, always converge maximum whatever departure latent classes might exchanged.","code":"# Model with 2 latent classes and class-specific baseline risks # The starting values are determined by the model under G=1 # CAUTION: Try to specify argument B=. Otherwise, the program internally estimated a  # first model with G=1 which artificially makes the program longer.  mj2 <- Jointlcmm(normMMSE ~ age65 + I(age65^2) + CEP, mixture =~ age65 + I(age65^2),                   random =~ age65 + I(age65^2), survival = Surv(age_init, agedem, dem)                   ~ CEP                  + male, hazard = \"Weibull\", subject = 'ID', data = paquidS, ng=2,B=mj1, verbose=FALSE) # model with 2 latent classes and proportional hazards in each class mj2_prop <- Jointlcmm(normMMSE ~ age65 + I(age65^2) + CEP, mixture =~ age65 + I(age65^2),                       random =~ age65 + I(age65^2), survival = Surv(age_init, agedem, dem)                       ~ CEP + male, hazard = \"Weibull\", subject = 'ID', data = paquidS,                       ng=2,B=mj1, hazardtype='PH', verbose=FALSE) # comparison summarytable(mj2,mj2_prop,which=c(\"npm\",\"loglik\",\"AIC\")) #>          npm    loglik      AIC #> mj2       21 -9337.187 18716.37 #> mj2_prop  20 -9338.147 18716.29 # Classification given in head(mj2$pprob) #>   ID class    probYT1    probYT2 #> 1  1     2 0.38861829 0.61138171 #> 2  2     1 0.94870151 0.05129849 #> 3  3     2 0.44381967 0.55618033 #> 4  4     2 0.32373104 0.67626896 #> 5  5     2 0.02164882 0.97835118 #> 6  6     1 0.73146886 0.26853114 # comparison of classifications xclass(mj2,mj2_prop) #>     #>       1   2 #>   1 100   5 #>   2   0 394 # summary of the model summary(mj2) #> Joint latent class model for quantitative outcome and competing risks  #>      fitted by maximum likelihood method  #>   #> Jointlcmm(fixed = normMMSE ~ age65 + I(age65^2) + CEP, mixture = ~age65 +  #>     I(age65^2), random = ~age65 + I(age65^2), subject = \"ID\",  #>     ng = 2, survival = Surv(age_init, agedem, dem) ~ CEP + male,  #>     hazard = \"Weibull\", data = paquidS, verbose = FALSE) #>   #> Statistical Model:  #>      Dataset: paquidS  #>      Number of subjects: 499  #>      Number of observations: 2213  #>      Number of latent classes: 2  #>      Number of parameters: 21   #>      Event 1:  #>         Number of events: 128 #>         Class-specific hazards and  #>         Weibull baseline risk function  #>   #> Iteration process:  #>      Convergence criteria satisfied  #>      Number of iterations:  33  #>      Convergence criteria: parameters= 1.7e-05  #>                          : likelihood= 2.2e-07  #>                          : second derivatives= 4e-11  #>   #> Goodness-of-fit statistics:  #>      maximum log-likelihood: -9337.19   #>      AIC: 18716.37   #>      BIC: 18804.84   #>      Score test statistic for CI assumption: 66.059 (p-value=0)  #>   #> Maximum Likelihood Estimates:  #>   #> Fixed effects in the class-membership model: #> (the class of reference is the last class)  #>  #>                        coef      Se     Wald p-value #> intercept class1   -0.61509 0.16465   -3.736 0.00019 #>  #> Parameters in the proportional hazard model: #>  #>                                        coef      Se     Wald p-value #> event1 +/-sqrt(Weibull1) class 1    0.10969 0.00061  180.614 0.00000 #> event1 +/-sqrt(Weibull2) class 1    4.69547 0.24018   19.550 0.00000 #> event1 +/-sqrt(Weibull1) class 2    0.10232 0.00041  251.288 0.00000 #> event1 +/-sqrt(Weibull2) class 2    5.32355 0.39053   13.632 0.00000 #> CEP                                -0.80979 0.24500   -3.305 0.00095 #> male                                0.17328 0.25800    0.672 0.50183 #>  #> Fixed effects in the longitudinal model: #>  #>                         coef      Se     Wald p-value #> intercept class1    59.64985 3.73836   15.956 0.00000 #> intercept class2    63.87582 2.48897   25.664 0.00000 #> age65 class1        14.76217 5.31439    2.778 0.00547 #> age65 class2         5.53812 2.91867    1.897 0.05776 #> I(age65^2) class1  -14.00999 1.82805   -7.664 0.00000 #> I(age65^2) class2   -4.23436 0.89436   -4.735 0.00000 #> CEP                 14.37978 1.29027   11.145 0.00000 #>  #>  #> Variance-covariance matrix of the random-effects: #>             intercept     age65 I(age65^2) #> intercept   227.63125                      #> age65      -228.34071  435.7444            #> I(age65^2)   58.48699 -129.3541   41.96659 #>  #>                               coef      Se #> Residual standard error   10.01950 0.19840 # quality of the classification postprob(mj2) #>   #> Posterior classification based on longitudinal and time-to-event data:  #>   class1 class2 #> N 105.00 394.00 #> %  21.04  78.96 #>   #> Posterior classification table:  #>      --> mean of posterior probabilities in each class  #>         prob1  prob2 #> class1 0.9006 0.0994 #> class2 0.1507 0.8493 #>   #> Posterior probabilities above a threshold (%):  #>          class1 class2 #> prob>0.7  84.76  71.07 #> prob>0.8  80.95  63.20 #> prob>0.9  71.43  53.81 #>   #>   #> Posterior classification based only on longitudinal data:  #>   class1 class2 #> N 109.00 390.00 #> %  21.84  78.16 #> # residuals plot(mj2) # fit of the longitudinal model: marginal predictions plot(mj2,which=\"fit\",var.time=\"age\") # fit of the longitudinal model: subject-specific predictions plot(mj2,which=\"fit\",var.time=\"age\",marg=FALSE) # plot of the baseline risk functions and survival functions plot(mj2,which=\"baselinerisk\",var.time=\"age\") plot(mj2,which=\"survival\",var.time=\"age\") # model with 2 latent classes and class-specific risk functions. # multiple departures using a grid search  # (here, only a small gridsearch with 15 replicates and 10 iterations  # we recommend more replicated -50 to 100- and 30 iterations)  # Be careful, this might take a lot of time !! mj2b <- gridsearch(rep = 15, maxiter = 10, minit = mj1, Jointlcmm(normMMSE ~ age65 +         I(age65^2) + CEP, mixture =~ age65 + I(age65^2), random =~ age65 + I(age65^2),         survival = Surv(age_init, agedem, dem) ~ CEP + male, hazard = \"Weibull\",          subject = 'ID', data = paquidS, ng=2,verbose=F))  # An alternative is to directly choose the initial values and explore different  # plausible departures.  # The order of the B vector is the same as in the summary. # Below, I keep the variance covariance parameters as in G=1. The other parameters are  # chosen according to values obtained above.  binit <- c(0,0.10,5,0.11,5.1,0,0,70,60,3,8,0,-5,13,mj1$best[9:15]) mj2c <- Jointlcmm(normMMSE ~ age65 + I(age65^2) + CEP, mixture =~ age65 + I(age65^2),                    random =~ age65 + I(age65^2), survival = Surv(age_init, agedem, dem)                   ~ CEP + male, hazard = \"Weibull\", subject = 'ID', data = paquidS,                   ng=2,B=binit, verbose=FALSE) # We can also start with a random departure: mj2d <- Jointlcmm(normMMSE ~ age65 + I(age65^2) + CEP, mixture =~ age65 + I(age65^2),                    random =~ age65 + I(age65^2), survival = Surv(age_init, agedem, dem)                   ~ CEP + male, hazard = \"Weibull\", subject = 'ID', data = paquidS,                   ng=2,B=random(mj1), verbose=FALSE) # Comparison of the model estimations summarytable(mj2,mj2b,mj2c,mj2d) #>      G    loglik npm      BIC  %class1  %class2 #> mj2  2 -9337.187  21 18804.84 21.04208 78.95792 #> mj2b 2 -9337.187  21 18804.84 78.95792 21.04208 #> mj2c 2 -9337.187  21 18804.84 78.95792 21.04208 #> mj2d 2 -9337.187  21 18804.84 21.04208 78.95792"},{"path":"/articles/joint_latent_class_model_with_Jointlcmm.html","id":"model-with-more-than-2-latent-classes","dir":"Articles","previous_headings":"First use of Jointlcmm function > 3. Estimation with different numbers of latent classes","what":"3.2 Model with more than 2 latent classes","title":"How to estimate a joint latent class mixed model using Jointlcmm function","text":"Estimation models 3 4 classes default values (based G=1 model estimates). program converge properly 100 iterations (maximum number iterations specified default). explained fact program converged non optimal point (local maximum). Indeed, looking results (loglikelihood estimates), model mj3 converged toward 1 class model model mj4 converged toward 2 class model. problem may happen user careful issue. can use initial values search global maximum another part parameter space: summary, choose 4 class model.   score test statistics rejects conditional independence 5% level shape curve ST according number class (asymptot) tells us probably never reach significance level.","code":"mj3 <- Jointlcmm(normMMSE ~ age65 + I(age65^2) + CEP, mixture =~ age65 + I(age65^2),                  random =~ age65 + I(age65^2), survival = Surv(age_init, agedem, dem)                   ~ CEP + male, hazard = \"Weibull\", subject = 'ID', data = paquidS,                   ng = 3, B = mj1, verbose=FALSE)  #> Infinite parameters... #> Last step values : #>       b : -0.02234216 0.05231468 0.1468811 3.443894 0.1038941 3.627087 0.1407071 3.791269 -0.2484354 -0.2007211 0.00358595 64.64416 129.2885 3.296868 5.598101 7.900332 -6.886679 -6.096577 -5.304574 13.65079 14.58773 -14.83558 15.37588 3.819362 -5.796416 3.343778 10.07244  #>       objective function : -9449.079  #>       Convergence criteria: parameters stability= 0  #>                           : function stability= 0  #>                           : best relative distance to maximum obtained (RDM)= 1  mj4 <- Jointlcmm(normMMSE ~ age65 + I(age65^2) + CEP, mixture =~ age65 + I(age65^2),                  random =~ age65 + I(age65^2), survival = Surv(age_init, agedem, dem)                   ~ CEP + male, hazard = \"Weibull\", subject = 'ID', data = paquidS,                   ng = 4, B = mj1,verbose=F) summarytable(mj1,mj2,mj3,mj4) #>     G        loglik npm          BIC   %class1  %class2  %class3 %class4 #> mj1 1 -9.449079e+03  15 1.899135e+04 100.00000                           #> mj2 2 -9.337187e+03  21 1.880484e+04  21.04208 78.95792                  #> mj3 3 -1.000000e+09  27 2.000000e+09   0.00000  0.00000  0.00000         #> mj4 4 -9.337187e+03  33 1.887939e+04   0.00000 78.95792 21.04208       0 # For 3 classes, we need 6 additional parameters compared to the 2 class model:  # 1 proba + 2 Weibull + 3 polynomial parameters.   Binit <- rep(0, length(mj2$best) + 6) Binit[c(2, 5:10, 12, 13, 15, 16, 18, 19:(length(Binit)))] <- mj2$best Binit[c(1, 3, 4, 11, 14, 17)] <- c(0, 0.11, 4, 70, 0, 0) mj3b <- Jointlcmm(normMMSE ~ age65 + I(age65^2) + CEP, mixture =~ age65 + I(age65^2),                    random =~ age65 + I(age65^2), survival = Surv(age_init, agedem, dem)                   ~ CEP + male, hazard = \"Weibull\", subject = 'ID', data = paquidS,                    ng = 3, B = Binit, verbose=FALSE)   # For the 4 class model, we can start from the three class model: Binit <- rep(0, length(mj3b$best) + 2 + 3 + 1) Binit[c(1, 2, 4:7, 10:15, 17:19, 21:23, 25:length(Binit))] <- mj3b$best Binit[c(3, 8, 9, 16, 20, 24)] <- c(-1, 0.1, 10, 60, 5, -10) mj4b <- Jointlcmm(normMMSE ~ age65 + I(age65^2) + CEP, mixture =~ age65 + I(age65^2),                   random =~ age65 + I(age65^2), survival = Surv(age_init, agedem, dem)                    ~ CEP + male, hazard = \"Weibull\", subject = 'ID', data = paquidS,                    ng = 4, B = Binit, verbose=FALSE)   # The best way is to use the grid search (although for the class, we consider only  # 10 replicates and 15 iterations at max so that it is not too long) # But it is always better to try more random departures and iterations.  # 3 class model with gridsearch mj3c <- gridsearch(rep = 10, maxiter = 15, minit = mj1, Jointlcmm(normMMSE ~ age65 +                   I(age65^2) + CEP, mixture =~ age65 + I(age65^2), random =~ age65 +                     I(age65^2), survival = Surv(age_init, agedem, dem) ~ CEP + male,                    hazard = \"Weibull\", subject = 'ID', data = paquidS, ng =3, verbose=FALSE))    # 4 class model with gridsearch mj4c <- gridsearch(rep = 10, maxiter = 15, minit = mj1, Jointlcmm(normMMSE ~ age65 +                   I(age65^2) + CEP, mixture =~ age65 + I(age65^2), random =~ age65 +                     I(age65^2), survival = Surv(age_init, agedem, dem) ~ CEP + male,                   hazard = \"Weibull\", subject = 'ID', data = paquidS, ng = 4,verbose=F)) # summarytable by default summarytable(mj1,mj2,mj3,mj3b,mj3c,mj4,mj4b,mj4c) #>      G        loglik npm          BIC   %class1   %class2  %class3  %class4 #> mj1  1 -9.449079e+03  15 1.899135e+04 100.00000                             #> mj2  2 -9.337187e+03  21 1.880484e+04  21.04208 78.957916                   #> mj3  3 -1.000000e+09  27 2.000000e+09   0.00000  0.000000  0.00000          #> mj3b 3 -9.294952e+03  27 1.875764e+04  68.33667 13.026052 18.63727          #> mj3c 3 -9.294952e+03  27 1.875764e+04  18.63727 68.336673 13.02605          #> mj4  4 -9.337187e+03  33 1.887939e+04   0.00000 78.957916 21.04208  0.00000 #> mj4b 4 -9.267481e+03  33 1.873998e+04  69.13828  3.006012 14.02806 13.82766 #> mj4c 4 -9.279455e+03  33 1.876393e+04  14.22846  9.819639 48.89780 27.05411 # summary table with other measures for those who converged:  summarytable(mj1,mj2,mj3c,mj4b,which=c(\"npm\",\"conv\",\"loglik\",\"BIC\",\"SABIC\",\"entropy\",\"scoretest\")) #>      npm conv    loglik      BIC    SABIC   entropy scoretest #> mj1   15    1 -9449.079 18991.35 18943.74 1.0000000         0 #> mj2   21    1 -9337.187 18804.84 18738.18 0.5905253         0 #> mj3c  27    1 -9294.952 18757.64 18671.94 0.5419923         0 #> mj4b  33    1 -9267.481 18739.98 18635.24 0.6052817         0 # plots summaryplot(mj1,mj2,mj3c,mj4b,which=c(\"BIC\",\"entropy\")) # score test statistics for the independence assumption ST <- c(mj1$scoretest[1],mj2$scoretest[1],mj3c$scoretest[1],mj4b$scoretest[1])  plot(ST ~ c(1:4),type=\"l\",bty='n',main=\"Score test\", xlab=\"number of classes\", ylab=\"\")"},{"path":[]},{"path":"/articles/joint_latent_class_model_with_Jointlcmm.html","id":"summary-of-the-estimation","dir":"Articles","previous_headings":"First use of Jointlcmm function","what":"4.1. Summary of the estimation","title":"How to estimate a joint latent class mixed model using Jointlcmm function","text":"summary gives important information","code":"summary(mj4b) #> Joint latent class model for quantitative outcome and competing risks  #>      fitted by maximum likelihood method  #>   #> Jointlcmm(fixed = normMMSE ~ age65 + I(age65^2) + CEP, mixture = ~age65 +  #>     I(age65^2), random = ~age65 + I(age65^2), subject = \"ID\",  #>     ng = 4, survival = Surv(age_init, agedem, dem) ~ CEP + male,  #>     hazard = \"Weibull\", data = paquidS) #>   #> Statistical Model:  #>      Dataset: paquidS  #>      Number of subjects: 499  #>      Number of observations: 2213  #>      Number of latent classes: 4  #>      Number of parameters: 33   #>      Event 1:  #>         Number of events: 128 #>         Class-specific hazards and  #>         Weibull baseline risk function  #>   #> Iteration process:  #>      Convergence criteria satisfied  #>      Number of iterations:  37  #>      Convergence criteria: parameters= 5.1e-07  #>                          : likelihood= 1.9e-09  #>                          : second derivatives= 2e-11  #>   #> Goodness-of-fit statistics:  #>      maximum log-likelihood: -9267.48   #>      AIC: 18600.96   #>      BIC: 18739.98   #>      Score test statistic for CI assumption: 30.667 (p-value=0)  #>   #> Maximum Likelihood Estimates:  #>   #> Fixed effects in the class-membership model: #> (the class of reference is the last class)  #>  #>                        coef       Se     Wald p-value #> intercept class1    0.65212  0.23030    2.832 0.00463 #> intercept class2   -1.43834  0.35000   -4.110 0.00004 #> intercept class3   -0.24518  0.24883   -0.985 0.32447 #>  #> Parameters in the proportional hazard model: #>  #>                                        coef       Se     Wald p-value #> event1 +/-sqrt(Weibull1) class 1    0.10121  0.00039  259.468 0.00000 #> event1 +/-sqrt(Weibull2) class 1    7.04817  0.82048    8.590 0.00000 #> event1 +/-sqrt(Weibull1) class 2    0.11421  0.00080  142.611 0.00000 #> event1 +/-sqrt(Weibull2) class 2    5.57068  0.73739    7.555 0.00000 #> event1 +/-sqrt(Weibull1) class 3    0.10955  0.00039  278.060 0.00000 #> event1 +/-sqrt(Weibull2) class 3    6.39438  0.42368   15.093 0.00000 #> event1 +/-sqrt(Weibull1) class 4    0.10567  0.00037  284.419 0.00000 #> event1 +/-sqrt(Weibull2) class 4    6.91442  0.50272   13.754 0.00000 #> CEP                                -0.66581  0.26347   -2.527 0.01150 #> male                                0.43642  0.29474    1.481 0.13869 #>  #> Fixed effects in the longitudinal model: #>  #>                         coef       Se     Wald p-value #> intercept class1    65.30224  3.38070   19.316 0.00000 #> intercept class2    83.22520  9.26192    8.986 0.00000 #> intercept class3    65.50576  4.93596   13.271 0.00000 #> intercept class4    57.39464  5.26996   10.891 0.00000 #> age65 class1         4.62182  3.73925    1.236 0.21645 #> age65 class2       -64.10601 16.27520   -3.939 0.00008 #> age65 class3        15.15503  6.72450    2.254 0.02421 #> age65 class4        19.31410  6.06023    3.187 0.00144 #> I(age65^2) class1   -3.25830  1.08339   -3.008 0.00263 #> I(age65^2) class2   16.81961  6.30158    2.669 0.00761 #> I(age65^2) class3  -16.26249  2.15040   -7.563 0.00000 #> I(age65^2) class4  -11.44706  1.80170   -6.353 0.00000 #> CEP                 12.80547  1.20940   10.588 0.00000 #>  #>  #> Variance-covariance matrix of the random-effects: #>             intercept     age65 I(age65^2) #> intercept   235.93031                      #> age65      -251.67607  439.6307            #> I(age65^2)   74.24157 -139.0736   45.49113 #>  #>                               coef       Se #> Residual standard error    9.94241  0.19331"},{"path":"/articles/joint_latent_class_model_with_Jointlcmm.html","id":"evaluation-of-the-classification","dir":"Articles","previous_headings":"First use of Jointlcmm function","what":"4.2. Evaluation of the classification","title":"How to estimate a joint latent class mixed model using Jointlcmm function","text":"major element joint latent class models posterior classification, discriminatory power classification.","code":"# table with the posterior classification head(mj4b$pprob) #>   ID class     probYT1      probYT2      probYT3   probYT4 #> 1  1     1 0.458599701 7.289192e-02 1.526894e-01 0.3158190 #> 2  2     4 0.002627611 1.713013e-06 4.695802e-01 0.5277904 #> 3  3     1 0.432859275 7.912249e-02 2.306033e-01 0.2574149 #> 4  4     4 0.260838221 2.008358e-15 9.800983e-03 0.7293608 #> 5  5     1 0.608782214 4.225492e-21 2.848206e-05 0.3911893 #> 6  6     4 0.009333558 2.860090e-14 1.728421e-02 0.9733822 # output for classification evaluation postprob(mj4b) #>   #> Posterior classification based on longitudinal and time-to-event data:  #>   class1 class2 class3 class4 #> N 345.00  15.00  70.00  69.00 #> %  69.14   3.01  14.03  13.83 #>   #> Posterior classification table:  #>      --> mean of posterior probabilities in each class  #>         prob1  prob2  prob3  prob4 #> class1 0.7188 0.0093 0.0817 0.1902 #> class2 0.0355 0.8873 0.0518 0.0254 #> class3 0.0565 0.0319 0.7978 0.1137 #> class4 0.1155 0.0000 0.0621 0.8224 #>   #> Posterior probabilities above a threshold (%):  #>          class1 class2 class3 class4 #> prob>0.7  49.28  86.67  67.14  71.01 #> prob>0.8  40.87  86.67  54.29  65.22 #> prob>0.9  31.30  73.33  52.86  59.42 #>   #>   #> Posterior classification based only on longitudinal data:  #>   class1 class2 class3 class4 #> N 344.00  16.00  68.00  71.00 #> %  68.94   3.21  13.63  14.23 #>"},{"path":"/articles/joint_latent_class_model_with_Jointlcmm.html","id":"graphs-for-the-fit","dir":"Articles","previous_headings":"First use of Jointlcmm function","what":"4.3 Graphs for the fit","title":"How to estimate a joint latent class mixed model using Jointlcmm function","text":"can assess fit model comparing predictions observations time intervals.   residuals longitudinal part:","code":"# overall plot(mj4b, which = \"fit\", var.time = \"age65\", marg = F, break.times = 10, bty = \"l\",       ylab = \"normMMSE\", xlab = \"Age in decades from 65 years\",shades=TRUE) # by covariate profile par(mfrow=c(1,2)) plot(mj4b, which = \"fit\", var.time = \"age65\", marg = F, break.times = 10, bty = \"l\",       ylab = \"normMMSE\", xlab = \"Age in decades from 65 years\",subset = dem == 1,      main=\"diagnosed as demented\",shades=TRUE) plot(mj4b, which = \"fit\", var.time = \"age65\", marg = F, break.times = 10, bty = \"l\",       ylab = \"normMMSE\", xlab = \"Age in decades from 65 years\",subset = dem == 0,      main=\"non diagnosed as demented\",shades=TRUE) plot(mj4b)"},{"path":"/articles/joint_latent_class_model_with_Jointlcmm.html","id":"graph-of-predicted-trajectories-according-to-a-profile-of-covariates","dir":"Articles","previous_headings":"First use of Jointlcmm function","what":"4.4. Graph of predicted trajectories according to a profile of covariates","title":"How to estimate a joint latent class mixed model using Jointlcmm function","text":"","code":"datnew <- data.frame(age65 = seq(0, 3, length=100)) datnew$male <- 0 datnew$CEP <- 0 # computation of the predictions mj4b.pred <- predictY(mj4b, newdata = datnew, var.time = \"age65\") plot(mj4b.pred, bty = \"l\", ylim = c(0, 80), legend.loc = \"bottomleft\",      ylab = \"normMMSE\", xlab = \"age in decades from 65 years\", lwd = 2)"},{"path":"/articles/joint_latent_class_model_with_Jointlcmm.html","id":"graph-of-predicted-cumulative-incidence-according-to-a-profile-of-covariates","dir":"Articles","previous_headings":"First use of Jointlcmm function","what":"4.5. Graph of predicted cumulative incidence according to a profile of covariates","title":"How to estimate a joint latent class mixed model using Jointlcmm function","text":"","code":"# graph of predicted survival trajectory for the reference group plot(mj4b, which = \"survival\", lwd = 2, legend.loc = F, bty = \"l\",      xlab = \"age in years\", ylab = \"dementia-free probability\") # computation of the cumulative incidence for a specific profile of covariates cuminc0 <- cuminc(mj4b,time = seq(65,95,by=1)) cuminc1 <- cuminc(mj4b,time = seq(65,95,by=1),CEP=1,male=1) # plot of cumulative incidences par(mfrow=c(1,2)) plot(cuminc0,title=\"CEP=0 and male=0\") plot(cuminc1,lty=2,title=\"CEP=1 and male=1\")"},{"path":[]},{"path":"/articles/joint_latent_class_model_with_Jointlcmm.html","id":"individual-dynamic-prediction","dir":"Articles","previous_headings":"C. To go further …","what":"1. Individual dynamic prediction","title":"How to estimate a joint latent class mixed model using Jointlcmm function","text":"joint latent class model can used provide individual dynamic prediction event observed repeated measures marker. usually done “new” subject (estimation data) class, focus subject 72:   objective provide dynamic predictions, predictive power model specifically checked using appropriate techniques. package internal measure, EPOCE quantifies pronostic information. measures AUC Brier Score, packages can used dynamic predictions obtained Jointlcmm, instance timeROC (Blanche et al., Biometrics 2015). example use EPOCE:  model 3 latent classes seems better predictive power 4 class model.","code":"paq72 <- paquidS[which(paquidS$ID == 72), ] # prediction computation dynp <- dynpred(mj4b, paq72, landmark = c(80, 90), var.time = \"age65\",                  horizon = c(1, 3, 5, 8, 9), fun.time = function(x) { 10 * x + 65 },                  draws = TRUE) #>       ID landmark horizon    pred_50   pred_2.5  pred_97.5 #>  [1,] 72       80       1 0.01797469 0.01057306 0.02874129 #>  [2,] 72       80       3 0.07759665 0.04932597 0.11964499 #>  [3,] 72       80       5 0.17502587 0.11968848 0.25335711 #>  [4,] 72       80       8 0.30397119 0.22710445 0.40682689 #>  [5,] 72       80       9 0.33984358 0.25896848 0.44169340 #>  [6,] 72       90       1 0.07702207 0.03484800 0.16304633 #>  [7,] 72       90       3 0.21470383 0.10418011 0.42931156 #>  [8,] 72       90       5 0.30736858 0.18049310 0.53129046 #>  [9,] 72       90       8 0.58875265 0.39850522 0.83032473 #> [10,] 72       90       9 0.72889171 0.49991931 0.95403561 # graph of predictions plot(dynp, landmark = 80, ylim = c(55, 85, 0, 1), col = c(1,2), pch = 20,      ylab = \"normMMSE\", main = \"At landmark age 80\", xlab = \"age in years\") plot(dynp, landmark = 90, ylim = c(55, 85, 0, 1), col = c(1,2), pch = 20,      ylab = \"normMMSE\", main = \"At landmark age 90\", xlab = \"age in years\") # definition of the prediction times landmark <- c(70, 72, 75, 77, 80, 82, 85, 87, 90) # calculation of the measure for each model. Be careful with the function which links  # the time in the longitudinal model and the time in the survival model (fun.time) epoce1 <- epoce(mj1, pred.times = landmark, var.time = \"age65\",fun.time =                    function(x) { 10 * x + 65 }) #> Be patient, epoce function is running ...  #> The program took 0.17 seconds epoce2 <- epoce(mj2, pred.times = landmark, var.time = \"age65\",fun.time =                    function(x) { 10 * x + 65 }) #> Be patient, epoce function is running ...  #> The program took 0.36 seconds epoce3 <- epoce(mj3b, pred.times = landmark, var.time = \"age65\",fun.time =                    function(x) { 10 * x + 65 }) #> Be patient, epoce function is running ...  #> The program took 0.56 seconds epoce4 <- epoce(mj4b, pred.times = landmark, var.time = \"age65\",fun.time =                    function(x) { 10 * x + 65}) #> Be patient, epoce function is running ...  #> The program took 0.81 seconds # computation of the differences in EPOCE diff23 <- Diffepoce(epoce2, epoce3) diff34 <- Diffepoce(epoce3, epoce4) # and the graphs for the results par(mfrow = c(1, 2)) plot(epoce1, ylim = c(0.5, 1.5), main = \"cross-validated EPOCE estimates\",bty = \"l\") plot(epoce2, add = TRUE, col = 2, lty = 2) plot(epoce3, add = TRUE, col = 3, lty = 3) plot(epoce4, add = TRUE, col = 4, lty = 4) legend(\"topright\", legend = c(\"G=1\", \"G=2\", \"G=3\", \"G=4\"), col = 1:4,lty = 1:4,         bty = \"n\") plot(diff23, main = \"Difference in EPOCE estimates\", lty = c(1, 2, 2),pch = 20,       ylim = c(-0.05, 0.30), bty = \"l\") plot(diff34, add = T, main = \"Difference in EPOCE estimates\", col = 4,      lty = c(1, 2, 2), pch = 18) legend(\"topleft\", legend = c(\"G=2/G=3\", \"G=3/G=4\", \"95%TI\", \"95%TI\"),        ncol = 2, col = c(1, 4, 1, 4), lty = c(1, 1, 2, 2), pch = c(20, 18, 20, 18),         bty = \"n\")"},{"path":"/articles/joint_latent_class_model_with_Jointlcmm.html","id":"competing-risks","dir":"Articles","previous_headings":"C. To go further …","what":"2. Competing risks","title":"How to estimate a joint latent class mixed model using Jointlcmm function","text":"Jointlcmm function can account competing risks structure call. difference definition time event minimum time causes event censoring. indicator event also indicates 0 censoring k cause k. Suppose information paquidS sample, namely variable Age_CR includes first event dementia death, Indic_CR indicates cause event, dementia death dementia. following give examples joint latent class models competing risks. regression, can consider specific effects cause() : Note different baseline risk functions can considered two events: can now use technique estimation G>1 model competing risks …","code":"# model with G=1 with Weibull for both events mj1_CR <- Jointlcmm(normMMSE ~ age65+I(age65^2) + CEP, random =~  age65+I(age65^2),                           survival = Surv(age_init, Age_CR, Indic_CR) ~ CEP + male,                           hazard = \"Weibull\", subject = 'ID', data = paquidS_CR, ng = 1) # model with G=1 and cause-specific effects of CEP and male mj1_CR_CS <- Jointlcmm(normMMSE ~ age65+I(age65^2) + CEP, random =~ age65+I(age65^2),                   survival = Surv(age_init, Age_CR, Indic_CR)  ~ cause(CEP)                  + cause(male), hazard = \"Weibull\", subject = 'ID', data = paquidS_CR,                  ng = 1,verbose=F) mj1_CR_WS <- Jointlcmm(normMMSE ~ age65+I(age65^2) + CEP, random =~  age65+I(age65^2),                           survival = Surv(age_init, Age_CR, Indic_CR) ~ CEP + male,                           hazard = c(\"Weibull\",\"splines\"), subject = 'ID', data = paquidS_CR, ng = 1) summary(mj1_CR_WS)"},{"path":"/articles/latent_class_model_with_hlme.html","id":"background-and-definitions","dir":"Articles","previous_headings":"","what":"Background and definitions","title":"How to estimate a latent class mixed model using hlme function","text":"linear mixed model assumes population N subjects homogeneous described population level unique profile \\(X_{}(t)\\beta\\). contrast, latent class mixed model consists assuming population heterogeneous composed \\(G\\) latent classes subjects characterized \\(G\\) mean profiles trajectories.","code":""},{"path":"/articles/latent_class_model_with_hlme.html","id":"the-latent-class-mixed-model","dir":"Articles","previous_headings":"Background and definitions","what":"The latent class mixed model","title":"How to estimate a latent class mixed model using hlme function","text":"Latent class membership defined discrete random variable \\(c_{}\\) equals \\(g\\) subject \\(\\) belongs latent class \\(g\\) (\\(g\\) = 1, …,\\(G\\)). variable \\(c_{}\\) latent; probability described using multinomial logistic model according covariates \\(X_{ci}\\): \\(\\pi_{ig}= P(c_{} = g|X_{ci}) = \\frac{\\exp(\\xi_{0g}+X_{ci}\\xi_{1g})}{ \\sum_{l=1}^{G}\\exp(\\xi_{0l}+X_{ci}\\xi_{1l})}\\) continuous Gaussian variable, trajectories \\(Y\\) defined conditionally latent class linear mixed model. , conditional class \\(g\\), model defined subject \\(\\) occasion \\(j\\):   \\[Y_{ij}|_{c_{}=g} = X_{2ij}\\beta+X_{3ij}\\gamma_{g}+Z_{ij}b_{}+\\epsilon_{ij}\\]   \\(X_{2ij}\\), \\(X_{3ij}\\) \\(Z_{ij}\\) vectors covariates respectively associated common fixed effects classes \\(\\beta\\), class-specific fixed effects \\(\\gamma_{g}\\) individual random effects \\(b_{}|_{ci=g}\\) called \\(b_{ig}\\) whose distributions now class-specific. \\(X_{2}\\) \\(X_{3}\\) can’t common variables.","code":""},{"path":"/articles/latent_class_model_with_hlme.html","id":"posterior-classification","dir":"Articles","previous_headings":"Background and definitions","what":"Posterior classification","title":"How to estimate a latent class mixed model using hlme function","text":"models involving latent classes, posterior classification subjects latent class can made. based posterior calculation class-membership probabilities used characterize classification subjects well evaluate goodness--fit model (Proust-Lima et al. 2014 - https://doi.org/10.1177/0962280212445839 ). Posterior class-membership probabilities computed using Bayes theorem probability belonging latent class given information collected. longitudinal model, defined subject \\(\\) latent class \\(g\\) :   \\[\\hat{\\pi}_{ig}^Y=P(c_{}=g|X_{},Y_{},\\hat{\\theta}_{G})\\] : \\(\\hat{\\theta}_{G}\\) vector parameters estimated \\(G\\) latent class model.    ","code":""},{"path":"/articles/latent_class_model_with_hlme.html","id":"example-for-gaussian-data","dir":"Articles","previous_headings":"","what":"Example for Gaussian Data","title":"How to estimate a latent class mixed model using hlme function","text":"example, study quadratic trajectory cognitive marker, Mini Mental State Examination (MMSE) pre-normalized (Gaussian distribution) sample old people (aged 65 years old inclusion) followed 15 years adjustment education level. model consider interactions although regression may considered.","code":""},{"path":"/articles/latent_class_model_with_hlme.html","id":"model-considered","dir":"Articles","previous_headings":"Example for Gaussian Data","what":"Model considered","title":"How to estimate a latent class mixed model using hlme function","text":"consider following latent class linear mixed model, \\(g\\) denotes class, \\(\\) subject \\(j\\) repeated measurement:   \\[normMMSE_{ij}|_{c_{}=g}=\\beta_{0g}+\\beta_{1g}age_{ij}+\\beta_{2g}age_{ij}^2+\\beta_{3}CEP_{}+u_{0ig}+u_{1ig}age_{ij}+u_{2ig}age_{ij}^2+\\epsilon_{ij}\\]   : \\(u_{ig} \\sim \\mathcal{N}(0,B_{g})\\) \\(\\epsilon_{ij} \\sim \\mathcal{N}(0,\\sigma^2)\\)   Fixed part \\(\\beta_{0g}+\\beta_{1g}age_{ij}+\\beta_{2g}age_{ij}^2+\\beta_{3}CEP_{}\\) mixture \\(age_{ij}\\) \\(age_{ij}^2\\); random part \\(u_{0ig}+u_{1ig}age_{ij}+u_{2ig}age_{ij}^2\\),  ","code":""},{"path":"/articles/latent_class_model_with_hlme.html","id":"dependent-variable-normalized-mmse","dir":"Articles","previous_headings":"Example for Gaussian Data","what":"Dependent variable: normalized MMSE","title":"How to estimate a latent class mixed model using hlme function","text":"  MMSE skewed distribution, use normalized version easily obtained NormPsy package (see Introduction vignette).    ","code":"library(NormPsy) paquid$normMMSE <- normMMSE(paquid$MMSE)"},{"path":"/articles/latent_class_model_with_hlme.html","id":"estimate-the-model-with-only-one-class-g1","dir":"Articles","previous_headings":"Example for Gaussian Data","what":"Estimate the model with only one class (G=1)","title":"How to estimate a latent class mixed model using hlme function","text":"Analysis done according age. avoid numerical problems, recenter scale age:   fit linear mixed model normMMSE: &nbsp","code":"paquid$age65 <- (paquid$age - 65)/10 m1 <- hlme(normMMSE ~ age65+I(age65^2)+CEP,random =~ age65+I(age65^2), subject = 'ID', data = paquid) # ng=1"},{"path":"/articles/latent_class_model_with_hlme.html","id":"estimate-the-model-with-more-than-one-class-g-1","dir":"Articles","previous_headings":"Example for Gaussian Data","what":"Estimate the model with more than one class (G > 1)","title":"How to estimate a latent class mixed model using hlme function","text":"model estimated assuming single latent class, can now search heterogeneous profiles. next lines provide estimation model 2 latent classes using automatic specification initial values \\(G>1\\).","code":"#Estimation considering 2 classes :  m2 <- hlme(normMMSE ~ age65+I(age65^2)+CEP, random =~ age65+I(age65^2), subject = 'ID', data = paquid, ng = 2, mixture=~age65+I(age65^2), B=m1)"},{"path":"/articles/latent_class_model_with_hlme.html","id":"be-careful-with-initial-values","dir":"Articles","previous_headings":"Example for Gaussian Data","what":"Be careful with initial values !","title":"How to estimate a latent class mixed model using hlme function","text":"Initial values specified argument B. option B=m1 automatically generates initial values maximum likelihood estimates 1-class model (, m1). specifying B specifying B=NULL recommended since induces internal pre-estimation model \\(G = 1\\) (.e m1) may substantially increase computational time.  ","code":""},{"path":"/articles/latent_class_model_with_hlme.html","id":"values-pre-specified-by-the-user","dir":"Articles","previous_headings":"Example for Gaussian Data > Be careful with initial values !","what":"Values pre-specified by the user","title":"How to estimate a latent class mixed model using hlme function","text":"following example, initial values pre-specified user: parameters variance covariance taken estimated values linear mixed model arbitrary initial values tried class-specific trajectories:  ","code":"m2b <- hlme(normMMSE ~ age65+I(age65^2)+CEP, random =~ age65+I(age65^2), subject = 'ID',data = paquid, ng = 2, mixture =~ age65+I(age65^2), B = c(0, 60, 40, 0, -4, 0, -10, 10, 212.869397, -216.421323,456.229910, 55.713775, -145.715516, 59.351000, 10.072221))"},{"path":"/articles/latent_class_model_with_hlme.html","id":"values-randomly-generated","dir":"Articles","previous_headings":"Example for Gaussian Data > Be careful with initial values !","what":"Values randomly generated","title":"How to estimate a latent class mixed model using hlme function","text":"alternative randomly generate initial values asymptotic distribution estimates 1-class model (, m1):  ","code":"m2c <- hlme(normMMSE ~ age65+I(age65^2)+CEP, random =~ age65+I(age65^2),subject = 'ID', data = paquid, ng = 2, mixture =~ age65+I(age65^2),  B = random(m1))"},{"path":"/articles/latent_class_model_with_hlme.html","id":"grid-search","dir":"Articles","previous_headings":"Example for Gaussian Data > Be careful with initial values !","what":"Grid search","title":"How to estimate a latent class mixed model using hlme function","text":"Finally, gridsearch function can used run automatic grid search. next examples \\(G=2\\) \\(G=3\\) classes (m2d m3b, respectively), hlme run maximum 30 iterations 100 random vectors initial values. estimation procedure finalized departure provided best log-likelihood 30 iterations.   method recommended enables better explore parameter space number replicates large enough number iterations fairly large.","code":"m2d <- gridsearch(hlme(normMMSE ~ age65+I(age65^2)+CEP,  random =~ age65+I(age65^2), subject = 'ID', data=paquid, ng = 2, mixture=~age65+I(age65^2)), rep=100, maxiter=30, minit=m1) m3g <- gridsearch(hlme(normMMSE ~ age65+I(age65^2)+CEP,  random =~ age65+I(age65^2), subject = 'ID', data=paquid, ng = 3, mixture=~age65+I(age65^2)), rep=100, maxiter=30, minit=m1)"},{"path":"/articles/latent_class_model_with_hlme.html","id":"choose-the-best-model","dir":"Articles","previous_headings":"Example for Gaussian Data","what":"Choose the best model","title":"How to estimate a latent class mixed model using hlme function","text":"  estimation process set models (usually varying number latent classes) can summarized summarytable plotted summaryplot. Different information can displayed:       summarize 6 models previously estimated. can see 2-class models converged estimation point. order classes changed. phenomenon called “label switching” often happens. problem: exact optimum.  ","code":"summarytable(m1,m2,m2b,m2c, m2d  , m3g, which = c(\"G\", \"loglik\", \"conv\", \"npm\", \"AIC\", \"BIC\", \"SABIC\", \"entropy\",\"ICL\", \"%class\"))     G    loglik conv npm      AIC      BIC    SABIC   entropy     ICL1     ICL2 m1  1 -8920.623    1  11 17863.25 17909.61 17874.69 1.0000000 17909.61 17909.61 m2  2 -8899.228    1  15 17828.46 17891.67 17844.06 0.5504369 18047.48 18050.54 m2b 2 -8899.228    1  15 17828.46 17891.67 17844.06 0.5504366 18047.48 18050.54 m2c 2 -8899.228    1  15 17828.46 17891.67 17844.06 0.5504369 18047.48 18050.54 m2d 2 -8899.228    1  15 17828.46 17891.67 17844.06 0.5504370 18047.48 18050.54 m3g 3 -8891.351    1  19 17820.70 17900.78 17840.47 0.6240325 18107.30 18089.55     %class1 %class2 %class3 m1    100.0                 m2     12.4    87.6         m2b    87.6    12.4         m2c    12.4    87.6         m2d    12.4    87.6         m3g    85.8     4.0    10.2  summaryplot(m1, m2, m3g, which = c(\"BIC\", \"entropy\",\"ICL\"))"},{"path":[]},{"path":"/articles/latent_class_model_with_hlme.html","id":"summary-of-the-model","dir":"Articles","previous_headings":"Example for Gaussian Data > Description of the 2-class linear mixed model","what":"Summary of the model","title":"How to estimate a latent class mixed model using hlme function","text":"","code":"summary(m2d) Heterogenous linear mixed model       fitted by maximum likelihood method    hlme(fixed = normMMSE ~ age65 + I(age65^2) + CEP, mixture = ~age65 +      I(age65^2), random = ~age65 + I(age65^2), subject = \"ID\",      ng = 2, data = paquid)   Statistical Model:       Dataset: paquid       Number of subjects: 500       Number of observations: 2214       Number of observations deleted: 36       Number of latent classes: 2       Number of parameters: 15     Iteration process:       Convergence criteria satisfied       Number of iterations:  1       Convergence criteria: parameters= 1.5e-10                           : likelihood= 2e-11                           : second derivatives= 1.9e-13    Goodness-of-fit statistics:       maximum log-likelihood: -8899.23        AIC: 17828.46        BIC: 17891.67       Maximum Likelihood Estimates:    Fixed effects in the class-membership model: (the class of reference is the last class)                          coef      Se     Wald p-value intercept class1   -1.31806 0.23136   -5.697 0.00000  Fixed effects in the longitudinal model:                          coef      Se     Wald p-value intercept class1    64.03287 5.96887   10.728 0.00000 intercept class2    63.55487 2.34057   27.154 0.00000 age65 class1        17.97202 9.16299    1.961 0.04984 age65 class2         3.55149 3.20467    1.108 0.26777 I(age65^2) class1  -16.30143 2.63069   -6.197 0.00000 I(age65^2) class2   -3.81582 1.00282   -3.805 0.00014 CEP                 14.11146 1.33668   10.557 0.00000   Variance-covariance matrix of the random-effects:             intercept     age65 I(age65^2) intercept   221.24245                      age65      -228.32072  429.3370            I(age65^2)   62.02014 -121.0904   36.73242                                 coef      Se Residual standard error:   10.05486 0.20136"},{"path":"/articles/latent_class_model_with_hlme.html","id":"predictions-of-the-trajectories","dir":"Articles","previous_headings":"Example for Gaussian Data > Description of the 2-class linear mixed model","what":"Predictions of the trajectories","title":"How to estimate a latent class mixed model using hlme function","text":"Class-specific predictions can computed data contained dataframe soon covariates specified model included dataframe. next lines, dataframe created generating vector \\(age\\) values 65 95 defining \\(CEP\\) 1 0. predictions computed predictY plotted associated plot functionality using standard R tools.     Predictions computed class point estimate:     Predictions can plotted:      want sense variability, can compute predictions confidence intervals plot :      Finally, predicted trajectories 1-, 2- 3-class models can represented together following graph:     ","code":"data_pred0 <- data.frame(age=seq(65,95,length.out=50),CEP=0) data_pred1 <- data.frame(age=seq(65,95,length.out=50),CEP=1) data_pred0$age65 <- (data_pred0$age - 65)/10 data_pred1$age65 <- (data_pred1$age - 65)/10 pred0 <- predictY(m2d, data_pred0, var.time = \"age\") pred1 <- predictY(m2d, data_pred1, var.time = \"age\") plot(pred0, col=c(\"red\",\"navy\"), lty=1,lwd=5,ylab=\"normMMSE\",legend=NULL,  main=\"Predicted trajectories for normMMSE \",ylim=c(0,100)) plot(pred1, col=c(\"red\",\"navy\"), lty=2,lwd=3,legend=NULL,add=TRUE) legend(x=\"topright\",legend=c(\"class1 :\",\"CEP-\",\"CEP+\",\"class2:\",\"CEP-\",\"CEP+\"), col=c(rep(\"red\",3),rep(\"navy\",3)), lwd=2, lty=c(0,1,2,0,1,2), ncol=2, bty=\"n\", cex = 0.7) predIC0 <- predictY(m2d, data_pred0, var.time = \"age\",draws=TRUE) predIC1 <- predictY(m2d, data_pred1, var.time = \"age\",draws=TRUE) plot(predIC0, col=c(\"deeppink\",\"deepskyblue\"), lty=1, lwd=2, ylab=\"normMMSE\", main=\"Predicted trajectories for normMMSE\", ylim=c(0,100), shades=TRUE) plot(predIC1, col=c(\"deeppink\",\"deepskyblue\"), lty=2, lwd=2, ylab=\"normMMSE\", main=\"Predicted trajectories for normMMSE\", legend=NULL, ylim=c(0,100), shades=TRUE, add=TRUE) predG1 <- predictY(m1, data_pred0, var.time = \"age\") predG3 <- predictY(m3g, data_pred0, var.time = \"age\")  par(mfrow=c(1,3)) plot(predG1, col=1, lty=1, lwd=2, ylab=\"normMMSE\", legend=NULL, main=\"Predicted trajectories G=1\",ylim=c(0,100)) plot(pred0, col=c(\"red\",\"navy\"), lty=1, lwd=2,ylab=\"normMMSE\", legend=NULL, main=\"Predicted trajectories G=2\", ylim=c(0,100)) plot(predG3, col=2:4, lty=1, lwd=2, ylab=\"normMMSE\", legend=NULL, main=\"Predicted trajectories G=3\", ylim=c(0,100))"},{"path":[]},{"path":"/articles/latent_class_model_with_hlme.html","id":"plot-of-the-residuals","dir":"Articles","previous_headings":"Example for Gaussian Data > Evaluation of the final latent class mixed model","what":"Plot of the residuals","title":"How to estimate a latent class mixed model using hlme function","text":"","code":"plot(m2d, cex.main=0.8)"},{"path":"/articles/latent_class_model_with_hlme.html","id":"graph-of-the-predictions-versus-observations","dir":"Articles","previous_headings":"Example for Gaussian Data > Evaluation of the final latent class mixed model","what":"Graph of the predictions versus observations","title":"How to estimate a latent class mixed model using hlme function","text":"  order evaluate fit selected model, plot simultaneously observations predicted values latent class.    graph shows good fit data.  ","code":"plot(m2d, which=\"fit\", var.time=\"age\", marg=FALSE, shades = TRUE)"},{"path":"/articles/latent_class_model_with_hlme.html","id":"classification","dir":"Articles","previous_headings":"Example for Gaussian Data > Evaluation of the final latent class mixed model","what":"Classification","title":"How to estimate a latent class mixed model using hlme function","text":"posterior classification model obtained :      Class 1 composed 62 subjects (12.4%), whereas 438 second class. can also see information discrimination power model : posterior classification table: subjects classified class 1 (resp. class 2) mean probability 0.8054 (resp. 0.8730) belong class. show good discrimination classes. proportion classified subjects threshold: 90.18% (resp. 61.29%) subjects class 1 (resp. 2) classified class posterior probability greater 70%.","code":"postprob(m2d)    Posterior classification:    class1 class2 N   62.0  438.0 %   12.4   87.6   Posterior classification table:       --> mean of posterior probabilities in each class          prob1  prob2 class1 0.8054 0.1946 class2 0.1270 0.8730   Posterior probabilities above a threshold (%):           class1 class2 prob>0.7  61.29  90.18 prob>0.8  58.06  69.18 prob>0.9  43.55  47.95"},{"path":"/articles/latent_class_model_with_hlme.html","id":"examples-with-other-types-of-dependent-variables","dir":"Articles","previous_headings":"","what":"Examples with other types of dependent variables","title":"How to estimate a latent class mixed model using hlme function","text":"Latent class mixed models can estimated types data within lcmm R package: lcmm function necessarily Gaussian longitudinal marker multlcmm function multiple longitudinal markers measuring underlying latent process Jointlcmm (shortcut jlcmm) function longitudinal markers measuring unique longitudinal dimension time event (possibly competing risks) mpjlcmm function multivariate longitudinal dimensions (.e., markers processes measured several markers) time event (possibly competing risks) functions come … ! time, functions (e.g., summarytable, gridsearch, postprob, predictY) apply exactly way.","code":""},{"path":"/articles/latent_process_model_with_lcmm.html","id":"background-on-the-model","dir":"Articles","previous_headings":"","what":"Background on the model","title":"How to estimate a latent process mixed model using lcmm function","text":"dynamic phenomenon can characterized latent process \\((\\Lambda(t))\\) evolves continuous time \\(t\\). modeling repeated measures marker, usually don’t think latent process measured error. Yet, underlying assumption made mixed model theory. Function lcmm exploits framework extend linear mixed model theory type outcome (ordinal, binary, continuous distribution).","code":""},{"path":"/articles/latent_process_model_with_lcmm.html","id":"the-latent-process-mixed-model","dir":"Articles","previous_headings":"Background on the model","what":"The latent process mixed model","title":"How to estimate a latent process mixed model using lcmm function","text":"latent process mixed model introduced Proust-Lima et al. (2006 - https://doi.org/10.1111/j.1541-0420.2006.00573.x 2013 - https://doi.org/10.1111/bmsp.12000 ). quantity interest defined latent process modeled according time using linear mixed model: \\[\\Lambda(t) = X(t) \\beta + Z(t)u_i +w_i(t)\\] : \\(X(t)\\) \\(Z(t)\\) vectors covariates (\\(Z(t)\\) included \\(X(t)\\)); \\(\\beta\\) fixed effects (.e., population mean effects); \\(u_i\\) random effects (.e., individual effects); distributed according zero-mean multivariate normal distribution covariance matrix \\(B\\); \\((w_i(t))\\) Gaussian process might added model relax intra-subject correlation structure. relationship latent process interest observations marker \\(Y_{ij}\\) (subject \\(\\) occasion \\(j\\)) simultaneously defined equation observation: \\[Y_{ij}  = H( ~ \\Lambda(t_{ij})+\\epsilon_{ij} ~ ; \\eta)\\] : \\(t_{ij}\\) time measurement subject \\(\\) occasion \\(j\\); \\(\\epsilon_{ij}\\) independent zero-mean Gaussian error; \\(H\\) link function (parameterized \\(\\eta\\)) transforms latent process scale metric marker. Different parametric families used. marker continuous, \\(H^{-1}\\) parametric family increasing monotonic functions among: linear transformation: reduces linear mixed model (2 parameters) Beta cumulative distribution family rescaled (4 parameters) basis quadratic -splines m knots (m+2 parameters) marker discrete (binary ordinal): \\(H\\) threshold function, level Y corresponds interval \\(\\Lambda(t_{ij})+\\epsilon_{ij}\\) boundaries estimated.","code":""},{"path":"/articles/latent_process_model_with_lcmm.html","id":"identifiability","dir":"Articles","previous_headings":"Background on the model","what":"Identifiability","title":"How to estimate a latent process mixed model using lcmm function","text":"latent variable model, metric latent variable defined. lcmm, variance errors 1 mean intercept (\\(\\beta\\)) 0.  ","code":""},{"path":"/articles/latent_process_model_with_lcmm.html","id":"example-with-ces-d","dir":"Articles","previous_headings":"","what":"Example with CES-D","title":"How to estimate a latent process mixed model using lcmm function","text":"vignette, latent process mixed models implemented lcmm illustrated study linear trajectory depressive symptoms (measured CES-D scale) according \\(age65\\) adjusted male. Correlated random effects intercept \\(age65\\) included.","code":""},{"path":"/articles/latent_process_model_with_lcmm.html","id":"model-considered","dir":"Articles","previous_headings":"Example with CES-D","what":"Model considered:","title":"How to estimate a latent process mixed model using lcmm function","text":"\\[CESD_{ij} = H(~  \\beta_{1}age65_{ij}+\\beta_{2}male_{}+\\beta_{3}age65_{ij}male_{} +u_{0i}+u_{1i}age65_{ij}+\\epsilon_{ij} ~ ; ~ \\eta)\\]   : \\(u_{} \\sim \\mathcal{N}(0,B)\\) \\(\\epsilon_{ij} \\sim \\mathcal{N}(0,1)\\)   Fixed part \\(\\beta_{1}age65_{ij}+\\beta_{2}male_{}+\\beta_{3}age65_{ij}male_{}\\) ; random part \\(u_{0i}+u_{1i}age65_{ij}\\).  ","code":""},{"path":"/articles/latent_process_model_with_lcmm.html","id":"estimate-the-model-for-different-continuous-link-functions-h","dir":"Articles","previous_headings":"Example with CES-D","what":"Estimate the model for different continuous link functions \\(H\\)","title":"How to estimate a latent process mixed model using lcmm function","text":"use age variable recentered around 65 years old decades: latent process mixed model can fitted different link functions shown . done argument link.","code":""},{"path":"/articles/latent_process_model_with_lcmm.html","id":"linear-link-function","dir":"Articles","previous_headings":"Example with CES-D > Estimate the model for different continuous link functions \\(H\\)","what":"Linear link function","title":"How to estimate a latent process mixed model using lcmm function","text":"defining linear link function, model reduces standard linear mixed model. model can fitted lcmm function (linear link function default): exact model one fitted hlme. difference hlme object parameterization intercept residual standard error considered rescaling parameters. log likelihood estimated parameters \\(\\beta\\) scale","code":"mlin <- lcmm(CESD ~ age65*male, random=~ age65, subject='ID', data=paquid) #link= linear mlin2 <- hlme(CESD ~ age65*male, random=~ age65, subject='ID', data=paquid) #link= linear mlin$loglik [1] -7056.652 mlin2$loglik [1] -7056.652 mlin$best                age65                 male           age65:male             0.3596478           -0.7416496            0.1647425              varcov 1             varcov 2             varcov 3             1.7524938           -0.3179336            0.1973436  Linear 1 (intercept)   Linear 2 (std err)             6.9846122            5.5489605  mlin2$best  intercept      age65       male age65:male   varcov 1   varcov 2   varcov 3   6.9846116  1.9956717 -4.1153838  0.9141495 53.9609787 -9.7894861  6.0764003      stderr   5.5489602"},{"path":"/articles/latent_process_model_with_lcmm.html","id":"nonlinear-link-function-1-beta-cumulative-distribution-function","dir":"Articles","previous_headings":"Example with CES-D > Estimate the model for different continuous link functions \\(H\\)","what":"Nonlinear link function 1: Beta cumulative distribution function","title":"How to estimate a latent process mixed model using lcmm function","text":"rescaled cumulative distribution function (CDF) Beta distribution provides concave, convex sigmoïd transformations marker underlying latent process.","code":"mbeta <- lcmm(CESD ~ age65*male, random=~ age65, subject='ID', data=paquid, link='beta')"},{"path":"/articles/latent_process_model_with_lcmm.html","id":"nonlinear-link-function-2-quadratic-i-splines","dir":"Articles","previous_headings":"Example with CES-D > Estimate the model for different continuous link functions \\(H\\)","what":"Nonlinear link function 2: Quadratic I-splines","title":"How to estimate a latent process mixed model using lcmm function","text":"family quadratic -splines approximates continuous increasing link function. involves nodes distributed within range marker. default, 5 equidistant knots located marker range used : example 5 knots placed quantiles:  ","code":"mspl <- lcmm(CESD ~ age65*male, random=~ age65, subject='ID', data=paquid, link='splines') mspl5q <- lcmm(CESD ~ age65*male, random=~ age65, subject='ID', data=paquid, link='5-quant-splines')"},{"path":"/articles/latent_process_model_with_lcmm.html","id":"select-the-best-model","dir":"Articles","previous_headings":"Example with CES-D","what":"Select the best model","title":"How to estimate a latent process mixed model using lcmm function","text":"Objects mlin, mbeta, mspl mspl5q latent process mixed models assume exact trajectory underlying latent process different link functions: linear,BetaCDF, -splines 5 equidistant knots (default link=‘splines’) -splines 5 knots percentiles, respectively. select appropriate link function, one can compare different models. Usually achieved comparing models terms goodness--fit using measures AIC UACV. summarytable command gives AIC (UACV output model):     case, model link function approximated -splines 5 knots placed quantiles provides best fit according AIC criterion.   different estimated link functions can compared plot:    see 2 splines transformations close. linear model seem appropriate, shown gap betwwen linear curve splines curves. beta transformation departs splines high values latent process.   Confidence bands transformations can obtained Monte Carlo method :     ","code":"summarytable(mlin,mbeta,mspl,mspl5q,which = c(\"loglik\", \"conv\", \"npm\", \"AIC\"))           loglik conv npm      AIC mlin   -7056.652    1   8 14129.30 mbeta  -6306.962    1  10 12633.92 mspl   -6509.681    1  13 13045.36 mspl5q -6320.085    1  13 12666.17 col <- rainbow(5) plot(mlin, which=\"linkfunction\", bty='l', ylab=\"CES-D\", col=col[1], lwd=2, xlab=\"underlying latent process\") plot(mbeta, which=\"linkfunction\", add=TRUE, col=col[2], lwd=2) plot(mspl, which=\"linkfunction\", add=TRUE, col=col[3], lwd=2) plot(mspl5q, which=\"linkfunction\", add=TRUE, col=col[4], lwd=2) legend(x=\"topleft\", legend=c(\"linear\", \"beta\",\"splines (5equidistant)\",\"splines (5 at quantiles)\"), lty=1, col=col, bty=\"n\", lwd=2) linkspl5q <- predictlink(mspl5q,ndraws=2000) plot(linkspl5q, col=col[4], lty=2, shades=TRUE) legend(x=\"left\", legend=c(\"95% confidence bands\",\"for splines at quantiles\"),lty=c(2,NA), col=c(col[4],NA), bty=\"n\", lwd=1, cex=0.8)"},{"path":"/articles/latent_process_model_with_lcmm.html","id":"estimate-the-model-with-a-discrete-link-function-h","dir":"Articles","previous_headings":"Example with CES-D","what":"Estimate the model with a discrete link function \\(H\\)","title":"How to estimate a latent process mixed model using lcmm function","text":"Sometimes, markers restricted number different levels, continuous link functions appropriate ordinal nature marker handled. lcmm function handles case considering threshold link function. However, one know numerical complexity model threshold link function much important (due numerical integration random effect distribution). kept mind fitting model number random effects chosen parcimoniously. Note model becomes cumulative probit mixed model. example \\(HIER\\) variable (4 levels) considering threshold link function CESD involve many parameters given range 0-52 (e.g., 52 threshold parameters).","code":"mthresholds <- lcmm(HIER ~ age65*male, random=~ age65, subject='ID', data=paquid, link='thresholds')"},{"path":[]},{"path":"/articles/latent_process_model_with_lcmm.html","id":"summary","dir":"Articles","previous_headings":"Example with CES-D > Postfit outputs","what":"Summary","title":"How to estimate a latent process mixed model using lcmm function","text":"summary model includes convergence, goodness fit criteria estimated parameters.","code":"summary(mspl5q)  General latent class mixed model       fitted by maximum likelihood method    lcmm(fixed = CESD ~ age65 * male, random = ~age65, subject = \"ID\",      link = \"5-quant-splines\", data = paquid)   Statistical Model:       Dataset: paquid       Number of subjects: 500       Number of observations: 2104       Number of observations deleted: 146       Number of latent classes: 1       Number of parameters: 13        Link function: Quadratic I-splines with nodes   0 2 6 12 52     Iteration process:       Convergence criteria satisfied       Number of iterations:  19       Convergence criteria: parameters= 1.3e-08                           : likelihood= 1.5e-07                           : second derivatives= 3.1e-14    Goodness-of-fit statistics:       maximum log-likelihood: -6320.08        AIC: 12666.17        BIC: 12720.96          Discrete posterior log-likelihood: -6309.09        Discrete AIC: 12644.18          Mean discrete AIC per subject: 12.6442        Mean UACV per subject: 12.6439        Mean discrete LL per subject: -12.6182     Maximum Likelihood Estimates:    Fixed effects in the longitudinal model:                                coef      Se    Wald p-value intercept (not estimated)        0                         age65                      0.42421 0.06279   6.756 0.00000 male                      -0.83140 0.19742  -4.211 0.00003 age65:male                 0.23371 0.10300   2.269 0.02327   Variance-covariance matrix of the random-effects:           intercept  age65 intercept   1.89911        age65      -0.39567 0.1711  Residual standard error (not estimated) = 1  Parameters of the link function:                 coef      Se    Wald p-value I-splines1 -2.03816 0.13469 -15.132 0.00000 I-splines2  1.04627 0.02461  42.510 0.00000 I-splines3  0.74190 0.03773  19.665 0.00000 I-splines4  0.98399 0.03237  30.400 0.00000 I-splines5  1.55606 0.04480  34.735 0.00000 I-splines6  0.93273 0.16614   5.614 0.00000 I-splines7  1.38790 0.17687   7.847 0.00000"},{"path":"/articles/latent_process_model_with_lcmm.html","id":"graph-of-predicted-trajectories-according-to-a-profile-of-covariates","dir":"Articles","previous_headings":"Example with CES-D > Postfit outputs","what":"Graph of predicted trajectories according to a profile of covariates","title":"How to estimate a latent process mixed model using lcmm function","text":"predicted trajectories can computed natural scale dependent variable according profile covariates:     plotted:     ","code":"datnew <- data.frame(age=seq(65,95,length=100)) datnew$age65 <- (datnew$age - 65)/10 datnew$male <- 0 women <- predictY(mspl5q, newdata=datnew, var.time=\"age\", draws=TRUE) datnew$male <- 1 men <- predictY(mspl5q, newdata=datnew, var.time=\"age\", draws=TRUE) plot(women, lwd=c(2,1), type=\"l\", col=6, ylim=c(0,20), xlab=\"age in year\",ylab=\"CES-D\",bty=\"l\", legend=NULL, shades = TRUE) plot(men, add=TRUE, col=4, lwd=c(2,1), shades=TRUE) legend(x=\"topleft\", bty=\"n\", ncol=2, lty=c(1,1,2,2), col=c(6,4,6,4), legend=c(\"women\",\"men\", \"95% CI\", \"95% CI\"), lwd=c(2,2,1,1))"},{"path":"/articles/latent_process_model_with_lcmm.html","id":"goodness-of-fit-1-plot-of-residuals","dir":"Articles","previous_headings":"Example with CES-D > Postfit outputs","what":"Goodness of fit 1: plot of residuals","title":"How to estimate a latent process mixed model using lcmm function","text":"subject-specific residuals (qqplot bottom right panel) Gaussian.  ","code":"plot(mspl5q, cex.main=0.9)"},{"path":"/articles/latent_process_model_with_lcmm.html","id":"goodness-of-fit-2-plot-of-predictions-versus-observations","dir":"Articles","previous_headings":"Example with CES-D","what":"Goodness of fit 2: plot of predictions versus observations","title":"How to estimate a latent process mixed model using lcmm function","text":"mean predictions observations can plotted according time. Note predictions observations scale latent process (observations transformed estimated link function):   ","code":"plot(mspl5q, which=\"fit\", var.time=\"age65\", bty=\"l\", xlab=\"(age-65)/10\", break.times=8, ylab=\"latent process\", lwd=2, marg=FALSE, ylim=c(-1,2), shades=TRUE, col=2)"},{"path":[]},{"path":"/articles/latent_process_model_with_lcmm.html","id":"heterogeneous-profiles-of-trajectories","dir":"Articles","previous_headings":"To go further …","what":"heterogeneous profiles of trajectories","title":"How to estimate a latent process mixed model using lcmm function","text":"latent process mixed model extends heterogeneous case latent classes. strategy explained hlme (see vignette ) can used.","code":""},{"path":"/articles/latent_process_model_with_lcmm.html","id":"joint-analysis-of-a-time-to-event","dir":"Articles","previous_headings":"To go further …","what":"joint analysis of a time to event","title":"How to estimate a latent process mixed model using lcmm function","text":"latent process mixed model extends case joint model. done Jointlcmm mpjlcmm. See Jointlcmm vignette.","code":""},{"path":"/articles/latent_process_model_with_lcmm.html","id":"multiple-markers-of-the-same-latent-process","dir":"Articles","previous_headings":"To go further …","what":"multiple markers of the same latent process","title":"How to estimate a latent process mixed model using lcmm function","text":"cases, several markers underlying latent process may measured. latent process mixed model extends case. purpose multlcmm (see vignette continuous ordinal outcomes.","code":""},{"path":"/articles/latent_process_model_with_multlcmm.html","id":"background-and-definitions","dir":"Articles","previous_headings":"","what":"Background and definitions","title":"How to estimate a latent process mixed model for multivariate markers using multlcmm function","text":"dynamic phenomenon can characterized latent process \\((\\Lambda(t))\\) evolves continuous time \\(t\\). Sometimes, latent process measured several markers latent process common factor. Function multlcmm treats idea extend linear mixed model theory several markers measuring underlying quantity, markers necessarily Gaussian.","code":""},{"path":"/articles/latent_process_model_with_multlcmm.html","id":"the-latent-process-mixed-model-for-multivariate-markers","dir":"Articles","previous_headings":"Background and definitions","what":"The latent process mixed model for multivariate markers","title":"How to estimate a latent process mixed model for multivariate markers using multlcmm function","text":"latent process mixed model introduced Proust-Lima et al. (2006 - https://doi.org/10.1111/j.1541-0420.2006.00573.x, 2013 - https://doi.org/10.1111/bmsp.12000 2022 - https://doi.org/10.1016/j.ymeth.2022.01.005 ). quantity interest defined latent process modeled according time using linear mixed model: \\[\\Lambda(t) = X(t) \\beta + Z(t)u_i +w_i(t)\\] : \\(X(t)\\) \\(Z(t)\\) vectors covariates (\\(Z(t)\\) included \\(X(t)\\)); \\(\\beta\\) fixed effects (.e., population mean effects); \\(u_i\\) random effects (.e., individual effects); distributed according zero-mean multivariate normal distribution covariance matrix \\(B\\); \\((w_i(t))\\) Gaussian process might added model relax intra-subject correlation structure. structural model \\(\\Lambda(t)\\) according time covariates exactly univariate case. \\[Y_{ijk} = H_{k}(~  \\Lambda(t_{ijk})+ X_{cijk}\\gamma_{k} + \\alpha_{ik} + \\epsilon_{ijk} ~ ; \\eta_{k}) \\] : \\(\\alpha_{ik} \\tilde{} N(0,\\sigma_k^2)\\) \\(X_{cijk}\\) vector covariates \\(\\gamma_k\\) contrasts (sum \\(k\\) equal 0) \\(t_{ijk}\\) time measurement subject \\(\\), marker \\(k\\) occasion \\(j\\); \\(\\epsilon_{ijk}\\) independent Gaussian error mean zero variance \\(\\sigma_{\\epsilon_k}^2\\); \\(H_k\\) link function (parameterized \\(\\eta_k\\)) transforms latent process scale metric marker \\(k\\). link functions univariate case (lcmm). continuous outcomes, \\(H^{-1}\\) parametric family increasing monotonic functions among: linear transformation: reduces linear mixed model (2 parameters) Beta cumulative distribution family rescaled (4 parameters) basis quadratic -splines m knots (m+2 parameters) binary ordinal outcomes, \\(H_k\\) links level variable interval values latent process plus measurement errors. corresponds (cumulative) probit model. describe case continuous link functions. ordinal markers, see vignette.","code":""},{"path":"/articles/latent_process_model_with_multlcmm.html","id":"identifiability","dir":"Articles","previous_headings":"Background and definitions","what":"Identifiability","title":"How to estimate a latent process mixed model for multivariate markers using multlcmm function","text":"latent variable model, metric latent variable defined. contrast lcmm function, variance first random effect \\(u_i\\) set 1 mean intercept (\\(\\beta\\)) set 0.  ","code":""},{"path":"/articles/latent_process_model_with_multlcmm.html","id":"example-with-cognitive-process","dir":"Articles","previous_headings":"","what":"Example with cognitive process","title":"How to estimate a latent process mixed model for multivariate markers using multlcmm function","text":"example, study cognitive trajectory time cognition defined common factor underlying three psychometric tests: MMSE, BVRT IST. timescale years since entry cohort, trajectory assumed quadratic time (individual population level) model adjusted \\(age\\) entry. investigate effect gender, mean effects common factor differential effects (contrasts) marker included (interaction time example).","code":""},{"path":"/articles/latent_process_model_with_multlcmm.html","id":"model-considered","dir":"Articles","previous_headings":"Example with cognitive process","what":"Model considered :","title":"How to estimate a latent process mixed model for multivariate markers using multlcmm function","text":"  \\[Y_{ijk} = H_k(~ \\beta_{1}t_{ij} + \\beta_{2}t_{ij}^2 +\\beta_{3}age75_{} + \\beta_{4}male_{} +\\gamma_{k}male_{} \\\\ +u_{0i}+u_{1i}t_{ij}+u_{2i}t_{ij}^2+ \\alpha_{ik} + \\omega_i(t_{ijk}) +\\epsilon_{ijk} ~~, \\eta_k)\\]   : \\(u_{}\\tilde{}N(0,B)\\) V(\\(u_{0i}\\))=1, \\(\\omega_i(t)\\) Brownian process, \\(\\alpha_{ik}\\tilde{}N(0,\\sigma_k^2)\\) k = 1,2,3: \\(Y_{ij1}= MMSE_{ij}\\) , \\(Y_{ij2}= IST_{ij}\\) \\(Y_{ij3}= BVRT_{ij})\\)  ","code":""},{"path":"/articles/latent_process_model_with_multlcmm.html","id":"estimation-with-different-link-functions","dir":"Articles","previous_headings":"Example with cognitive process","what":"Estimation with different link functions","title":"How to estimate a latent process mixed model for multivariate markers using multlcmm function","text":"first create variable time recenter scale age avoid numerical problems","code":"paquid$time <- (paquid$age - paquid$age_init)/10 paquid$age75 <- (paquid$age_init - 75)/10"},{"path":"/articles/latent_process_model_with_multlcmm.html","id":"linear-link-functions","dir":"Articles","previous_headings":"Example with cognitive process > Estimation with different link functions","what":"linear link functions","title":"How to estimate a latent process mixed model for multivariate markers using multlcmm function","text":"default, link functions set linear:  ","code":"mult_lin <- multlcmm(MMSE + IST + BVRT ~ age75 + male + time + I(time^2/10) + contrast(male), random =~ time +I(time^2 / 10), subject='ID', data = paquid, randomY = TRUE, cor = BM(time))"},{"path":"/articles/latent_process_model_with_multlcmm.html","id":"nonlinear-link-functions","dir":"Articles","previous_headings":"Example with cognitive process > Estimation with different link functions","what":"nonlinear link functions","title":"How to estimate a latent process mixed model for multivariate markers using multlcmm function","text":"Depending nature data, nonlinear link functions may necessary. instance, MMSE highly skewed:  univariate case, Beta CDF splines can considered. link function family can either markers (even parameters different): link functions can chosen differently. instance,","code":"par(mfrow=c(1,3)) hist(paquid$MMSE, breaks=31,main=\"MMSE distribution\") hist(paquid$IST, breaks=41,main=\"IST distribution\") hist(paquid$BVRT, breaks=16, main=\"BVRT distribution\") # Example with Beta mult_beta <- multlcmm(MMSE + IST + BVRT ~ age75 + male + time + I(time^2/10) + contrast(male), random =~ time + I(time^2/10), subject='ID', data = paquid, randomY = TRUE, cor = BM(time), link = 'beta') # different number of knots in splines mult_betaspl <- multlcmm(MMSE + IST + BVRT ~ age75 + male + time + I(time^2/10) + contrast(male), random =~time + I(time^2/10), subject='ID', data = paquid, randomY = TRUE, cor = BM(time), link = c('beta','3-quant-splines','3-quant-splines'))"},{"path":"/articles/latent_process_model_with_multlcmm.html","id":"fixing-some-transformation-parameters","dir":"Articles","previous_headings":"Example with cognitive process > Estimation with different link functions","what":"Fixing some transformation parameters","title":"How to estimate a latent process mixed model for multivariate markers using multlcmm function","text":"Note splines transformation may sometimes involve parameters close 0 entails lack convergence (since parameter boundary parameter space). often happens MMSE. instance, example , convergence reached easily third parameter MMSE transformation lower \\(10^{-4}\\). problem can easily dealt fixing parameter posfix option. , position parameter can identified vector estimates (21st parameter ): model can refitted estimates newly fixed parameter: constraint, model converges correctly.  ","code":"# with splines mult_splines <- multlcmm(MMSE + IST + BVRT ~ age75 + male + time + I(time^2/10) + contrast(male), random =~time + I(time^2/10), subject='ID', data = paquid, randomY = TRUE, cor = BM(time), maxiter=50, link = c('3-quant-splines')) mult_splines$best #>         age75          male          time  I(time^2/10)    contrast11  #> -1.010112e+00  1.517389e-01 -1.118084e+00 -2.478814e+00 -5.978284e-02  #>    contrast12      varcov 1      varcov 2      varcov 3      varcov 4  #> -2.512760e-01 -1.106827e-01  1.646540e+00  3.635506e-02 -5.852103e+00  #>      varcov 5          cor1     std.err 1     std.err 2     std.err 3  #>  3.512056e+01  9.040474e-01  9.131173e-01  8.691138e-01  1.312155e+00  #>  std.randomY1  std.randomY2  std.randomY3    I-splines1    I-splines2  #>  5.219795e-01  8.013844e-01  8.154404e-01 -6.345444e+00  9.980752e-01  #>    I-splines3    I-splines4    I-splines5    I-splines1    I-splines2  #> -3.231409e-05  2.443017e+00  1.370905e+00 -6.074106e+00  1.070865e+00  #>    I-splines3    I-splines4    I-splines5    I-splines1    I-splines2  #> -2.083883e+00  1.500616e+00 -1.398814e+00 -6.608395e+00  9.986261e-01  #>    I-splines3    I-splines4    I-splines5  #>  1.923664e+00  1.991036e+00  1.529003e+00 # with splines mult_splines2 <- multlcmm(MMSE + IST + BVRT ~ age75 + male + time + I(time^2/10) + contrast(male), random =~time + I(time^2/10), subject='ID', data = paquid, randomY = TRUE, cor = BM(time), maxiter=50, link = c('3-quant-splines'), posfix=21, B=mult_splines$best)"},{"path":"/articles/latent_process_model_with_multlcmm.html","id":"comparison-of-the-models","dir":"Articles","previous_headings":"Example with cognitive process","what":"Comparison of the models","title":"How to estimate a latent process mixed model for multivariate markers using multlcmm function","text":"Objects mult_lin, mult_beta, mult_betaspl, ‘mult_splines2’ multivariate latent process mixed models assume exact trajectory underlying latent process different link functions. univariate case, models can compared using information criteria. summarytable give us information.   Models involving Beta transformations splines transformations seem fit lot better terms AIC linear transformations showing departure normality.   transformations can plotted compared models:   Except linear transformations, estimation transformations really close.  ","code":"summarytable(mult_lin,mult_beta,mult_betaspl,mult_splines2, which =c(\"loglik\", \"conv\", \"npm\", \"AIC\"))                  loglik conv npm      AIC mult_lin      -15379.35    1  24 30806.70 mult_beta     -14374.60    1  30 28809.21 mult_betaspl  -14373.66    1  32 28811.33 mult_splines2 -14408.50    1  32 28881.00 par(mfrow=c(1,1)) col <- rainbow(4) plot(mult_splines2, which = \"linkfunction\", col = c(col[2],col[3],col[4]), lwd =1,lty=4) plot(mult_lin,which=\"linkfunction\", col = c(col[2],col[3],col[4]), lwd = 1,lty=2,add=TRUE) plot(mult_beta,which=\"linkfunction\", col = c(col[2],col[3],col[4]), lwd = 2,lty=3,add=TRUE) plot(mult_betaspl,which=\"linkfunction\", col = c(col[2],col[3],col[4]), lwd = 1,lty=1,add=TRUE) legend(x=\"bottomright\",lty=c(2,3,4,1),legend=c(\"linear\",\"beta\",\"splines\",\"beta/splines\"),bty=\"n\")"},{"path":[]},{"path":"/articles/latent_process_model_with_multlcmm.html","id":"estimated-link-functions","dir":"Articles","previous_headings":"Example with cognitive process > Postfit outputs","what":"Estimated link functions:","title":"How to estimate a latent process mixed model for multivariate markers using multlcmm function","text":"  Confidence intervals link functions can obtained Monte Carlo method:     ","code":"col <- rainbow(5) CIlink <- predictlink(mult_betaspl) plot(CIlink, col = c(col[2],col[3],col[4]), lwd = 2, shades = TRUE)"},{"path":"/articles/latent_process_model_with_multlcmm.html","id":"summary","dir":"Articles","previous_headings":"Example with cognitive process > Postfit outputs","what":"Summary","title":"How to estimate a latent process mixed model for multivariate markers using multlcmm function","text":"summary model includes convergence, goodness fit criteria estimated parameters. estimates, underlying cognition quadratic trajectory time, older subjects baseline systematically lower cognitive level. difference according gender. However, significantly differential effects gender psychometric tests (p=0.0003) systematically higher BVRT men higher IST levels women.","code":"summary(mult_betaspl)  General latent class mixed model       fitted by maximum likelihood method    multlcmm(fixed = MMSE + IST + BVRT ~ age75 + male + time + I(time^2/10) +      contrast(male), random = ~time + I(time^2/10), subject = \"ID\",      randomY = TRUE, link = c(\"beta\", \"3-quant-splines\", \"3-quant-splines\"),      cor = BM(time), data = paquid, nproc = 10)   Statistical Model:       Dataset: paquid       Number of subjects: 500       Number of observations: 6216       Number of latent classes: 1       Number of parameters: 32        Link functions: Standardised Beta CdF for MMSE                        Quadratic I-splines with nodes 5 27 40 for IST                       Quadratic I-splines with nodes 0 11 15 for BVRT    Iteration process:       Convergence criteria satisfied       Number of iterations:  31       Convergence criteria: parameters= 1e-07                           : likelihood= 1.5e-07                           : second derivatives= 5.1e-12    Goodness-of-fit statistics:       maximum log-likelihood: -14373.66        AIC: 28811.33        BIC: 28946.2     Maximum Likelihood Estimates:    Fixed effects in the longitudinal model:                                  coef      Se   Wald p-value intercept (not estimated)    0.00000                        age75                       -1.09189 0.11368 -9.605 0.00000 male                         0.14430 0.11934  1.209 0.22659 time                        -1.24025 0.19076 -6.502 0.00000 I(time^2/10)                -2.39711 0.98528 -2.433 0.01498 Contrasts on male (p=3e-04)                                 MMSE                        -0.07360 0.06931 -1.062 0.28829 IST                         -0.26698 0.07854 -3.399 0.00068 BVRT**                       0.34058 0.08810  3.866 0.00011   Variance-covariance matrix of the random-effects: (the variance of the first random effect is not estimated)              intercept     time I(time^2/10) intercept      1.00000                       time           0.05618  1.53473              I(time^2/10)  -0.77856 -5.22729     32.31854                         coef      Se BM standard error:  0.98003 0.13326                                           MMSE      IST     BVRT Residual standard error:              1.01982  0.93048  1.42284 Standard error of the random effect:  0.57605  0.85186  0.89027  Parameters of the link functions:                      coef      Se    Wald p-value MMSE-Beta1       1.41416 0.07051  20.056 0.00000 MMSE-Beta2      -0.25052 0.08346  -3.002 0.00269 MMSE-Beta3       0.45879 0.02586  17.741 0.00000 MMSE-Beta4       0.06439 0.00580  11.095 0.00000 IST-I-splines1  -6.51526 0.52193 -12.483 0.00000 IST-I-splines2   1.10955 0.15664   7.083 0.00000 IST-I-splines3   2.14896 0.09800  21.928 0.00000 IST-I-splines4   1.56009 0.08373  18.633 0.00000 IST-I-splines5   1.44628 0.07305  19.799 0.00000 BVRT-I-splines1 -7.31210 0.68892 -10.614 0.00000 BVRT-I-splines2  1.13661 0.26027   4.367 0.00001 BVRT-I-splines3  1.97351 0.12641  15.611 0.00000 BVRT-I-splines4  2.08216 0.09703  21.459 0.00000 BVRT-I-splines5  1.58945 0.07545  21.065 0.00000   ** coefficient not estimated but obtained from the others as minus the sum of them"},{"path":"/articles/latent_process_model_with_multlcmm.html","id":"variance-explained","dir":"Articles","previous_headings":"Example with cognitive process > Postfit outputs","what":"Variance explained","title":"How to estimate a latent process mixed model for multivariate markers using multlcmm function","text":"multivariate data, latent process common underlying factor different markers. Thus, can compute residual variance marker explained latent process. variance explained conditional covariates computed specific time. example, common factor explained 42% MMSE residual variation explained 26% BVRT residual variation time 0.","code":"VarExpl(mult_betaspl, data.frame(time=0))             class1 %Var-MMSE 42.16100 %Var-IST  38.58841 %Var-BVRT 26.19821"},{"path":"/articles/latent_process_model_with_multlcmm.html","id":"graph-of-predicted-trajectories-for-the-markers","dir":"Articles","previous_headings":"Example with cognitive process > Postfit outputs","what":"Graph of predicted trajectories for the markers","title":"How to estimate a latent process mixed model for multivariate markers using multlcmm function","text":"lcmm function, predicted trajectories markers can computed according covariate profile plotted.   ","code":"datnew <- data.frame(time=seq(0.08,2.2,length=100)) datnew$age_init<-seq(65,95, length=100) datnew$age75 <- ((datnew$age_init - 75)/10) datnew$male <- 0 predict_women<-predictY(mult_betaspl,newdata=datnew,var.time='time',draws=TRUE)  datnew$male <- 1 predict_men <- predictY(mult_betaspl,newdata=datnew,var.time='time',draws=TRUE)  par(mfrow=c(1,3)) plot(predict_women, lwd=c(2,1), type='l', col=6, ylim=c(0,30), xlab='time since entry (in decades)', ylab='Marker', bty='l', legend=NULL, shades=TRUE, outcome = 1, main='Mean predicted trajectory for MMSE') plot(predict_men, lwd=c(2,1), type='l', col=3, shades=TRUE, outcome = 1, add=TRUE) legend(1.5, 30, legend=c(\"Women\", \"Men\"), col=c(6,3), lty=1:2, cex=0.8,bty=\"n\") plot(predict_women, lwd=c(2,1), type='l', col=6, ylim=c(0,40), xlab='time since entry (in decades)', ylab='Marker', bty='l', legend=NULL, shades=TRUE, outcome = 2, main='Mean predicted trajectory for IST')  plot(predict_men, lwd=c(2,1), type='l', col=3, shades=TRUE, outcome = 2, add=TRUE) plot(predict_women, lwd=c(2,1), type='l', col=6, ylim=c(0,15), xlab='time since entry (in decades)', ylab='Marker', bty='l', legend=NULL, shades=TRUE, outcome = 3, main='Mean predicted trajectory for BVRT')  plot(predict_men, lwd=c(2,1), type='l', col=3, shades=TRUE, outcome = 3, add=TRUE)"},{"path":"/articles/latent_process_model_with_multlcmm.html","id":"goodness-of-fit-graph-of-the-residuals","dir":"Articles","previous_headings":"Example with cognitive process > Postfit outputs","what":"Goodness of fit: graph of the residuals","title":"How to estimate a latent process mixed model for multivariate markers using multlcmm function","text":"mixed model, expect subject-specicif residuals (bottom right panel) Gaussian.","code":"plot(mult_betaspl, cex.main=0.8)"},{"path":"/articles/latent_process_model_with_multlcmm.html","id":"goodness-of-fit-graph-of-the-predictions-versus-observations","dir":"Articles","previous_headings":"Example with cognitive process > Postfit outputs","what":"Goodness of fit: graph of the predictions versus observations","title":"How to estimate a latent process mixed model for multivariate markers using multlcmm function","text":"mean predictions observations can plotted according time. Note predictions observations scale latent process (observations transformed estimated link functions):   ","code":"par(mfrow=c(1,3)) plot(mult_betaspl, which=\"fit\", var.time=\"time\", bty=\"l\", xlab=\"time since entry (in decades)\", cex.lab=1.1, break.times=8, ylab=\"latent process\", lwd=2, marg=FALSE, ylim=c(-2,0.0), xlim=c(0.1,2), shades = TRUE, outcome = 1, col=2, main=\"MMSE predictions vs observations\")   plot(mult_betaspl, which=\"fit\", var.time=\"time\", bty=\"l\", xlab=\"time since entry (in decades)\", cex.lab=1.1, break.times=8, ylab=\"latent process\", lwd=2, marg=FALSE, ylim=c(-2,0.3), xlim=c(0.1,2), shades = TRUE, outcome = 2, col=3, main=\"IST predictions vs observations\")  plot(mult_betaspl, which=\"fit\", var.time=\"time\", bty=\"l\", xlab=\"time since entry (in decades)\", cex.lab=1.1, break.times=8, ylab=\"latent process\", lwd=2, marg=FALSE, ylim=c(-1.5,0.5), xlim=c(0.1,2), shades = TRUE, outcome = 3, col=4, main=\"BVRT predictions vs observations\")"},{"path":[]},{"path":"/articles/latent_process_model_with_multlcmm.html","id":"heterogeneous-profiles-of-trajectories","dir":"Articles","previous_headings":"To go further …","what":"heterogeneous profiles of trajectories","title":"How to estimate a latent process mixed model for multivariate markers using multlcmm function","text":"latent process mixed model multivariate markers extends heterogeneous case latent classes. strategy explained hlme can used.","code":""},{"path":"/articles/latent_process_model_with_multlcmm.html","id":"joint-analysis-of-a-time-to-event","dir":"Articles","previous_headings":"To go further …","what":"joint analysis of a time to event","title":"How to estimate a latent process mixed model for multivariate markers using multlcmm function","text":"latent process mixed model multivariate markers extends case joint model. done Jointlcmm one latent process involved mpjlcmm multivariate latent processes considered.","code":""},{"path":"/articles/latent_process_model_with_multlcmm_IRT.html","id":"importation","dir":"Articles","previous_headings":"","what":"Importation","title":"Continuous-time longitudinal IRT model","text":"longitudinal IRT model estimated via multlcmm function lcmm R package (Proust-Lima et al. 2017). following libraries used vignette:","code":"library(lcmm) library(ggplot2) library(ggpubr) library(splines) library(gridExtra) library(dplyr)"},{"path":"/articles/latent_process_model_with_multlcmm_IRT.html","id":"dataset","dir":"Articles","previous_headings":"","what":"Dataset","title":"Continuous-time longitudinal IRT model","text":"illustration simulated dataset mimics PREDIALA study described analyzed Proust-Lima et al. (2021). dataset called simdataIRT. contains following information: grp: group 0=dialyzed 1=preemptive sex: sex 0=woman 1=man age: age entry cohort hads_2 … hads_14 : 7 items HADS measuring depression ID: identification number patient time: time measurement (months since entry waiting list) time_entry: time waiting list entry cohort (months)","code":"str(simdataHADS) #> 'data.frame':    1140 obs. of  13 variables: #>  $ grp       : int  1 0 0 0 0 0 1 0 0 0 ... #>  $ sex       : int  1 0 0 0 0 0 1 1 1 1 ... #>  $ age       : num  59.5 58.2 58.2 58.2 58.2 ... #>  $ hads_2    : int  0 3 1 1 1 2 2 3 3 2 ... #>  $ hads_4    : int  0 0 0 1 0 1 3 2 2 2 ... #>  $ hads_6    : int  0 0 1 1 0 1 1 1 2 2 ... #>  $ hads_8    : int  1 0 1 0 1 1 1 2 1 2 ... #>  $ hads_10   : int  0 0 2 0 0 1 1 3 1 2 ... #>  $ hads_12   : int  0 0 0 0 0 1 2 3 3 2 ... #>  $ hads_14   : int  0 0 0 0 0 0 0 0 0 1 ... #>  $ ID        : int  1 2 2 2 2 2 3 4 4 4 ... #>  $ time      : num  7.74 3.18 8.95 15.08 19.74 ... #>  $ time_entry: num  7.74 3.18 3.18 3.18 3.18 ..."},{"path":"/articles/latent_process_model_with_multlcmm_IRT.html","id":"description-of-the-sample","dir":"Articles","previous_headings":"Dataset","what":"Description of the sample","title":"Continuous-time longitudinal IRT model","text":"","code":"demo <- simdataHADS %>% group_by(ID) %>% arrange(time) %>%   filter(row_number()==1) summary(demo) #>       grp              sex              age            hads_2       #>  Min.   :0.0000   Min.   :0.0000   Min.   :55.92   Min.   :0.0000   #>  1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:58.28   1st Qu.:0.0000   #>  Median :1.0000   Median :1.0000   Median :59.00   Median :1.0000   #>  Mean   :0.5722   Mean   :0.5954   Mean   :58.99   Mean   :0.8806   #>  3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:59.62   3rd Qu.:1.0000   #>  Max.   :1.0000   Max.   :1.0000   Max.   :61.96   Max.   :3.0000   #>      hads_4           hads_6           hads_8         hads_10       #>  Min.   :0.0000   Min.   :0.0000   Min.   :0.000   Min.   :0.0000   #>  1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:1.000   1st Qu.:0.0000   #>  Median :0.0000   Median :1.0000   Median :1.000   Median :0.0000   #>  Mean   :0.6613   Mean   :0.6827   Mean   :1.219   Mean   :0.6292   #>  3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:2.000   3rd Qu.:1.0000   #>  Max.   :3.0000   Max.   :3.0000   Max.   :3.000   Max.   :3.0000   #>     hads_12          hads_14             ID           time          #>  Min.   :0.0000   Min.   :0.0000   Min.   :  1   Min.   : 0.06557   #>  1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:141   1st Qu.: 2.65574   #>  Median :0.0000   Median :0.0000   Median :281   Median : 5.14754   #>  Mean   :0.6898   Mean   :0.3012   Mean   :281   Mean   : 8.24991   #>  3rd Qu.:1.0000   3rd Qu.:0.0000   3rd Qu.:421   3rd Qu.:11.04918   #>  Max.   :3.0000   Max.   :3.0000   Max.   :561   Max.   :43.14754   #>    time_entry       #>  Min.   : 0.06557   #>  1st Qu.: 2.65574   #>  Median : 5.14754   #>  Mean   : 8.24991   #>  3rd Qu.:11.04918   #>  Max.   :43.14754"},{"path":"/articles/latent_process_model_with_multlcmm_IRT.html","id":"timescale-of-interest-time-on-the-waiting-list","dir":"Articles","previous_headings":"Dataset","what":"Timescale of interest: time on the waiting list","title":"Continuous-time longitudinal IRT model","text":"timescale interest time months spent waiting list: time. timescale poses two problems: many studies, entry study occurs individual different timings progression disease. called delayed entry. differs usual time study entry corresponds time 0. entry (variable time_entry) corresponds duration waiting list inclusion, time 0 unlikely observed (.e., entry cohort occur time entry waiting list). timescale continuous per se, many values number total observations. prevents use methods considering discrete timescales measurements times individuals, classical longitudinal latent variable models. Distribution time entry time follow_ups  Quantiles distribution measurement times","code":"tempSim <- simdataHADS %>% group_by(ID) %>% arrange(time) %>% mutate(Visit=ifelse(time==time_entry,\"Entry\",\"Follow-up\"))  p <- ggplot(tempSim, aes(x=time,fill=Visit,color=Visit)) + geom_histogram(binwidth=1,aes(y=..density..)) +   labs(x=\"Months on the waiting list\") p + scale_color_grey(start = 0.1,   end = 0.5)+scale_fill_grey(start = 0.1,   end = 0.5) +   theme_classic() Warning:  [1m [22mThe dot-dot notation (`..density..`) was deprecated in ggplot2 3.4.0.  [36mℹ [39m Please use `after_stat(density)` instead.  [90mThis warning is displayed once every 8 hours. [39m  [90mCall `lifecycle::last_lifecycle_warnings()` to see where this warning was [39m  [90mgenerated. [39m quantile(simdataHADS$time,probs=(0:10)/10) #>          0%         10%         20%         30%         40%         50%  #>  0.06557377  2.29508190  3.90163950  6.64590183  8.84590190 11.57377100  #>         60%         70%         80%         90%        100%  #> 14.30163940 18.33770480 23.52131100 33.91803170 84.95082100"},{"path":"/articles/latent_process_model_with_multlcmm_IRT.html","id":"continuous-time-longitudinal-irt-model-estimation","dir":"Articles","previous_headings":"","what":"Continuous-time longitudinal IRT model estimation","title":"Continuous-time longitudinal IRT model","text":"consider longitudinal IRT model natural cubic splines time waiting list account possible nonlinear trajectory time, adjust trajectory group. consider 2 internal knots placed 7 15, shift right boundary 60 due long tail distribution. main analysis, estimate model differential item functioning (DIF) group response shift (RS) time.","code":""},{"path":"/articles/latent_process_model_with_multlcmm_IRT.html","id":"estimation-of-the-model-with-no-difrs","dir":"Articles","previous_headings":"Continuous-time longitudinal IRT model estimation","what":"Estimation of the model with no DIF/RS","title":"Continuous-time longitudinal IRT model","text":"reduce computation time, first estimate model 1 random-effect, random intercept. , use estimates initial values estimation model also includes random-effects time functions. Estimation involves numerical integration approximated quasi Monte-Carlo (QMC) 1000 points. induces intensive long computations shown give accurate results simulations. summary estimation:","code":"modIRT_i <- multlcmm(hads_2 + hads_4 +hads_6 + hads_8 +hads_10+hads_12 + hads_14 ~ ns(time,knots=c(7,15),Boundary.knots = c(0,60))*grp,random=~1,data=simdataHADS,subject=\"ID\",link=\"thresholds\",methInteg=\"QMC\",nMC=1000) # use the estimates as initial values - the vector c(0,1,0,0,1,0,0,0,1) initializes the cholesky matrix of the random-effects Binit <- c(modIRT_i$best[1:7],c(0,1,0,0,1,0,0,0,1),modIRT_i$best[8:length(modIRT_i$best)])  modIRT <- multlcmm(hads_2 + hads_4 +hads_6 + hads_8 +hads_10+hads_12 + hads_14 ~ ns(time,knots=c(7,15),Boundary.knots = c(0,60))*grp,random=~1+ns(time,knots=c(7,15),Boundary.knots = c(0,60)),data=simdataHADS,subject=\"ID\",link=\"thresholds\",methInteg=\"QMC\",nMC=1000, B=Binit) summary(modIRT) #> General latent class mixed model  #>      fitted by maximum likelihood method  #>   #> multlcmm(fixed = hads_2 + hads_4 + hads_6 + hads_8 + hads_10 +  #>     hads_12 + hads_14 ~ ns(time, knots = c(7, 15), Boundary.knots = c(0,  #>     60)) * grp, random = ~1 + ns(time, knots = c(7, 15), Boundary.knots = c(0,  #>     60)), subject = \"ID\", link = \"thresholds\", data = simdataHADS,  #>     methInteg = \"QMC\", nMC = 1000, nproc = 20) #>   #> Statistical Model:  #>      Dataset: simdataHADS  #>      Number of subjects: 561  #>      Number of observations: 7980  #>      Number of latent classes: 1  #>      Number of parameters: 44   #>      Link functions: Thresholds for hads_2  #>                      Thresholds for hads_4  #>                      Thresholds for hads_6  #>                      Thresholds for hads_8  #>                      Thresholds for hads_10  #>                      Thresholds for hads_12  #>                      Thresholds for hads_14  #>   #> Iteration process:  #>      Convergence criteria satisfied  #>      Number of iterations:  23  #>      Convergence criteria: parameters= 1.5e-07  #>                          : likelihood= 2.9e-05  #>                          : second derivatives= 6e-06  #>   #> Goodness-of-fit statistics:  #>      maximum log-likelihood: -7218.07   #>      AIC: 14524.13   #>      BIC: 14714.64   #>   #> Maximum Likelihood Estimates:  #>   #> Fixed effects in the longitudinal model: #>  #>                               coef      Se   Wald p-value #> intercept (not estimated)  0.00000                        #> ns(...)1                  -0.12557 0.13637 -0.921 0.35718 #> ns(...)2                   0.21602 0.22892  0.944 0.34534 #> ns(...)3                   0.52819 0.17406  3.034 0.00241 #> grp                       -0.56649 0.15226 -3.721 0.00020 #> ns(...)1:grp               0.21044 0.20316  1.036 0.30027 #> ns(...)2:grp               0.46316 0.33009  1.403 0.16058 #> ns(...)3:grp              -0.00636 0.24646 -0.026 0.97942 #>  #>  #> Variance-covariance matrix of the random-effects: #> (the variance of the first random effect is not estimated) #>           intercept ns(...)1 ns(...)2 ns(...)3 #> intercept   1.00000                            #> ns(...)1   -0.46121  0.84470                   #> ns(...)2   -1.14421  1.12605  2.66212          #> ns(...)3   -0.26878  0.58923  0.66262  0.46238 #>  #>                            hads_2   hads_4   hads_6   hads_8  hads_10  hads_12 #> Residual standard error:  0.79159  0.64076  1.03750  1.00833  1.06157  0.68536 #>                           hads_14 #> Residual standard error:  1.63011 #>  #> Parameters of the link functions: #>  #>                     coef      Se   Wald p-value #> hads_2-Thresh1  -0.53483 0.11863 -4.508 0.00001 #> hads_2-Thresh2   1.13007 0.05254 21.509 0.00000 #> hads_2-Thresh3   0.89283 0.04974 17.949 0.00000 #> hads_4-Thresh1  -0.22854 0.10998 -2.078 0.03770 #> hads_4-Thresh2   1.01804 0.04766 21.361 0.00000 #> hads_4-Thresh3   1.04826 0.05791 18.102 0.00000 #> hads_6-Thresh1  -0.37848 0.11770 -3.216 0.00130 #> hads_6-Thresh2   1.35627 0.06718 20.188 0.00000 #> hads_6-Thresh3   1.32585 0.09338 14.198 0.00000 #> hads_8-Thresh1  -1.37992 0.16595 -8.315 0.00000 #> hads_8-Thresh2   1.34364 0.06319 21.262 0.00000 #> hads_8-Thresh3   1.10211 0.05741 19.196 0.00000 #> hads_10-Thresh1 -0.01232 0.11044 -0.112 0.91115 #> hads_10-Thresh2  1.00872 0.05355 18.839 0.00000 #> hads_10-Thresh3  1.10947 0.06459 17.176 0.00000 #> hads_12-Thresh1 -0.19444 0.11018 -1.765 0.07760 #> hads_12-Thresh2  0.99923 0.04764 20.973 0.00000 #> hads_12-Thresh3  1.02758 0.05720 17.966 0.00000 #> hads_14-Thresh1  0.92540 0.17048  5.428 0.00000 #> hads_14-Thresh2  1.49075 0.09725 15.330 0.00000 #> hads_14-Thresh3  0.87089 0.10087  8.634 0.00000"},{"path":[]},{"path":"/articles/latent_process_model_with_multlcmm_IRT.html","id":"plot-of-predicted-mean-trajectories","dir":"Articles","previous_headings":"Continuous-time longitudinal IRT model estimation > Predicted underlying depressive symptomatolgy trajectory","what":"plot of predicted mean trajectories","title":"Continuous-time longitudinal IRT model","text":"predicted trajectory underlying process can obtained predictL function associated plot function.","code":"datnew <- data.frame(time = seq(0,75,by=1)) datnew$grp <- 0 pIRT0 <- predictL(modIRT,datnew,var.time=\"time\",confint = T) datnew$grp <- 1 pIRT1 <- predictL(modIRT,datnew,var.time=\"time\",confint = T) plot(pIRT0,col=1,lwd=2,ylim=c(-1.5,1.5),legend=NULL,main=\"\",ylab=\"latent depressive symptomatology\",xlab=\"months since entry on the waiting list\",type=\"l\",bty=\"l\",shades=T) plot(pIRT1,add=T,col=4,lwd=2,shades=T) legend(x=\"topleft\",legend=c(\"dialysed\",\"preemptive\"),lty=c(1,1),col=c(1,4),lwd=2,bty=\"n\")"},{"path":"/articles/latent_process_model_with_multlcmm_IRT.html","id":"posteriori-distribution","dir":"Articles","previous_headings":"Continuous-time longitudinal IRT model estimation > Predicted underlying depressive symptomatolgy trajectory","what":"Posteriori distribution","title":"Continuous-time longitudinal IRT model","text":"better appreciate range underlying depressive symptomatology, empirical posterior distribution can computed  95% range underlying distribution approximately:","code":"beta <- modIRT$best t <- 0:72 Z <- cbind(rep(1,length(t)),ns(t,knots=c(7,15),Boundary.knots = c(0,60))) chol <- matrix(0,ncol=4,nrow=4) chol[upper.tri(chol, diag = T)] <- c(1,beta[7:15]) library(mvtnorm) Lambda0 <- rmvnorm(10000,mean = Z%*%c(0,beta[1:3]),Z%*%t(chol)%*%chol%*%t(Z)) Lambda1 <- rmvnorm(10000,mean = Z%*%beta[4:7],Z%*%t(chol)%*%chol%*%t(Z)) Lambda <- data.frame(Lambda = as.vector(rbind(Lambda0,Lambda1))) phist <- ggplot(Lambda,aes(x=Lambda))+ geom_density(color=\"grey\", fill=\"grey\") + theme_bw() +   xlab(\"underlying depressive symptomatology\") +xlim(-7,7) phist Warning:  [1m [22mRemoved 31657 rows containing non-finite values (`stat_density()`). quantile(Lambda$Lambda,p=c(0.025,0.975)) #>      2.5%     97.5%  #> -5.457706  5.463216"},{"path":"/articles/latent_process_model_with_multlcmm_IRT.html","id":"location-and-discrimination-of-the-items-with-se-by-delta-method","dir":"Articles","previous_headings":"Continuous-time longitudinal IRT model estimation","what":"Location and discrimination of the items (with SE by Delta-Method)","title":"Continuous-time longitudinal IRT model","text":"location discrimination parameters transformations estimated parameters. retrieved following code: isolate corresponding parameters within vector estimated parameters (corresponding variance covariance matrix) retransform parameters obtain locations discrimination item corresponding standard deviation (computed via Delta-method) 3 thresholds discrimination estimates item :","code":"## Parameters nlevel <- 4 nitems <- 7 levels <- rep(nlevel,nitems) npm <- length(modIRT$best) seuils <- modIRT$best[(npm-(nlevel-1)*(nitems)+1):(npm)] err <- abs(modIRT$best[(npm-(nlevel-1)*(nitems)-(nitems-1)):(npm-(nlevel-1)*(nitems))]) seuils #>     Thresh1     Thresh2     Thresh3     Thresh1     Thresh2     Thresh3  #> -0.53482702  1.13007471  0.89283211 -0.22854149  1.01804259  1.04826421  #>     Thresh1     Thresh2     Thresh3     Thresh1     Thresh2     Thresh3  #> -0.37847963  1.35626552  1.32584882 -1.37992176  1.34363560  1.10210680  #>     Thresh1     Thresh2     Thresh3     Thresh1     Thresh2     Thresh3  #> -0.01232312  1.00871824  1.10947092 -0.19444285  0.99923061  1.02758213  #>     Thresh1     Thresh2     Thresh3  #>  0.92539951  1.49075284  0.87088592 err #> std.err 1 std.err 2 std.err 3 std.err 4 std.err 5 std.err 6 std.err 7  #> 0.7915877 0.6407606 1.0374977 1.0083297 1.0615722 0.6853637 1.6301109 # Variance Vseuils <- VarCov(modIRT)[(npm-(nlevel-1)*(nitems)+1):(npm),(npm-(nlevel-1)*(nitems)+1):(npm)] Verr <- VarCov(modIRT)[(npm-(nlevel-1)*(nitems)-(nitems-1)):(npm-(nlevel-1)*(nitems)),(npm-(nlevel-1)*(nitems)-(nitems-1)):(npm-(nlevel-1)*(nitems))] # generic function location <- function(min,max,param,Vparam){   loc <- param[1]   se <- sqrt(Vparam[1,1])   param2 <- rep(0,length(param))   param2[1] <- 1   if ((max-min)>1) {     for (l in 1:(max-min-1)) {       param2[l+1] <- 2*param[l+1]       loc[l+1] <- loc[l] + param[1+l]^2       se[l+1] <- sqrt(t(param2) %*%Vparam %*%param2)     }   }   return(c(loc,se)) } # application ItemLoc <- sapply(1:nitems,function(k){location(min=0,max=nlevel-1,param=seuils[((nlevel-1)*(k-1)+1):((nlevel-1)*k)],Vparam=Vseuils[((nlevel-1)*(k-1)+1):((nlevel-1)*k),((nlevel-1)*(k-1)+1):((nlevel-1)*k)])}) colnames(ItemLoc) <- paste(\"Item\",(1:nitems)*2) ItemLoc <- ItemLoc[c(1,4,2,5,3,6),] rownames(ItemLoc) <- rep(c(\"Threshold\",\"SE\"),nlevel-1) discrimination <- 1/abs(err) sediscr <- diag(err^(-2))%*%Verr%*%diag(err^(-2)) t(rbind(ItemLoc,discrimination,Se=sqrt(diag(sediscr)))) #>           Threshold        SE Threshold        SE Threshold        SE #> Item 2  -0.53482702 0.1186315 0.7422418 0.1288603  1.539391 0.1787193 #> Item 4  -0.22854149 0.1099764 0.8078692 0.1294450  1.906727 0.2056184 #> Item 6  -0.37847963 0.1177005 1.4609765 0.1831477  3.218852 0.3678817 #> Item 8  -1.37992176 0.1659480 0.4254349 0.1201425  1.640074 0.1930347 #> Item 10 -0.01232312 0.1104402 1.0051894 0.1503464  2.236115 0.2509225 #> Item 12 -0.19444285 0.1101780 0.8040190 0.1314460  1.859944 0.2049276 #> Item 14  0.92539951 0.1704771 3.1477435 0.4110930  3.906186 0.5132664 #>         discrimination         Se #> Item 2       1.2632839 0.12076274 #> Item 4       1.5606453 0.15190436 #> Item 6       0.9638575 0.09865421 #> Item 8       0.9917392 0.09708010 #> Item 10      0.9419990 0.09708166 #> Item 12      1.4590793 0.14172215 #> Item 14      0.6134552 0.07734546"},{"path":"/articles/latent_process_model_with_multlcmm_IRT.html","id":"item-category-probability-curve","dir":"Articles","previous_headings":"Continuous-time longitudinal IRT model estimation","what":"item category probability curve","title":"Continuous-time longitudinal IRT model","text":"curve item category probability according underlying level depressive symptomatology can obtain usinf ItemInfo function.","code":"## computations info_modIRT <- ItemInfo(modIRT, lprocess=seq(-6,6,0.1))  meaning <- c(\"Enjoy\",\"Laugh\",\"Cheerful\" ,\"Slow\" ,\"Appearance\" ,\"Looking Forward\" ,\"Leisure\") items <- paste(\"hads\", seq(2,14,2), sep=\"_\")  ## automatic graph par(mfrow=c(2,4), mar=c(3,2,2,1), mgp=c(2,0.5,0)) for(k in 1:7) {       plot(info_modIRT, which=\"LevelProb\", outcome=items[k],       main=paste(\"Item\",2*k,\"-\",meaning[k]), lwd=2, legend=NULL) } plot(0,axes=FALSE, xlab=\"\", ylab=\"\", col=\"white\") legend(\"center\", legend=paste(\"Level\",0:3), col=1:4, lwd=2, box.lty=0) ## graph with ggplot p <- NULL for (k in 1:7){ ICC  <- info_modIRT$LevelInfo[which(info_modIRT$LevelInfo[,1]==items[k]),] p[[k]] <- (ggplot(ICC)       + geom_line(aes(x = Lprocess, y = Prob, group = Level,color=Level), show.legend = F,alpha = 1,size=1.2)       # + stat_smooth(aes(x = time, y = hads_scorea), method = \"loess\", size = 0.75)       + theme_bw()       + labs(title=paste(\"Item\",2*k,\"-\",meaning[k]))       + xlab(\"construct\")       + ylim(0,1)       + ylab(\"Probability of item level\")) } Warning:  [1m [22mUsing `size` aesthetic for lines was deprecated in ggplot2 3.4.0.  [36mℹ [39m Please use `linewidth` instead.  [90mThis warning is displayed once every 8 hours. [39m  [90mCall `lifecycle::last_lifecycle_warnings()` to see where this warning was [39m  [90mgenerated. [39m p[[8]] <- (ggplot(ICC)       + geom_line(aes(x = Lprocess, y = Prob, group = Level,color=Level),alpha = 1,size=1.2)       + theme_bw() ) legend <- get_legend(p[[8]]) grid.arrange(p[[1]],p[[2]],p[[3]],p[[4]],p[[5]],p[[6]],p[[7]],as_ggplot(legend),ncol=4)"},{"path":"/articles/latent_process_model_with_multlcmm_IRT.html","id":"item-characteristic-curves","dir":"Articles","previous_headings":"Continuous-time longitudinal IRT model estimation","what":"Item characteristic curves","title":"Continuous-time longitudinal IRT model","text":"following code computes expectation item according underlying level depressive symptomatology. achieved predictYcond function two plot possibilities: direct plot function ggplot","code":"expe <- predictYcond(modIRT,lprocess = seq(-6,6,by=0.1)) # via the internal plot function  plot(expe, xlab=\"underlying depressive symptomatology\", main=\"Item Expectation Curves\",      legend=paste(\"Item\",(1:nitems)*2), lwd=2) # via ggplot j <- table(expe$pred$Yname)[1] expe$pred$item <- as.factor(c(rep(2,j),rep(4,j),rep(6,j),rep(8,j),rep(10,j),rep(12,j),rep(14,j))) p <- (ggplot(expe$pred)       + geom_line(aes(x = Lprocess, y = Ypred, group=item,color=item),alpha = 1,size=1.2)       + theme_bw()       + xlab(\"underlying depressive symptomatology\")       + ylim(0,3)       + ylab(\"Item Expectation\")) p"},{"path":"/articles/latent_process_model_with_multlcmm_IRT.html","id":"item-information-function","dir":"Articles","previous_headings":"Continuous-time longitudinal IRT model estimation","what":"Item Information Function","title":"Continuous-time longitudinal IRT model","text":"level information brought item category (information share) brought total item also computed ItemInfo function. curves can plotted directly options =“LevelInfo” =“ItemInfo” respectively.","code":""},{"path":"/articles/latent_process_model_with_multlcmm_IRT.html","id":"by-category","dir":"Articles","previous_headings":"Continuous-time longitudinal IRT model estimation > Item Information Function","what":"by Category","title":"Continuous-time longitudinal IRT model","text":"","code":"par(mfrow=c(2,4), mar=c(3,2,2,1), mgp=c(2,0.5,0)) for(k in 1:7) {       plot(info_modIRT, which=\"LevelInfo\", outcome=items[k],  main=paste(\"Item\",2*k,\"-\",meaning[k]), lwd=2, legend=NULL, ylim=c(0,1.3)) } plot(0,axes=FALSE, xlab=\"\", ylab=\"\", col=\"white\") legend(\"center\", legend=paste(\"Level\",0:3), col=1:4, lwd=2, box.lty=0)"},{"path":"/articles/latent_process_model_with_multlcmm_IRT.html","id":"by-item","dir":"Articles","previous_headings":"Continuous-time longitudinal IRT model estimation > Item Information Function","what":"by Item","title":"Continuous-time longitudinal IRT model","text":"","code":"plot(info_modIRT, which=\"ItemInfo\", lwd=2, legend.loc=\"topleft\")"},{"path":"/articles/latent_process_model_with_multlcmm_IRT.html","id":"predicted-item-trajectory-according-to-time","dir":"Articles","previous_headings":"Continuous-time longitudinal IRT model estimation","what":"Predicted item trajectory according to time","title":"Continuous-time longitudinal IRT model","text":"Item predicted trajectories according specific profile covariates can computed using predictY function:","code":"head(datnew) datnew$grp <- 0 ns0 <- predictY(modIRT,var.time = \"time\",newdata=datnew,methInteg = 1,nsim=2000,draws=T) datnew$grp <- 1 ns1 <- predictY(modIRT,var.time = \"time\",newdata=datnew,methInteg = 1,nsim=2000,draws=T) par(mfrow=c(2,4), mar=c(3,2,2,1), mgp=c(2,0.5,0)) for(k in 1:7){ plot(ns0,outcome = k,shades = T,ylim=c(0,3),bty=\"l\",legend=NULL,main=paste(\"Item\",2*k,\"-\",meaning[k]),ylab=\"Item level\",xlab=\"months on the waiting list\") plot(ns1,outcome=k,shades=T,add=T,col=2) }"},{"path":[]},{"path":"/articles/latent_process_model_with_multlcmm_IRT.html","id":"estimation-of-the-irt-model-with-a-dif-on-group","dir":"Articles","previous_headings":"Assessment of DIF and RS","what":"Estimation of the IRT model with a DIF on group","title":"Continuous-time longitudinal IRT model","text":"DIF programmed using contrasts (item-specific departure around mean effect underlying latent process) done …. L’item 2 est le seul item qui semble être différent entre les groupes (p=0.0071) avec un niveau plus faible chez les preemptive par rapport aux autres items. Au global, la différence de groupe entre les 7 items ne semble pas significative (p=0.2665 au global (Chi2 à 6 degrés de liberté)). Global test contrasts 95% confidence interval difference groups item 2:","code":"# initialization of the parameter vector for faster convergence npm <- length(modIRT$best) Binit <- c(modIRT$best[1:7],rep(0,(nitems-1)),modIRT$best[(npm-nlevel*nitems-9+1):npm]) # estimation modIRT_DIFg <- multlcmm(hads_2 + hads_4 +hads_6 + hads_8 +hads_10+hads_12 + hads_14 ~ ns(time,knots=c(7,15),Boundary.knots = c(0,60))*(grp) +contrast(grp),random=~1+ns(time,knots=c(7,15),Boundary.knots = c(0,60)),data=simdataHADS,subject=\"ID\",link=\"thresholds\",methInteg=\"QMC\",nMC=1000,B=Binit) sumDIF <- summary(modIRT_DIFg) #> General latent class mixed model  #>      fitted by maximum likelihood method  #>   #> multlcmm(fixed = hads_2 + hads_4 + hads_6 + hads_8 + hads_10 +  #>     hads_12 + hads_14 ~ ns(time, knots = c(7, 15), Boundary.knots = c(0,  #>     60)) * (grp) + contrast(grp), random = ~1 + ns(time, knots = c(7,  #>     15), Boundary.knots = c(0, 60)), subject = \"ID\", link = \"thresholds\",  #>     data = simdataHADS, methInteg = \"QMC\", nMC = 1000) #>   #> Statistical Model:  #>      Dataset: simdataHADS  #>      Number of subjects: 561  #>      Number of observations: 7980  #>      Number of latent classes: 1  #>      Number of parameters: 50   #>      Link functions: Thresholds for hads_2  #>                      Thresholds for hads_4  #>                      Thresholds for hads_6  #>                      Thresholds for hads_8  #>                      Thresholds for hads_10  #>                      Thresholds for hads_12  #>                      Thresholds for hads_14  #>   #> Iteration process:  #>      Convergence criteria satisfied  #>      Number of iterations:  13  #>      Convergence criteria: parameters= 1.3e-07  #>                          : likelihood= 5.3e-06  #>                          : second derivatives= 9e-07  #>   #> Goodness-of-fit statistics:  #>      maximum log-likelihood: -7214.28   #>      AIC: 14528.56   #>      BIC: 14745.05   #>   #> Maximum Likelihood Estimates:  #>   #> Fixed effects in the longitudinal model: #>  #>                                  coef      Se   Wald p-value #> intercept (not estimated)     0.00000                        #> ns(...)1                     -0.12748 0.14988 -0.851 0.39501 #> ns(...)2                      0.21532 0.28874  0.746 0.45583 #> ns(...)3                      0.53107 0.18189  2.920 0.00350 #> grp                          -0.53889 0.16731 -3.221 0.00128 #> ns(...)1:grp                  0.21171 0.20603  1.028 0.30413 #> ns(...)2:grp                  0.46671 0.34710  1.345 0.17875 #> ns(...)3:grp                 -0.00820 0.21014 -0.039 0.96885 #> Contrasts on grp (p=0.29283)                                 #> hads_2                       -0.02642 0.05645 -0.468 0.63972 #> hads_4                       -0.02348 0.05147 -0.456 0.64819 #> hads_6                       -0.00915 0.07182 -0.127 0.89860 #> hads_8                        0.03429 0.06495  0.528 0.59756 #> hads_10                      -0.09224 0.07381 -1.250 0.21142 #> hads_12                      -0.10713 0.05455 -1.964 0.04954 #> hads_14**                     0.22413 0.11256  1.991 0.04646 #>  #>  #> Variance-covariance matrix of the random-effects: #> (the variance of the first random effect is not estimated) #>           intercept ns(...)1 ns(...)2 ns(...)3 #> intercept   1.00000                            #> ns(...)1   -0.46196  0.85115                   #> ns(...)2   -1.14653  1.13101  2.67135          #> ns(...)3   -0.27252  0.59376  0.66774  0.46547 #>  #>                            hads_2   hads_4   hads_6   hads_8  hads_10  hads_12 #> Residual standard error:  0.79214  0.63961  1.03469  0.99749  1.07431  0.69536 #>                           hads_14 #> Residual standard error:  1.55512 #>  #> Parameters of the link functions: #>  #>                     coef      Se   Wald p-value #> hads_2-Thresh1  -0.53412 0.14549 -3.671 0.00024 #> hads_2-Thresh2   1.13040 0.05280 21.408 0.00000 #> hads_2-Thresh3   0.89312 0.04989 17.903 0.00000 #> hads_4-Thresh1  -0.22590 0.13702 -1.649 0.09922 #> hads_4-Thresh2   1.01769 0.04765 21.358 0.00000 #> hads_4-Thresh3   1.04790 0.05780 18.129 0.00000 #> hads_6-Thresh1  -0.36726 0.14755 -2.489 0.01281 #> hads_6-Thresh2   1.35459 0.06746 20.079 0.00000 #> hads_6-Thresh3   1.32477 0.09338 14.187 0.00000 #> hads_8-Thresh1  -1.33351 0.18354 -7.265 0.00000 #> hads_8-Thresh2   1.33761 0.06297 21.242 0.00000 #> hads_8-Thresh3   1.09643 0.05722 19.161 0.00000 #> hads_10-Thresh1 -0.04701 0.14524 -0.324 0.74620 #> hads_10-Thresh2  1.01460 0.05447 18.627 0.00000 #> hads_10-Thresh3  1.11577 0.06559 17.011 0.00000 #> hads_12-Thresh1 -0.24013 0.13820 -1.738 0.08228 #> hads_12-Thresh2  1.00629 0.04810 20.923 0.00000 #> hads_12-Thresh3  1.03509 0.05774 17.928 0.00000 #> hads_14-Thresh1  1.02240 0.19798  5.164 0.00000 #> hads_14-Thresh2  1.46048 0.09380 15.570 0.00000 #> hads_14-Thresh3  0.85264 0.09818  8.685 0.00000 #>  #>  ** coefficient not estimated but obtained from the others as minus the sum of them  #>  sumDIF[,2] #>    intercept (not estimated)                     ns(...)1  #>                           NA                      0.14988  #>                     ns(...)2                     ns(...)3  #>                      0.28874                      0.18189  #>                          grp                 ns(...)1:grp  #>                      0.16731                      0.20603  #>                 ns(...)2:grp                 ns(...)3:grp  #>                      0.34710                      0.21014  #> Contrasts on grp (p=0.29283)                       hads_2  #>                           NA                      0.05645  #>                       hads_4                       hads_6  #>                      0.05147                      0.07182  #>                       hads_8                      hads_10  #>                      0.06495                      0.07381  #>                      hads_12                    hads_14**  #>                      0.05455                      0.11256 WaldMult(modIRT_DIFg,pos=c(8:13)) #>                                                                                 Wald Test #> contrast11 = contrast12 = contrast13 = contrast14 = contrast15 = contrast16 = 0   7.31339 #>                                                                                 p_value #> contrast11 = contrast12 = contrast13 = contrast14 = contrast15 = contrast16 = 0 0.29283 sum <- summary(modIRT_DIFg)[10,] #> General latent class mixed model  #>      fitted by maximum likelihood method  #>   #> multlcmm(fixed = hads_2 + hads_4 + hads_6 + hads_8 + hads_10 +  #>     hads_12 + hads_14 ~ ns(time, knots = c(7, 15), Boundary.knots = c(0,  #>     60)) * (grp) + contrast(grp), random = ~1 + ns(time, knots = c(7,  #>     15), Boundary.knots = c(0, 60)), subject = \"ID\", link = \"thresholds\",  #>     data = simdataHADS, methInteg = \"QMC\", nMC = 1000) #>   #> Statistical Model:  #>      Dataset: simdataHADS  #>      Number of subjects: 561  #>      Number of observations: 7980  #>      Number of latent classes: 1  #>      Number of parameters: 50   #>      Link functions: Thresholds for hads_2  #>                      Thresholds for hads_4  #>                      Thresholds for hads_6  #>                      Thresholds for hads_8  #>                      Thresholds for hads_10  #>                      Thresholds for hads_12  #>                      Thresholds for hads_14  #>   #> Iteration process:  #>      Convergence criteria satisfied  #>      Number of iterations:  13  #>      Convergence criteria: parameters= 1.3e-07  #>                          : likelihood= 5.3e-06  #>                          : second derivatives= 9e-07  #>   #> Goodness-of-fit statistics:  #>      maximum log-likelihood: -7214.28   #>      AIC: 14528.56   #>      BIC: 14745.05   #>   #> Maximum Likelihood Estimates:  #>   #> Fixed effects in the longitudinal model: #>  #>                                  coef      Se   Wald p-value #> intercept (not estimated)     0.00000                        #> ns(...)1                     -0.12748 0.14988 -0.851 0.39501 #> ns(...)2                      0.21532 0.28874  0.746 0.45583 #> ns(...)3                      0.53107 0.18189  2.920 0.00350 #> grp                          -0.53889 0.16731 -3.221 0.00128 #> ns(...)1:grp                  0.21171 0.20603  1.028 0.30413 #> ns(...)2:grp                  0.46671 0.34710  1.345 0.17875 #> ns(...)3:grp                 -0.00820 0.21014 -0.039 0.96885 #> Contrasts on grp (p=0.29283)                                 #> hads_2                       -0.02642 0.05645 -0.468 0.63972 #> hads_4                       -0.02348 0.05147 -0.456 0.64819 #> hads_6                       -0.00915 0.07182 -0.127 0.89860 #> hads_8                        0.03429 0.06495  0.528 0.59756 #> hads_10                      -0.09224 0.07381 -1.250 0.21142 #> hads_12                      -0.10713 0.05455 -1.964 0.04954 #> hads_14**                     0.22413 0.11256  1.991 0.04646 #>  #>  #> Variance-covariance matrix of the random-effects: #> (the variance of the first random effect is not estimated) #>           intercept ns(...)1 ns(...)2 ns(...)3 #> intercept   1.00000                            #> ns(...)1   -0.46196  0.85115                   #> ns(...)2   -1.14653  1.13101  2.67135          #> ns(...)3   -0.27252  0.59376  0.66774  0.46547 #>  #>                            hads_2   hads_4   hads_6   hads_8  hads_10  hads_12 #> Residual standard error:  0.79214  0.63961  1.03469  0.99749  1.07431  0.69536 #>                           hads_14 #> Residual standard error:  1.55512 #>  #> Parameters of the link functions: #>  #>                     coef      Se   Wald p-value #> hads_2-Thresh1  -0.53412 0.14549 -3.671 0.00024 #> hads_2-Thresh2   1.13040 0.05280 21.408 0.00000 #> hads_2-Thresh3   0.89312 0.04989 17.903 0.00000 #> hads_4-Thresh1  -0.22590 0.13702 -1.649 0.09922 #> hads_4-Thresh2   1.01769 0.04765 21.358 0.00000 #> hads_4-Thresh3   1.04790 0.05780 18.129 0.00000 #> hads_6-Thresh1  -0.36726 0.14755 -2.489 0.01281 #> hads_6-Thresh2   1.35459 0.06746 20.079 0.00000 #> hads_6-Thresh3   1.32477 0.09338 14.187 0.00000 #> hads_8-Thresh1  -1.33351 0.18354 -7.265 0.00000 #> hads_8-Thresh2   1.33761 0.06297 21.242 0.00000 #> hads_8-Thresh3   1.09643 0.05722 19.161 0.00000 #> hads_10-Thresh1 -0.04701 0.14524 -0.324 0.74620 #> hads_10-Thresh2  1.01460 0.05447 18.627 0.00000 #> hads_10-Thresh3  1.11577 0.06559 17.011 0.00000 #> hads_12-Thresh1 -0.24013 0.13820 -1.738 0.08228 #> hads_12-Thresh2  1.00629 0.04810 20.923 0.00000 #> hads_12-Thresh3  1.03509 0.05774 17.928 0.00000 #> hads_14-Thresh1  1.02240 0.19798  5.164 0.00000 #> hads_14-Thresh2  1.46048 0.09380 15.570 0.00000 #> hads_14-Thresh3  0.85264 0.09818  8.685 0.00000 #>  #>  ** coefficient not estimated but obtained from the others as minus the sum of them  #>  c(sum[1],sum[1]- qnorm(0.975)*sum[2],sum[1]+ qnorm(0.975)*sum[2]) #>        coef        coef        coef  #> -0.02642000 -0.13705997  0.08421997"},{"path":"/articles/latent_process_model_with_multlcmm_IRT.html","id":"c--estimation-of-the-irt-model-with-a-response-shift-over-time","dir":"Articles","previous_headings":"Assessment of DIF and RS","what":"C. Estimation of the IRT model with a Response Shift over time","title":"Continuous-time longitudinal IRT model","text":"Response Shift modelled adding contrasts functions time seem difference item trajectories time (see global p-values function time summary). can seek whether difference item item using Wald Test. can done WaldMult function lcmm except last item since parameter combination others. Next code details obtain item-specific test invariance time. Interpretation.","code":"# initialization of the parameter vector for faster convergence npm <- length(modIRT$best) Binit <- c(modIRT$best[1:7],rep(0,3*(nitems-1)),modIRT$best[(npm-nlevel*nitems-9+1):npm]) # estimation modIRT_DIFt <- multlcmm(hads_2 + hads_4 +hads_6 + hads_8 +hads_10+hads_12 + hads_14 ~ ns(time,knots=c(7,15),Boundary.knots = c(0,60))*(grp) + contrast(ns(time,knots=c(7,15),Boundary.knots = c(0,60))),random=~1+ns(time,knots=c(7,15),Boundary.knots = c(0,60)),data=simdataHADS,subject=\"ID\",link=\"thresholds\",methInteg=\"QMC\",nMC=1000,B=Binit) summary(modIRT_DIFt) #> General latent class mixed model  #>      fitted by maximum likelihood method  #>   #> multlcmm(fixed = hads_2 + hads_4 + hads_6 + hads_8 + hads_10 +  #>     hads_12 + hads_14 ~ ns(time, knots = c(7, 15), Boundary.knots = c(0,  #>     60)) * (grp) + contrast(ns(time, knots = c(7, 15), Boundary.knots = c(0,  #>     60))), random = ~1 + ns(time, knots = c(7, 15), Boundary.knots = c(0,  #>     60)), subject = \"ID\", link = \"thresholds\", data = simdataHADS,  #>     methInteg = \"QMC\", nMC = 1000) #>   #> Statistical Model:  #>      Dataset: simdataHADS  #>      Number of subjects: 561  #>      Number of observations: 7980  #>      Number of latent classes: 1  #>      Number of parameters: 62   #>      Link functions: Thresholds for hads_2  #>                      Thresholds for hads_4  #>                      Thresholds for hads_6  #>                      Thresholds for hads_8  #>                      Thresholds for hads_10  #>                      Thresholds for hads_12  #>                      Thresholds for hads_14  #>   #> Iteration process:  #>      Convergence criteria satisfied  #>      Number of iterations:  25  #>      Convergence criteria: parameters= 7.7e-07  #>                          : likelihood= 2e-05  #>                          : second derivatives= 1.5e-06  #>   #> Goodness-of-fit statistics:  #>      maximum log-likelihood: -7205.82   #>      AIC: 14535.65   #>      BIC: 14804.09   #>   #> Maximum Likelihood Estimates:  #>   #> Fixed effects in the longitudinal model: #>  #>                                       coef      Se   Wald p-value #> intercept (not estimated)          0.00000                        #> ns(...)1                          -0.15118 0.14527 -1.041 0.29799 #> ns(...)2                           0.24201 0.22065  1.097 0.27273 #> ns(...)3                           0.51599 0.14376  3.589 0.00033 #> grp                               -0.56666 0.14421 -3.929 0.00009 #> ns(...)1:grp                       0.20990 0.19824  1.059 0.28967 #> ns(...)2:grp                       0.46825 0.26337  1.778 0.07541 #> ns(...)3:grp                      -0.00269 0.10362 -0.026 0.97926 #> Contrasts on ns(...)1 (p=0.19144)                                 #> hads_2                             0.08808 0.12351  0.713 0.47575 #> hads_4                             0.11588 0.11125  1.042 0.29762 #> hads_6                            -0.44923 0.16043 -2.800 0.00511 #> hads_8                             0.07870 0.14551  0.541 0.58861 #> hads_10                            0.02251 0.15339  0.147 0.88334 #> hads_12                            0.07310 0.11507  0.635 0.52527 #> hads_14**                          0.07096 0.25197  0.282 0.77823 #> Contrasts on ns(...)2 (p=0.15757)                                 #> hads_2                             0.05069 0.20882  0.243 0.80818 #> hads_4                             0.31902 0.19262  1.656 0.09768 #> hads_6                            -0.12456 0.24725 -0.504 0.61442 #> hads_8                            -0.15758 0.23823 -0.661 0.50831 #> hads_10                           -0.50100 0.26666 -1.879 0.06027 #> hads_12                           -0.22571 0.19444 -1.161 0.24572 #> hads_14**                          0.63914 0.44963  1.421 0.15517 #> Contrasts on ns(...)3 (p=0.12167)                                 #> hads_2                             0.09775 0.14180  0.689 0.49061 #> hads_4                             0.26875 0.12584  2.136 0.03270 #> hads_6                             0.07197 0.15943  0.451 0.65169 #> hads_8                            -0.10742 0.16213 -0.663 0.50761 #> hads_10                           -0.22367 0.17189 -1.301 0.19317 #> hads_12                           -0.21525 0.12666 -1.699 0.08924 #> hads_14**                          0.10787 0.27732  0.389 0.69729 #>  #>  #> Variance-covariance matrix of the random-effects: #> (the variance of the first random effect is not estimated) #>           intercept ns(...)1 ns(...)2 ns(...)3 #> intercept   1.00000                            #> ns(...)1   -0.46502  0.83427                   #> ns(...)2   -1.15064  1.12124  2.65929          #> ns(...)3   -0.26882  0.58400  0.66300  0.45942 #>  #>                            hads_2   hads_4   hads_6   hads_8  hads_10  hads_12 #> Residual standard error:  0.79106  0.64238  1.02392  0.99607  1.04240  0.66925 #>                           hads_14 #> Residual standard error:  1.61569 #>  #> Parameters of the link functions: #>  #>                     coef      Se   Wald p-value #> hads_2-Thresh1  -0.51076 0.14481 -3.527 0.00042 #> hads_2-Thresh2   1.12935 0.05266 21.444 0.00000 #> hads_2-Thresh3   0.89240 0.04978 17.929 0.00000 #> hads_4-Thresh1  -0.10615 0.12077 -0.879 0.37947 #> hads_4-Thresh2   1.02070 0.04795 21.287 0.00000 #> hads_4-Thresh3   1.05232 0.05838 18.025 0.00000 #> hads_6-Thresh1  -0.44550 0.16207 -2.749 0.00598 #> hads_6-Thresh2   1.35186 0.06684 20.226 0.00000 #> hads_6-Thresh3   1.32294 0.09294 14.235 0.00000 #> hads_8-Thresh1  -1.40668 0.19676 -7.149 0.00000 #> hads_8-Thresh2   1.33585 0.06286 21.250 0.00000 #> hads_8-Thresh3   1.09600 0.05707 19.206 0.00000 #> hads_10-Thresh1 -0.20171 0.16312 -1.237 0.21625 #> hads_10-Thresh2  1.00090 0.05294 18.907 0.00000 #> hads_10-Thresh3  1.10217 0.06395 17.235 0.00000 #> hads_12-Thresh1 -0.24862 0.13162 -1.889 0.05891 #> hads_12-Thresh2  0.98979 0.04693 21.093 0.00000 #> hads_12-Thresh3  1.01983 0.05642 18.077 0.00000 #> hads_14-Thresh1  1.22178 0.29419  4.153 0.00003 #> hads_14-Thresh2  1.48491 0.09737 15.251 0.00000 #> hads_14-Thresh3  0.86615 0.10043  8.624 0.00000 #>  #>  ** coefficient not estimated but obtained from the others as minus the sum of them  #> ## Pvalue for the last contrast b <- coef(modIRT_DIFt) v <- vcov(modIRT_DIFt) A <- rbind(c(rep(0,7), rep(-1,6), rep(0,49)),        c(rep(0,7+6), rep(-1,6), rep(0,49-6)),        c(rep(0,7+12), rep(-1,6), rep(0,49-12))) w <- t(A%*%b) %*% solve(A%*%v%*%t(A)) %*% A%*%b DIF14 <- 1-pchisq(w, df=nrow(A)) # p=0.3722833 ## pvalues for all the items including the last one DIF <- cbind(seq(2,14,by=2),c(sapply(1:6,function(k){WaldMult(modIRT_DIFt,pos=c(7+k,(7+6+k),(7+2*6+k)))[2]}),DIF14)) colnames(DIF) <- c(\"item\",\"pvalue\") DIF    #>      item    pvalue #> [1,]    2 0.7075200 #> [2,]    4 0.0830700 #> [3,]    6 0.0451500 #> [4,]    8 0.8516600 #> [5,]   10 0.3021600 #> [6,]   12 0.3751000 #> [7,]   14 0.5168641"},{"path":"/articles/latent_process_model_with_multlcmm_IRT.html","id":"prediction-in-the-item-scale-to-compare-the-model-with-rs-and-without-rs","dir":"Articles","previous_headings":"Assessment of DIF and RS > C. Estimation of the IRT model with a Response Shift over time","what":"Prediction in the item scale to compare the model with RS and without RS","title":"Continuous-time longitudinal IRT model","text":"","code":"head(datnew) datnew$grp <- 0 ns0DIFt <- predictY(modIRT_DIFt,var.time = \"time\",newdata=datnew,methInteg = 1,nsim=2000,draws=T) datnew$grp <- 1 ns1DIFt <- predictY(modIRT_DIFt,var.time = \"time\",newdata=datnew,methInteg = 1,nsim=2000,draws=T) par(mfrow=c(3,3), mar=c(3,2,2,1), mgp=c(2,0.5,0)) for(k in 1:7){ plot(ns0,outcome = k,shades = T,ylim=c(0,3),bty=\"l\",legend=NULL,main=paste(\"Item\",2*k,\"-\",meaning[k]),ylab=\"Item level\",xlab=\"months on the waiting list\",color=1,lwd=2,xlim=c(0,50)) plot(ns0DIFt,outcome=k,shades=T,lty=2,add=T,col=1,lwd=2) plot(ns1,outcome=k,shades=T,add=T,col=4,lwd=2) plot(ns1DIFt,outcome=k,shades=T,add=T,col=4,lty=2,lwd=2) legend(\"top\",legend=paste(\"(RS overall test: p = \",round(DIF[k,2],digits = 3),\")\",sep=\"\"),bty=\"n\") } plot(0,xaxt='n',yaxt='n',bty='n',pch='',ylab='',xlab='', main ='') legend(x=\"top\",legend=c(\"dialysed\",\"pre-emptive\"),lty=c(1,1),col=c(1,4),lwd=2,bty=\"n\") legend(x=\"bottom\",legend=c(\"without RS\",\"with RS\"),lty=c(1,2),col=c(\"gray\",\"gray\"),lwd=2,bty=\"n\")"},{"path":"/articles/lcmm.html","id":"functionalities-of-the-package","dir":"Articles","previous_headings":"","what":"Functionalities of the package","title":"Description of lcmm package","text":"R package lcmm provides series functions estimate statistical models based linear mixed model theory. includes estimation : mixed models latent class mixed models Gaussian longitudinal outcomes (hlme), curvilinear ordinal univariate longitudinal outcomes (lcmm) curvilinear multivariate outcomes (multlcmm) joint latent class mixed models (jlcmm mpjlcmm) (Gaussian /curvilinear) longitudinal outcomes time--event can possibly left-truncated right-censored defined competing setting. package lcmm includes 5 main functions: lcmm, hlme, multlcmm, jlcmm mpjlcmm. function described different vignette. functions apply longitudinal markers, even limited metrological properties functions can also used cross-sectional context.","code":""},{"path":"/articles/lcmm.html","id":"calls-functions","dir":"Articles","previous_headings":"","what":"Calls functions","title":"Description of lcmm package","text":"function precisely introduced companion paper (Proust-Lima, JSS 2017 - https://doi.org/10.18637/jss.v078.i02).","code":""},{"path":"/articles/lcmm.html","id":"hlme","dir":"Articles","previous_headings":"Calls functions","what":"hlme","title":"Description of lcmm package","text":"function used standard linear mixed models extension multiple profiles trajectory : latent class linear mixed models","code":"hlme(fixed, mixture, random, subject, classmb, ng = 1, idiag = FALSE, nwg = FALSE, cor = NULL, data, B, convB = 0.0001, convL = 0.0001, convG = 0.0001, prior, maxiter = 500, subset = NULL, na.action = 1, posfix = NULL)"},{"path":"/articles/lcmm.html","id":"lcmm","dir":"Articles","previous_headings":"Calls functions","what":"lcmm","title":"Description of lcmm package","text":"function used estimate mixed models outcome Gaussian distribution. method called “latent process model”. currently handles curvilinear non-Gaussian continuous markers using continuous link functions, binary ordinal markers using probit framework piecewise constant link functions. hlme, method also handles heterogeneous profiles trajectories “latent process latent class mixed model”.","code":"lcmm(fixed, mixture, random, subject, classmb, ng = 1, idiag = FALSE, nwg = FALSE, link = \"linear\", intnodes = NULL, epsY = 0.5, cor = NULL, data, B, convB = 1e-04, convL = 1e-04, convG = 1e-04,  maxiter = 100, nsim = 100, prior, range = NULL, subset = NULL, na.action = 1, posfix = NULL,  partialH = FALSE)"},{"path":"/articles/lcmm.html","id":"multlcmm","dir":"Articles","previous_headings":"Calls functions","what":"multlcmm","title":"Description of lcmm package","text":"function extends lcmm function one marker measures underlying construct interest. function handles natures markers lcmm (possibly mixed model): curvilinear non-Gaussian continuous markers using continuous link functions, binary ordinal markers using probit framework piecewise constant link functions. binary/ordinal markers, multlcmm defines continuous-time longitudinal IRT model. addition, functions, multlcmm handles either homogeneous heterogeneous profiles trajectories.","code":"multlcmm(fixed, mixture, random, subject, classmb, ng = 1, idiag = FALSE, nwg = FALSE, randomY = FALSE, link = \"linear\", intnodes = NULL, epsY = 0.5, cor = NULL, data, B, convB = 1e-04, convL = 1e-04, convG = 1e-04, maxiter = 100, nsim = 100, prior, range = NULL, subset = NULL, na.action = 1, posfix = NULL, partialH = FALSE)"},{"path":"/articles/lcmm.html","id":"jlcmm","dir":"Articles","previous_headings":"Calls functions","what":"jlcmm","title":"Description of lcmm package","text":"function extends hlme, lcmm multlcmm jointly analyze times event (competing setting). latent structure shared longitudinal outcome(s) time(s) event latent classes.","code":"Jointlcmm(fixed, mixture, random, subject, classmb, ng = 1, idiag = FALSE, nwg = FALSE, survival, hazard = \"Weibull\", hazardtype = \"Specific\", hazardnodes = NULL, TimeDepVar = NULL, link = NULL, intnodes = NULL, epsY = 0.5, range = NULL, cor = NULL, data, B, convB = 1e-4, convL = 1e-4, convG = 1e-4, maxiter = 100, nsim = 100, prior, logscale = FALSE, subset = NULL, na.action = 1, posfix = NULL, partialH = FALSE)"},{"path":"/articles/lcmm.html","id":"mpjlcmm","dir":"Articles","previous_headings":"Calls functions","what":"mpjlcmm","title":"Description of lcmm package","text":"function multivariate version jlcmm: models multivariate longitudinal markers (possibly regrouped several latent processes), may also jointly analyze times event (competing setting). latent structure shared latent processes time(s) event latent classes.","code":"mpjlcmm <- function(longitudinal,subject,classmb,ng,survival,       hazard=\"Weibull\",hazardtype=\"Specific\",hazardnodes=NULL,TimeDepVar=NULL,       data,B,convB=0.0001,convL=0.0001,convG=0.0001,maxiter=100,nsim=100,       prior,logscale=FALSE,subset=NULL,na.action=1,posfix=NULL,       partialH=FALSE,verbose=TRUE,nproc=1,clustertype=NULL)"},{"path":[]},{"path":"/articles/lcmm.html","id":"paquid-subsample","dir":"Articles","previous_headings":"Dataset example","what":"paquid subsample","title":"Description of lcmm package","text":"wikis, lcmm illutrated paquid dataset. subsample 500 subjects original French prospective study Paquid. dataset can used epidemiological purposes subsample representative original cohort (particular, dementia cases sampled).   visualizing data (head table ):   different markers collected different times. dataset timescale \\(age\\).   obtaining quick summary data:   variables missing values. problem using lcmm package missing values systematically removed.  ","code":"head(paquid)   ID MMSE BVRT IST HIER CESD      age  agedem dem age_init CEP male 1  1   26   10  37    2   11 68.50630 68.5063   0  67.4167   1    1 2  2   26   13  25    1   10 66.99540 85.6167   1  65.9167   1    0 3  2   28   13  28    1   15 69.09530 85.6167   1  65.9167   1    0 4  2   25   12  23    1   18 73.80720 85.6167   1  65.9167   1    0 5  2   24   13  16    3   22 84.14237 85.6167   1  65.9167   1    0 6  2   22    9  15    3   NA 87.09103 85.6167   1  65.9167   1    0 summary(paquid)        ID             MMSE            BVRT            IST         Min.   :  1.0   Min.   : 0.00   Min.   : 0.00   Min.   : 5.00    1st Qu.:132.2   1st Qu.:25.00   1st Qu.: 9.00   1st Qu.:22.00    Median :263.0   Median :27.00   Median :11.00   Median :27.00    Mean   :256.2   Mean   :25.99   Mean   :10.78   Mean   :26.52    3rd Qu.:376.0   3rd Qu.:29.00   3rd Qu.:13.00   3rd Qu.:31.00    Max.   :500.0   Max.   :30.00   Max.   :15.00   Max.   :40.00                    NA's   :36      NA's   :300     NA's   :198           HIER            CESD             age             agedem       Min.   :0.000   Min.   : 0.000   Min.   : 66.28   Min.   :66.87    1st Qu.:1.000   1st Qu.: 2.000   1st Qu.: 75.09   1st Qu.:82.03    Median :1.000   Median : 6.000   Median : 80.57   Median :86.61    Mean   :1.272   Mean   : 8.488   Mean   : 80.53   Mean   :85.89    3rd Qu.:2.000   3rd Qu.:12.000   3rd Qu.: 85.77   3rd Qu.:89.94    Max.   :3.000   Max.   :52.000   Max.   :102.16   Max.   :99.49    NA's   :46      NA's   :146                                             dem            age_init          CEP              male         Min.   :0.0000   Min.   :65.25   Min.   :0.0000   Min.   :0.0000    1st Qu.:0.0000   1st Qu.:68.00   1st Qu.:0.0000   1st Qu.:0.0000    Median :0.0000   Median :71.92   Median :1.0000   Median :0.0000    Mean   :0.3329   Mean   :73.01   Mean   :0.7373   Mean   :0.3853    3rd Qu.:1.0000   3rd Qu.:76.96   3rd Qu.:1.0000   3rd Qu.:1.0000    Max.   :1.0000   Max.   :92.33   Max.   :1.0000   Max.   :1.0000"},{"path":"/articles/lcmm.html","id":"mmse-outcome","dir":"Articles","previous_headings":"Dataset example","what":"MMSE outcome","title":"Description of lcmm package","text":"lcmm examples, MMSE usually considered outcome. MMSE common neuropsychological test measure global cognitive functioning elderly. asymmetric distribution usually normalized applied methods Gaussian variables. done using pre-normalization function dedicated MMSE provided NormPsy package:      individual repeated measures MMSE modelled :     ","code":"library(NormPsy) paquid$normMMSE <- normMMSE(paquid$MMSE) par(mfrow=c(1,2)) hist(paquid$MMSE, cex.main=0.8, cex.lab=0.8) hist(paquid$normMMSE, cex.main=0.8, cex.lab=0.8) library(lattice) color <- paquid$ID xyplot(normMMSE ~ age, paquid, groups = ID, col=color, lwd=2, type=\"l\")"},{"path":"/articles/multivariate_latent_class_model_with_mpjlcmm.html","id":"background-and-definitions","dir":"Articles","previous_headings":"","what":"Background and definitions","title":"How to estimate a multivariate latent class mixed model using mpjlcmm function","text":"latent class mixed model consists assuming population heterogeneous composed \\(G\\) latent classes. multivariate case, latent classes defined according \\(K\\) longitudinal outcomes, resulting \\(G\\) groups characterized \\(G\\) sets \\(K\\) mean profiles trajectories.","code":""},{"path":"/articles/multivariate_latent_class_model_with_mpjlcmm.html","id":"the-multivariate-latent-class-mixed-model","dir":"Articles","previous_headings":"Background and definitions","what":"The multivariate latent class mixed model","title":"How to estimate a multivariate latent class mixed model using mpjlcmm function","text":"Latent class membership defined discrete random variable \\(c_{}\\) equals \\(g\\) subject \\(\\) belongs latent class \\(g\\) (\\(g\\) = 1, …,\\(G\\)). variable \\(c_{}\\) latent; probability described using multinomial logistic model according covariates \\(X_{ci}\\): \\(\\pi_{ig}= P(c_{} = g|X_{ci}) = \\frac{\\exp(\\xi_{0g}+X_{ci}\\xi_{1g})}{ \\sum_{l=1}^{G}\\exp(\\xi_{0l}+X_{ci}\\xi_{1l})}\\) trajectories \\(Y_k\\) \\(k=1,..,K\\) defined conditionally latent class. Gaussian outcomes, conditional class \\(g\\), model linear mixed model defined subject \\(\\) occasion \\(j\\) : \\[Y_{kij}|_{c_{}=g} = X_{2kij}\\beta_k+X_{3kij}\\gamma_{kg}+Z_{kij}b_{ki}+\\epsilon_{kij}\\] \\(X_{2kij}\\), \\(X_{3kij}\\) \\(Z_{kij}\\) vectors covariates respectively associated common fixed effects classes \\(\\beta_k\\), class-specific fixed effects \\(\\gamma_{kg}\\) individual random effects \\(b_{ki}|_{ci=g}\\) called \\(b_{kig}\\) whose distributions now class-specific. \\(X_{2k}\\) \\(X_{3k}\\) can’t common variables. Neither random effects error measurements correlated outcomes. conditionally latent classes \\(K\\) outcomes independent.     \\[Y_{ijk}|_{c_{}=g} = H_k(~ X_{2ijk}\\beta_k+X_{3ijk}\\gamma_{gk}+Z_{ijk}b_{ik}+\\epsilon_{ijk} ~; \\eta_k)\\]   \\(H_k\\) link function parameterized \\(\\eta_k\\). \\(H^{-1}\\) can belong family linear functions, rescaled Beta cumulative distribution function, quadractic -splines functions. Note however mpjlcmm function supports continuous outcomes, IRT models available moment.  ","code":""},{"path":"/articles/multivariate_latent_class_model_with_mpjlcmm.html","id":"posterior-classification","dir":"Articles","previous_headings":"Background and definitions","what":"Posterior classification","title":"How to estimate a multivariate latent class mixed model using mpjlcmm function","text":"models involving latent classes, posterior classification subjects latent class can made. based posterior calculation class-membership probabilities used characterize classification subjects well evaluate goodness--fit model. Posterior class-membership probabilities computed using Bayes theorem probability belonging latent class given whole information collected. longitudinal model, defined subject \\(\\) latent class \\(g\\) :   \\[\\hat{\\pi}_{ig}^Y=P(c_{}=g|X_{},Y_{},\\hat{\\theta}_{G})\\] : \\(\\hat{\\theta}_{G}\\) vector parameters estimated \\(G\\) latent class model.    ","code":""},{"path":"/articles/multivariate_latent_class_model_with_mpjlcmm.html","id":"a-bivariate-example","dir":"Articles","previous_headings":"","what":"A bivariate example","title":"How to estimate a multivariate latent class mixed model using mpjlcmm function","text":"example study simultaneously trajectories cognitive marker (MMSE) depression scale (CESD) sample old people (aged 65 years old inclusion) followed 15 years. two outcomes skewed distribution, use latent process models -splines link functions.","code":""},{"path":"/articles/multivariate_latent_class_model_with_mpjlcmm.html","id":"model-considered","dir":"Articles","previous_headings":"A bivariate example","what":"Model considered","title":"How to estimate a multivariate latent class mixed model using mpjlcmm function","text":"consider class specific linear trajectories age without ajustement. class \\(g\\), subejct \\(\\) repeated measurement \\(j\\), model :   \\[MMSE_{ij}|_{c_{}=g}=\\beta_{10g}+\\beta_{11g}age_{ij}+u_{10ig}+u_{11ig}age_{ij}+\\epsilon_{1ij}\\] \\[CESD_{ij}|_{c_{}=g}=\\beta_{20g}+\\beta_{21g}age_{ij}+u_{20ig}+u_{21ig}age_{ij}+\\epsilon_{2ij}\\]   : \\(u_{kig} \\sim \\mathcal{N}(0,B_{kg})\\) \\(\\epsilon_{ij} \\sim \\mathcal{N}(0,\\sigma^2)\\).  ","code":""},{"path":"/articles/multivariate_latent_class_model_with_mpjlcmm.html","id":"estimate-the-model-with-only-one-class-g1","dir":"Articles","previous_headings":"A bivariate example","what":"Estimate the model with only one class (G=1)","title":"How to estimate a multivariate latent class mixed model using mpjlcmm function","text":"estimate multivariate model, define first univariate submodel appropriate function. use latent process models, use lcmm function.   begin MMSE :   see summary one -splines parameters small. avoid numerical issues complex models, fix parameter zero :   use specification CESD. Note however specification can differ outcomes.   Based two submodels, multivariate model can estimated.   two outcomes independent conditionaly latent classes one class, multivariate model equivalent two separated submodel. can check estimations :  ","code":"mMMSE <- lcmm(MMSE ~ I((age-65)/10), random =~I((age-65)/10), subject='ID', data = paquid,               link =\"5-quant-splines\", verbose=FALSE) summary(mMMSE) General latent class mixed model       fitted by maximum likelihood method    lcmm(fixed = MMSE ~ I((age - 65)/10), random = ~I((age - 65)/10),      subject = \"ID\", link = \"5-quant-splines\", data = paquid,      verbose = FALSE)   Statistical Model:       Dataset: paquid       Number of subjects: 500       Number of observations: 2214       Number of observations deleted: 36       Number of latent classes: 1       Number of parameters: 11        Link function: Quadratic I-splines with nodes   0 25 27 29 30     Iteration process:       Convergence criteria satisfied       Number of iterations:  32       Convergence criteria: parameters= 1.5e-08                           : likelihood= 1.4e-06                           : second derivatives= 1.2e-07    Goodness-of-fit statistics:       maximum log-likelihood: -4687.54        AIC: 9397.08        BIC: 9443.45          Discrete posterior log-likelihood: -4677.75        Discrete AIC: 9377.5          Mean discrete AIC per subject: 9.3775        Mean UACV per subject: 9.3762        Mean discrete LL per subject: -9.3555     Maximum Likelihood Estimates:    Fixed effects in the longitudinal model:                                coef      Se    Wald p-value intercept (not estimated)        0                         I((age - 65)/10)          -1.19894 0.07188 -16.681 0.00000   Variance-covariance matrix of the random-effects:                  intercept I((age - 65)/10) intercept          2.23236                  I((age - 65)/10)  -0.90184          0.86839  Residual standard error (not estimated) = 1  Parameters of the link function:                 coef      Se    Wald p-value I-splines1 -7.12837 0.24342 -29.284 0.00000 I-splines2  1.04836 0.08124  12.905 0.00000 I-splines3 -0.00109 0.03823  -0.029 0.97718 I-splines4  1.98400 0.03385  58.609 0.00000 I-splines5  1.25589 0.03022  41.554 0.00000 I-splines6  1.00133 0.03617  27.681 0.00000 I-splines7  0.91387 0.02684  34.055 0.00000 binit <- mMMSE$best binit[7] <- 0 mMMSE1 <- lcmm(MMSE ~ I((age-65)/10), random =~I((age-65)/10), subject='ID', data = paquid,                link =\"5-quant-splines\", verbose=FALSE, B=binit, posfix=7) summary(mMMSE1) General latent class mixed model       fitted by maximum likelihood method    lcmm(fixed = MMSE ~ I((age - 65)/10), random = ~I((age - 65)/10),      subject = \"ID\", link = \"5-quant-splines\", data = paquid,      posfix = 7, verbose = FALSE)   Statistical Model:       Dataset: paquid       Number of subjects: 500       Number of observations: 2214       Number of observations deleted: 36       Number of latent classes: 1       Number of parameters: 11        Number of estimated parameters: 10        Link function: Quadratic I-splines with nodes   0 25 27 29 30     Iteration process:       Convergence criteria satisfied       Number of iterations:  1       Convergence criteria: parameters= 1.1e-13                           : likelihood= 2.3e-10                           : second derivatives= 1.7e-14    Goodness-of-fit statistics:       maximum log-likelihood: -4687.54        AIC: 9395.08        BIC: 9437.23          Discrete posterior log-likelihood: -4677.75        Discrete AIC: 9375.5          Mean discrete AIC per subject: 9.3755        Mean UACV per subject: 9.3762        Mean discrete LL per subject: -9.3555     Maximum Likelihood Estimates:    Fixed effects in the longitudinal model:                                coef      Se    Wald p-value intercept (not estimated)        0                         I((age - 65)/10)          -1.19894 0.07188 -16.681 0.00000   Variance-covariance matrix of the random-effects:                  intercept I((age - 65)/10) intercept          2.23236                  I((age - 65)/10)  -0.90184          0.86839  Residual standard error (not estimated) = 1  Parameters of the link function:                 coef       Se    Wald p-value I-splines1 -7.12837  0.24343 -29.283 0.00000 I-splines2  1.04836  0.08124  12.905 0.00000 I-splines3  0.00000*                         I-splines4  1.98400  0.03385  58.607 0.00000 I-splines5  1.25589  0.03022  41.554 0.00000 I-splines6  1.00133  0.03617  27.681 0.00000 I-splines7  0.91387  0.02684  34.055 0.00000   * coefficient fixed by the user mCESD1 <- lcmm(CESD ~ I((age-65)/10), random =~I((age-65)/10), subject='ID', data = paquid,                link =\"5-quant-splines\", verbose=FALSE) summary(mCESD1) General latent class mixed model       fitted by maximum likelihood method    lcmm(fixed = CESD ~ I((age - 65)/10), random = ~I((age - 65)/10),      subject = \"ID\", link = \"5-quant-splines\", data = paquid,      verbose = FALSE)   Statistical Model:       Dataset: paquid       Number of subjects: 500       Number of observations: 2104       Number of observations deleted: 146       Number of latent classes: 1       Number of parameters: 11        Link function: Quadratic I-splines with nodes   0 2 6 12 52     Iteration process:       Convergence criteria satisfied       Number of iterations:  21       Convergence criteria: parameters= 1.9e-10                           : likelihood= 8.1e-09                           : second derivatives= 3.9e-16    Goodness-of-fit statistics:       maximum log-likelihood: -6331.04        AIC: 12684.07        BIC: 12730.43          Discrete posterior log-likelihood: -6320.34        Discrete AIC: 12662.67          Mean discrete AIC per subject: 12.6627        Mean UACV per subject: 12.6623        Mean discrete LL per subject: -12.6407     Maximum Likelihood Estimates:    Fixed effects in the longitudinal model:                                coef      Se    Wald p-value intercept (not estimated)        0                         I((age - 65)/10)           0.53187 0.05164  10.299 0.00000   Variance-covariance matrix of the random-effects:                  intercept I((age - 65)/10) intercept          2.08271                  I((age - 65)/10)  -0.43992          0.18055  Residual standard error (not estimated) = 1  Parameters of the link function:                 coef      Se    Wald p-value I-splines1 -1.66789 0.10563 -15.790 0.00000 I-splines2  1.04688 0.02463  42.503 0.00000 I-splines3  0.74268 0.03772  19.688 0.00000 I-splines4  0.98353 0.03239  30.363 0.00000 I-splines5  1.55698 0.04484  34.726 0.00000 I-splines6 -0.93391 0.16623  -5.618 0.00000 I-splines7  1.38694 0.17715   7.829 0.00000 mm1 <- mpjlcmm(list(mMMSE1,mCESD1), subject=\"ID\", data=paquid, ng=1, posfix=7, verbose=FALSE) cbind(mm1$best, c(mMMSE1$best, mCESD1$best))                        [,1]       [,2] I((age - 65)/10) -1.1989362 -1.1989355 varcov 1          2.2323591  2.2323555 varcov 2         -0.9018448 -0.9018425 varcov 3          0.8683880  0.8683859 I-splines1       -7.1283743 -7.1283683 I-splines2        1.0483658  1.0483646 I-splines3        0.0000000  0.0000000 I-splines4        1.9839961  1.9839953 I-splines5        1.2558910  1.2558911 I-splines6        1.0013254  1.0013252 I-splines7        0.9138711  0.9138711 I((age - 65)/10)  0.5318709  0.5318708 varcov 1          2.0827139  2.0827132 varcov 2         -0.4399163 -0.4399158 varcov 3          0.1805552  0.1805550 I-splines1       -1.6678879 -1.6678880 I-splines2        1.0468796  1.0468796 I-splines3        0.7426802  0.7426802 I-splines4        0.9835325  0.9835324 I-splines5        1.5569752  1.5569752 I-splines6       -0.9339131 -0.9339132 I-splines7        1.3869353  1.3869353"},{"path":"/articles/multivariate_latent_class_model_with_mpjlcmm.html","id":"estimate-the-model-with-more-than-one-class-g-1","dir":"Articles","previous_headings":"A bivariate example","what":"Estimate the model with more than one class (G > 1)","title":"How to estimate a multivariate latent class mixed model using mpjlcmm function","text":"  one class, begin also univariate models estimate multivariate model. univariate models need optimized . therefore use option maxiter=0. also fix one -spline parameter zero .   later model specify initial values. extracted univariate models. Alternatively, can use one class model starting point, use grid search.   estimate following model 3, 4, 5 classes.   summarize compare estimations summarytable function :   keep best model number latent classes plot statistical criteria used select optimal number classes :  application, select 2-class model, presents better BIC.   can represent relation classes flow subjects sankey plot. yet done automatically package.   ","code":"mMMSE2 <- lcmm(MMSE~I((age-65)/10),random=~I((age-65)/10),subject=\"ID\",  link=\"5-quant-splines\",data=paquid,ng=2,mixture=~I((age-65)/10),  B=random(mMMSE1),maxiter=0, posfix=10)  mCESD2 <- lcmm(CESD~I((age-65)/10),random=~I((age-65)/10),subject=\"ID\",  link=\"5-quant-splines\",data=paquid,ng=2,mixture=~I((age-65)/10),  B=random(mCESD1),maxiter=0) mm2_a <- mpjlcmm(longitudinal=list(mMMSE2,mCESD2),subject=\"ID\",ng=2,data=paquid,posfix=10) mm2_b <- mpjlcmm(longitudinal=list(mMMSE2,mCESD2), subject=\"ID\", ng=2, data=paquid,                  B=mm1, posfix=10)  mm2_c <- gridsearch(mpjlcmm(longitudinal=list(mMMSE2,mCESD2), subject=\"ID\", ng=2,                     data=paquid, posfix=10), minit=mm1, rep=50, maxiter=50) ## 3 classes  mMMSE3 <- lcmm(MMSE~I((age-65)/10), random=~I((age-65)/10), subject=\"ID\",  link=\"5-quant-splines\", data=paquid, ng=3, mixture=~I((age-65)/10),  B=random(mMMSE1), maxiter=0, posfix=13)  mCESD3 <- lcmm(CESD~I((age-65)/10), random=~I((age-65)/10), subject=\"ID\",  link=\"5-quant-splines\", data=paquid, ng=3, mixture=~I((age-65)/10),  B=random(mCESD1), maxiter=0)  mm3_a <- mpjlcmm(longitudinal=list(mMMSE3,mCESD3), subject=\"ID\", ng=3, data=paquid, posfix=13) mm3_b <- mpjlcmm(longitudinal=list(mMMSE3,mCESD3), subject=\"ID\", ng=3, data=paquid, posfix=13, B=mm1)  mm3_c <- gridsearch(mpjlcmm(longitudinal=list(mMMSE3,mCESD3), subject=\"ID\", ng=3,  data=paquid, posfix=13), minit=mm1, rep=50, maxiter=50)                                                     ## 4 classes  mMMSE4 <- lcmm(MMSE~I((age-65)/10), random=~I((age-65)/10), subject=\"ID\",  link=\"5-quant-splines\", data=paquid, ng=4, mixture=~I((age-65)/10),  B=random(mMMSE1), maxiter=0, posfix=16)  mCESD4 <- lcmm(CESD~I((age-65)/10), random=~I((age-65)/10), subject=\"ID\",  link=\"5-quant-splines\", data=paquid, ng=4, mixture=~I((age-65)/10),  B=random(mCESD1), maxiter=0)  mm4_a <- mpjlcmm(longitudinal=list(mMMSE4,mCESD4), subject=\"ID\", ng=4, data=paquid, posfix=16)  mm4_b <- mpjlcmm(longitudinal=list(mMMSE4,mCESD4), subject=\"ID\", ng=4, data=paquid, posfix=16, B=mm1)                                                                                         mm4_c <- gridsearch(mpjlcmm(longitudinal=list(mMMSE4,mCESD4), subject=\"ID\", ng=4,                     data=paquid, posfix=16), minit=mm1, rep=50, maxiter=50)   ## 5 classes  mMMSE5 <- lcmm(MMSE~I((age-65)/10), random=~I((age-65)/10), subject=\"ID\",  link=\"5-quant-splines\", data=paquid, ng=5, mixture=~I((age-65)/10),  B=random(mMMSE1), maxiter=0 ,posfix=19)  mCESD5 <- lcmm(CESD~I((age-65)/10), random=~I((age-65)/10), subject=\"ID\",  link=\"5-quant-splines\", data=paquid, ng=5, mixture=~I((age-65)/10),  B=random(mCESD1), maxiter=0)  mm5_a <- mpjlcmm(longitudinal=list(mMMSE5,mCESD5), subject=\"ID\", ng=5, data=paquid, posfix=19)  mm5_b <- mpjlcmm(longitudinal=list(mMMSE5,mCESD5), subject=\"ID\", ng=5, data=paquid, posfix=19, B=mm1)  mm5_c <- gridsearch(mpjlcmm(longitudinal=list(mMMSE5,mCESD5), subject=\"ID\", ng=5,                     data=paquid, posfix=19), minit=mm1, rep=50, maxiter=50) summarytable(mm1, mm2_a, mm2_b, mm2_c, mm3_a, mm3_b, mm3_c, mm4_a, mm4_b, mm4_c, mm5_a, mm5_b, mm5_c)       G    loglik npm      BIC %class1 %class2 %class3 %class4 %class5 mm1   1 -11018.58  21 22167.67   100.0                                 mm2_a 2 -11004.64  26 22170.86    20.8    79.2                         mm2_b 2 -10997.88  26 22157.34    21.4    78.6                         mm2_c 2 -10997.88  26 22157.34    78.6    21.4                         mm3_a 3 -10983.75  31 22160.14     8.2    70.8    21.0                 mm3_b 3 -10983.75  31 22160.14     8.2    70.8    21.0                 mm3_c 3 -10983.75  31 22160.14     8.2    70.8    21.0                 mm4_a 4 -10976.16  36 22176.04    65.0    19.0     7.8     8.2         mm4_b 4 -10979.04  36 22181.80    37.6    13.6    47.8     1.0         mm4_c 4 -10976.16  36 22176.04    12.6    26.0    48.6    12.8         mm5_a 5 -10975.59  41 22205.99    22.0    29.2    30.0    10.6     8.2 mm5_b 5 -10971.30  41 22197.40    28.8    11.6    46.2     1.2    12.2 mm5_c 5 -10970.69  41 22196.17     5.2    14.2    48.6     9.6    22.4 summaryplot(mm1, mm2_b, mm3_b, mm4_c, mm5_c) library(ggalluvial) library(ggplot2)  ## We merge the classification of the 5 models : class12 <- merge(mm1$pprob[,1:2], mm2_b$pprob[,1:2], by=\"ID\") colnames(class12) <- c(\"ID\",\"mm1\",\"mm2_b\") class123 <- merge(class12, mm3_b$pprob[,1:2], by=\"ID\") colnames(class123) <- c(\"ID\",\"mm1\",\"mm2_b\",\"mm3_b\") class1234 <- merge(class123, mm4_c$pprob[,1:2], by=\"ID\") colnames(class1234) <- c(\"ID\",\"mm1\",\"mm2_b\",\"mm3_b\",\"mm4_c\") class <- merge(class1234, mm5_c$pprob[,1:2], by=\"ID\") colnames(class) <- c(\"ID\",\"mm1\",\"mm2_b\",\"mm3_b\",\"mm4_c\",\"mm5_c\")  ## We plot the flows : ggplot(class,        aes(axis1 = mm1, axis2 = mm2_b, axis3 = mm3_b, axis4 = mm4_c, axis5 = mm5_c,             fill = after_stat(stratum), label = after_stat(stratum))) +     scale_x_discrete(limits = c(\"mm1\",\"mm2_b\",\"mm3_b\",\"mm4_c\",\"mm5_c\")) +   geom_flow() +   geom_stratum() +     geom_text(stat = \"stratum\", size = 6) +   theme(legend.position = \"right\",         axis.title = element_text(size = 18),       axis.text = element_text(size = 16),         legend.title = element_text(size = 16),         legend.text = element_text(size = 14)) +   labs(y = \"Number of subjects\",        x = \"Model\",        fill = \"Class\") Warning in to_lodes_form(data = data, axes = axis_ind, discern = params$discern): Some strata appear at multiple axes.  Warning in to_lodes_form(data = data, axes = axis_ind, discern = params$discern): Some strata appear at multiple axes.  Warning in to_lodes_form(data = data, axes = axis_ind, discern = params$discern): Some strata appear at multiple axes."},{"path":[]},{"path":"/articles/multivariate_latent_class_model_with_mpjlcmm.html","id":"summary-of-the-model","dir":"Articles","previous_headings":"A bivariate example > Description of the 2-class model","what":"Summary of the model","title":"How to estimate a multivariate latent class mixed model using mpjlcmm function","text":"","code":"summary(mm2_b) Multivariate joint latent class model for quantitative outcome and competing risks       fitted by maximum likelihood method    mpjlcmm(longitudinal = list(mMMSE2, mCESD2), subject = \"ID\",      ng = 2, data = paquid, posfix = 10)   Statistical Model:       Dataset: paquid       Number of subjects: 500       Number of longitudinal models: 2       Number of observations: 2214 2104       Number of latent classes: 2       Number of parameters: 27        Number of estimated parameters: 26        Link functions: Quadratic I-splines with nodes 0 25 27 29 30  for  MMSE                       Quadratic I-splines with nodes 0 2 6 12 52  for  CESD    Iteration process:       Convergence criteria satisfied       Number of iterations:  26       Convergence criteria: parameters= 4.2e-06                           : likelihood= 8.2e-05                           : second derivatives= 1.1e-08    Goodness-of-fit statistics:       maximum log-likelihood: -10997.88        AIC: 22047.76        BIC: 22157.34         Maximum Likelihood Estimates:    Fixed effects in the class-membership model: (the class of reference is the last class)                        coef      Se    Wald p-value intercept class1 -1.03757 0.19494  -5.322 0.00000   Longitudinal model for MMSE :  Fixed effects in the longitudinal model:                                      coef      Se    Wald p-value intercept class1 (not estimated)  0.00000                         intercept class2                  0.34847 0.30384   1.147 0.25143 I(...) class1                    -1.41500 0.16752  -8.447 0.00000 I(...) class2                    -1.13436 0.08760 -12.949 0.00000  Variance-covariance matrix of the random-effects:                  intercept I((age - 65)/10) intercept          2.17911                  I((age - 65)/10)  -0.89871          0.83935  Residual standard error: 1 (not estimated)  Parameters of the link functions:                      coef       Se    Wald p-value MMSE-I-splines1 -6.86640  0.32838 -20.910 0.00000 MMSE-I-splines2  1.04368  0.08112  12.865 0.00000 MMSE-I-splines3  0.00000*                         MMSE-I-splines4  1.98366  0.03381  58.679 0.00000 MMSE-I-splines5  1.25600  0.03019  41.597 0.00000 MMSE-I-splines6  1.00043  0.03617  27.658 0.00000 MMSE-I-splines7  0.91330  0.02682  34.050 0.00000   Longitudinal model for CESD :  Fixed effects in the longitudinal model:                                      coef      Se    Wald p-value intercept class1 (not estimated)  0.00000                         intercept class2                 -2.84768 0.21559 -13.209 0.00000 I(...) class1                    -0.02509 0.12124  -0.207 0.83605 I(...) class2                     0.70735 0.05778  12.243 0.00000  Variance-covariance matrix of the random-effects:                  intercept I((age - 65)/10) intercept          0.31009                  I((age - 65)/10)   0.04817          0.04441  Residual standard error: 1 (not estimated)  Parameters of the link functions:                      coef      Se    Wald p-value CESD-I-splines1 -3.76547 0.22277 -16.903 0.00000 CESD-I-splines2  1.02786 0.02458  41.825 0.00000 CESD-I-splines3  0.72903 0.03776  19.309 0.00000 CESD-I-splines4  0.98285 0.03241  30.328 0.00000 CESD-I-splines5  1.57674 0.04486  35.144 0.00000 CESD-I-splines6 -0.92716 0.16796  -5.520 0.00000 CESD-I-splines7  1.36802 0.17561   7.790 0.00000   *  coefficient fixed by the user"},{"path":"/articles/multivariate_latent_class_model_with_mpjlcmm.html","id":"update-the-univariate-models","dir":"Articles","previous_headings":"A bivariate example > Description of the 2-class model","what":"Update the univariate models","title":"How to estimate a multivariate latent class mixed model using mpjlcmm function","text":"update function returns \\(K\\) univariate models used specify mpjlcmm model, updated outputs. parameters estimated variance replaced one optimized multivariate framework. prediction functions called mMMSE2_biv mCESD2_biv objects.","code":"upd_mm2_b <- update(mm2_b) mMMSE2_biv <- upd_mm2_b[[1]] mCESD2_biv <- upd_mm2_b[[2]]"},{"path":"/articles/multivariate_latent_class_model_with_mpjlcmm.html","id":"predictions-of-the-trajectories","dir":"Articles","previous_headings":"A bivariate example > Description of the 2-class model","what":"Predictions of the trajectories","title":"How to estimate a multivariate latent class mixed model using mpjlcmm function","text":"Class-specific predictions can computed data contained dataframe soon covariates specified model included dataframe. next lines, dataframe created generating vector \\(age\\) values 65 95. predictions computed predictY plotted associated plot function.      add point point confidence bands, use option draws=TRUE predictY call.  ","code":"## predicted trajectories of the MMSE score pred_MMSE <- predictY(mMMSE2_biv, data.frame(age=seq(65,95,length.out=50)), var.time = \"age\") ## predicted trajectories of the CESD score pred_CESD <- predictY(mCESD2_biv, data.frame(age=seq(65,95,length.out=50)), var.time = \"age\") par(mfrow=c(1,2)) plot(pred_MMSE, lwd=3, ylab=\"MMSE\", main=\"Predicted trajectories for MMSE\", legend.loc=\"bottomleft\") plot(pred_CESD, lwd=3, ylab=\"CESD\", main=\"Predicted trajectories for CESD\", legend=NULL)"},{"path":[]},{"path":"/articles/multivariate_latent_class_model_with_mpjlcmm.html","id":"plot-of-the-residuals","dir":"Articles","previous_headings":"A bivariate example > Evaluation of the model","what":"Plot of the residuals","title":"How to estimate a multivariate latent class mixed model using mpjlcmm function","text":" ","code":"plot(mMMSE2_biv) plot(mCESD2_biv)"},{"path":"/articles/multivariate_latent_class_model_with_mpjlcmm.html","id":"graph-of-the-predictions-versus-observations","dir":"Articles","previous_headings":"A bivariate example > Evaluation of the model","what":"Graph of the predictions versus observations","title":"How to estimate a multivariate latent class mixed model using mpjlcmm function","text":"  order evaluate fit selected model, plot simultaneously observations predicted values latent class.    ","code":"plot(mMMSE2_biv, which=\"fit\", var.time=\"age\", marg=FALSE, shades = TRUE) plot(mCESD2_biv, which=\"fit\", var.time=\"age\", marg=FALSE, shades = TRUE)"},{"path":"/articles/multivariate_latent_class_model_with_mpjlcmm.html","id":"classification","dir":"Articles","previous_headings":"A bivariate example > Evaluation of the model","what":"Classification","title":"How to estimate a multivariate latent class mixed model using mpjlcmm function","text":"posterior classification model obtained :      Class 1 composed 107 subjects (21.4%), whereas 393 second class. can also see good discrimination power model mean posterior probability 0.8280 class 1 0.8926 class 2. satisfactory proportion subject also classified posterior probability 0.7.  ","code":"postprob(mm2_b)    Posterior classification based on longitudinal and time-to-event data:    class1 class2 N  107.0  393.0 %   21.4   78.6   Posterior classification table:       --> mean of posterior probabilities in each class          prob1  prob2 class1 0.8280 0.1720 class2 0.1074 0.8926   Posterior probabilities above a threshold (%):           class1 class2 prob>0.7  70.09  87.02 prob>0.8  65.42  78.12 prob>0.9  46.73  64.38     Posterior classification based only on longitudinal data:    class1 class2 N  107.0  393.0 %   21.4   78.6"},{"path":"/articles/multivariate_latent_class_model_with_mpjlcmm.html","id":"multivariate-joint-models","dir":"Articles","previous_headings":"","what":"Multivariate joint models","title":"How to estimate a multivariate latent class mixed model using mpjlcmm function","text":"mpjclmm function also allows modelisation time--event outcome proportional hazard model, possibly competing risks. add time dementia previous model, call :","code":"mmS2 <- mpjlcmm(longitudinal=list(mMMSE2,mCESD2), subject=\"ID\", ng=2, data=paquid,                 survival=Surv(age_init,agedem,dem)~1)"},{"path":"/articles/pre_normalizing.html","id":"ces-d-example","dir":"Articles","previous_headings":"","what":"CES-D example","title":"Pre-normalizing a dependent variable using lcmm","text":"CES-D scale depressive symptomatology Paquid dataset made 20 items. sumscore extremely skewed large proportion small values:","code":"summary(paquid$CESD)    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's    0.000   2.000   6.000   8.488  12.000  52.000     146 hist(paquid$CESD, breaks=50)"},{"path":"/articles/pre_normalizing.html","id":"normalizing-a-variable-with-lcmm","dir":"Articles","previous_headings":"","what":"Normalizing a variable with lcmm","title":"Pre-normalizing a dependent variable using lcmm","text":"first step normalize variable estimating latent process mixed model. model roughly fit data need perfect model exact model planned future complete analysis. One possibility define “empty model” covariates (time functions random effects) :     splines link function 5 knots placed quantiles used. variable “obs” output table “mpreH$pred” includes normalized values CES-D observations dataset:     normalized variable (called instance “normCESD”) can now added dataset   analysis.","code":"#We recenter and scale the time variable \"age\" in order to avoid numerical problems paquid$age65 <- (paquid$age-65)/10 mpreH <- lcmm(CESD ~ age65 + I(age65^2), random = ~ age65 + I(age65^2), subject = 'ID', data=paquid, link = '5-quant-splines') head(mpreH$pred)   ID     pred_m   resid_m   pred_ss   resid_ss      obs    pred_m1  pred_ss1 1  1 0.11087827 1.3084181 0.9342107  0.4850857 1.419296 0.11087827 0.9342107 2  2 0.06084672 1.2129369 1.4361554 -0.1623718 1.273784 0.06084672 1.4361554 3  2 0.13130656 1.8192134 1.5798638  0.3706562 1.950520 0.13130656 1.5798638 4  2 0.31339488 1.9993097 1.8557179  0.4569867 2.312705 0.31339488 1.8557179 5  2 0.82900611 1.9299118 2.2349532  0.5239648 2.758918 0.82900611 2.2349532 7  3 0.26327499 0.8557632 0.5912826  0.5277556 1.119038 0.26327499 0.5912826 paquid$normCESD <- NULL  paquid$normCESD[!is.na(paquid$CESD)] <- mpreH$pred$obs summary(paquid[,c(\"CESD\",\"normCESD\")])       CESD           normCESD        Min.   : 0.000   Min.   :-1.8700    1st Qu.: 2.000   1st Qu.:-0.3916    Median : 6.000   Median : 0.5733    Mean   : 8.488   Mean   : 0.6016    3rd Qu.:12.000   3rd Qu.: 1.5582    Max.   :52.000   Max.   : 6.1425    NA's   :146      NA's   :146"},{"path":"/articles/pre_normalizing.html","id":"comparison-before-and-after-normalization","dir":"Articles","previous_headings":"","what":"Comparison before and after normalization","title":"Pre-normalizing a dependent variable using lcmm","text":"transformation change structure data. particular, spike 0 still present.    histogram, clear normalized CESD Gaussian distribution. Yet, normalization makes use methods Gaussian outcomes correct. instance, fitting linear mixed model including variable male, subject-specific residuals plots become correct (right part):   comparison, without normalization step, subject-specific residuals exhibited departure normality.","code":"par(mfrow=c(1,2)) hist(paquid$CESD, breaks=50, cex.main=0.9, main=\"Distribution of CESD\") hist(paquid$normCESD, breaks=50, cex.main=0.9, main=\"Distribution of normCESD\") normCESD <- hlme(normCESD ~ age65*male, random = ~ age65, subject = 'ID', data=paquid) plot(normCESD, cex.main=0.8) CESD <- hlme(CESD ~ age65*male, random = ~ age65, subject = 'ID', data=paquid) plot(CESD, cex.main=0.8)"},{"path":"/articles/pre_normalizing.html","id":"to-go-further","dir":"Articles","previous_headings":"","what":"To go further","title":"Pre-normalizing a dependent variable using lcmm","text":"future use, can interesting define metric normCESD. Indeed, now, scale easy understand depends data structure. Two options possible:","code":""},{"path":"/articles/pre_normalizing.html","id":"standardizing-normcesd","dir":"Articles","previous_headings":"To go further","what":"1. Standardizing normCESD","title":"Pre-normalizing a dependent variable using lcmm","text":"variable can standardized (like Z-score) removing mean time dividing standard deviation time. can done many data observed time, like baseline. , age time scale, use easily. Unfortunately, baseline data available dataset! theoretical example computation:  ","code":"m <- mean(paquid$normCESD[(paquid$visit==0) & (!is.na(paquid$normCESD))]) s <- sd(paquid$normCESD[(paquid$visit==0) & (!is.na(paquid$normCESD))]) paquid$ZnormCESD <- (paquid$normCESD - m)/s"},{"path":"/articles/pre_normalizing.html","id":"rescaling-normcesd-into-0---100","dir":"Articles","previous_headings":"To go further","what":"2. Rescaling normCESD into 0 - 100","title":"Pre-normalizing a dependent variable using lcmm","text":"variable can scaled 0-100 0 corresponding minimum value observed sample (usually 0) 100 maximum observed value. works whatever timescale study:  ","code":"min <- min(paquid$normCESD[!is.na(paquid$normCESD)]) max <- max(paquid$normCESD[!is.na(paquid$normCESD)]) paquid$normCESD100 <- (paquid$normCESD - min)/(max-min)*100 summary(paquid$normCESD100)    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's     0.00   18.45   30.49   30.85   42.79  100.00     146"},{"path":"/articles/pre_normalizing.html","id":"example-of-model-with-normcesd100","dir":"Articles","previous_headings":"To go further","what":"Example of model with normCESD100","title":"Pre-normalizing a dependent variable using lcmm","text":"statistical analysis can now performed using one normalized variables, normCESD, ZnormCESD normCESD100. normCESD100 example, linear mixed model linear trajectory according age adjustment male, education interaction time well birth cohort effect (age entry) can fitted:     linear mixed model linear trajectory according time since entry adjustment male, education interaction time well birth cohort effect (age entry):   statistical method assuming normality outcome!","code":"m1 <- hlme(normCESD100 ~ age65*male + CEP*age65 + age_init, random=~age65, subject='ID',data=paquid) summary(m1) paquid$time <- paquid$age - paquid$age_init m2 <- hlme(normCESD100 ~ time*male + CEP*time + age_init, random=~time, subject='ID', data=paquid) summary(m2)"},{"path":"/articles/usual_problems.html","id":"why-my-model-did-not-converge","dir":"Articles","previous_headings":"","what":"Why my model did not converge?","title":"Usual problems encountered when using lcmm package","text":"sometimes happens model converge correctly. due time stringent criterion based “derivatives”. criterion uses first derivatives inverse matrix second derivatives (Hessian). ensures program converges maximum. can’t computed correctly (time Hessian definite positive), program reports “second derivatives = 1”. several reasons may induce non convergence, e.g.: time variable (generally variable random effects) unit induces small associated parameters (small changes per day). case, changing scale (instance months years) may solve problem. models splines link function (lcmm, multlcmm, Jointlcmm, mpjlcmm) splines baseline risk function (Jointlcmm, mpjlcmm), parameter associated splines close zero may prevent correct convergence border parameter space. case, parameter can fixed 0 convergence reached immediately. patient, happens iterations derivatives might invertible model converges (can change maxiter rerun program estimates non convergence point). usually necessary specify 100 200 iterations. iterative algorithm used converge dozen iterations. can try assume less stringent threshold (e.g., 0.01) careful, convergence might lower quality. Run model different initial values.  ","code":""},{"path":"/articles/usual_problems.html","id":"how-to-choose-the-number-of-latent-classes","dir":"Articles","previous_headings":"","what":"How to choose the number of latent classes?","title":"Usual problems encountered when using lcmm package","text":"Selection number latent classes complex question. cases, number known. , different tools can used guide decision: Several statistical criteria BIC, SABIC, ICL Entropy Statistical tests available: score test conditional independence joint models Discrimination power described classification table using command postprob Size classes (can consider classes larger 1% 5% depending context) Clinical aspects interpretation also taken account Finally, can useful present contrast models different numbers latent classes. complexity selection optimal number latent classes illustrated hlme vignette. Indeed, criteria may concordant practice.  ","code":""},{"path":"/articles/usual_problems.html","id":"how-to-evaluate-the-quality-of-a-classification","dir":"Articles","previous_headings":"","what":"How to evaluate the quality of a classification?","title":"Usual problems encountered when using lcmm package","text":"Good discrimination classes usually sought fitting latent class mixed models. Discriminatory power can assessed using entropy criterion (provided summarytable) also using classification table (command postprob). description classes may also help comprehend latent class structure. (see hlme vignette details)  ","code":""},{"path":"/articles/usual_problems.html","id":"how-to-evaluate-the-fit-of-a-model","dir":"Articles","previous_headings":"","what":"How to evaluate the fit of a model?","title":"Usual problems encountered when using lcmm package","text":"Different techniques can used package evaluate goodness fit. mixed models, one can compare subject-specific predictions observations plot subject-specific residuals. comparison flexible models can also useful (flexible link functions, flexible baseline risk functions, flexible functions time, etc.) vignette includes section evaluation model.  ","code":""},{"path":"/articles/usual_problems.html","id":"how-to-pre-normalize-a-variable-using-lcmm","dir":"Articles","previous_headings":"","what":"How to pre-normalize a variable using lcmm?","title":"Usual problems encountered when using lcmm package","text":"detailed vignette pre-normalizing.  ","code":""},{"path":"/articles/usual_problems.html","id":"how-to-change-the-latent-class-in-reference","dir":"Articles","previous_headings":"","what":"How to change the latent class in reference?","title":"Usual problems encountered when using lcmm package","text":"order latent classes can changed function (hlme, lcmm, Jointlcmm, mpjlcmm) using permut function. example estimation two class linear mixed model: order latent classes can changed running: models objects mhlme2 mhlme2perm except permutation classes shown cross-table:  ","code":"mhlme <- hlme(IST ~ I(age-age_init),random=~ I(age-age_init),subject=\"ID\",data=paquid) set.seed(1234) mhlme2 <- hlme(IST ~ I(age-age_init),random=~ I(age-age_init),subject=\"ID\",data=paquid,ng=2,                mixture=~ I(age-age_init),classmb =~ CEP , B=random(mhlme)) summary(mhlme2) Heterogenous linear mixed model       fitted by maximum likelihood method    hlme(fixed = IST ~ I(age - age_init), mixture = ~I(age - age_init),      random = ~I(age - age_init), subject = \"ID\", classmb = ~CEP,      ng = 2, data = paquid)   Statistical Model:       Dataset: paquid       Number of subjects: 494       Number of observations: 2052       Number of observations deleted: 198       Number of latent classes: 2       Number of parameters: 10     Iteration process:       Convergence criteria satisfied       Number of iterations:  14       Convergence criteria: parameters= 1.3e-07                           : likelihood= 3.8e-08                           : second derivatives= 1.1e-14    Goodness-of-fit statistics:       maximum log-likelihood: -6010.69        AIC: 12041.38        BIC: 12083.4       Maximum Likelihood Estimates:    Fixed effects in the class-membership model: (the class of reference is the last class)                        coef      Se    Wald p-value intercept class1  2.82685 1.02219   2.765 0.00568 CEP class1       -3.37139 1.00100  -3.368 0.00076  Fixed effects in the longitudinal model:                       coef      Se    Wald p-value intercept class1 25.54344 0.49564  51.537 0.00000 intercept class2 32.93897 0.54910  59.987 0.00000 I(...) class1    -0.51254 0.05030 -10.189 0.00000 I(...) class2    -0.57198 0.04928 -11.606 0.00000   Variance-covariance matrix of the random-effects:                   intercept I(age - age_init) intercept          10.89147                   I(age - age_init)   0.03929           0.09386                               coef      Se Residual standard error:  3.36817 0.06757 mhlme2perm <- permut(mhlme2, order=c(2,1)) summary(mhlme2) Heterogenous linear mixed model       fitted by maximum likelihood method    hlme(fixed = IST ~ I(age - age_init), mixture = ~I(age - age_init),      random = ~I(age - age_init), subject = \"ID\", classmb = ~CEP,      ng = 2, data = paquid)   Statistical Model:       Dataset: paquid       Number of subjects: 494       Number of observations: 2052       Number of observations deleted: 198       Number of latent classes: 2       Number of parameters: 10     Iteration process:       Convergence criteria satisfied       Number of iterations:  14       Convergence criteria: parameters= 1.3e-07                           : likelihood= 3.8e-08                           : second derivatives= 1.1e-14    Goodness-of-fit statistics:       maximum log-likelihood: -6010.69        AIC: 12041.38        BIC: 12083.4       Maximum Likelihood Estimates:    Fixed effects in the class-membership model: (the class of reference is the last class)                        coef      Se    Wald p-value intercept class1  2.82685 1.02219   2.765 0.00568 CEP class1       -3.37139 1.00100  -3.368 0.00076  Fixed effects in the longitudinal model:                       coef      Se    Wald p-value intercept class1 25.54344 0.49564  51.537 0.00000 intercept class2 32.93897 0.54910  59.987 0.00000 I(...) class1    -0.51254 0.05030 -10.189 0.00000 I(...) class2    -0.57198 0.04928 -11.606 0.00000   Variance-covariance matrix of the random-effects:                   intercept I(age - age_init) intercept          10.89147                   I(age - age_init)   0.03929           0.09386                               coef      Se Residual standard error:  3.36817 0.06757 xclass(mhlme2perm,mhlme2)           1   2   1   0 232   2 262   0"},{"path":"/articles/usual_problems.html","id":"how-to-make-predictions-on-external-data","dir":"Articles","previous_headings":"","what":"How to make predictions on external data?","title":"Usual problems encountered when using lcmm package","text":"object stemmed estimation function lcmm package (hlme, lcmm, Jointlcmm, mpjlcmm) provides predictions data model estimated. Different functions allows type computations external data:","code":""},{"path":"/articles/usual_problems.html","id":"classification-with-predictclass","dir":"Articles","previous_headings":"How to make predictions on external data?","what":"Classification with PredictClass","title":"Usual problems encountered when using lcmm package","text":"predictClass function computes posterior classification posterior class-membership probabilities latent class model estimated package lcmm. instance, using 2-class model estimated , posterior probabilities classification can computed newdata, data second subject paquid dataset:  ","code":"predictClass(mhlme2, newdata=paquid[2:6,])   ID class     prob1     prob2 1  2     1 0.5508846 0.4491154"},{"path":"/articles/usual_problems.html","id":"random-effects-with-predictre","dir":"Articles","previous_headings":"How to make predictions on external data?","what":"Random-effects with predictRE","title":"Usual problems encountered when using lcmm package","text":"predictRE function computes predicted random-effects model estimated within lcmm package new subject whose data (.e., covariates outcomes) provided newdata:  ","code":"predictRE(mhlme2, newdata=paquid[2:6,])   ID  intercept I(age - age_init) 6  2 -0.9514829       -0.07391964"},{"path":"/articles/usual_problems.html","id":"predictions-of-outcomes-in-their-natural-scale-using-predicty-and-predictycond","dir":"Articles","previous_headings":"How to make predictions on external data?","what":"Predictions of outcomes in their natural scale using predictY and predictYcond","title":"Usual problems encountered when using lcmm package","text":"predictY function provides default mean outcome value predicted profile covariates (provided newdata). prediction (marg=TRUE default) marginal prediction. Subject-specific predictions can obtained hlme right now. case, indicated option marg=FALSE newdata include outcome data predicted random-effects can included. Predictions outcomes can also directly computed latent process value. useful nonlinear link functions used models. obtained function predictYcond.","code":"predss <- predictY(mhlme2, paquid[2:6,], marg=FALSE) predss$pred   ID  pred_ss pred_ss1 pred_ss2 2  2 27.25200 26.21337 28.52597 3  2 25.96443 25.05767 27.07667 4  2 23.07531 22.46442 23.82463 5  2 16.73827 16.77635 16.69156 6  2 14.93028 15.15351 14.65646"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Cecile Proust-Lima. Author, maintainer. Viviane Philipps. Author. Amadou Diakite. Contributor. Benoit Liquet. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cecile Proust-Lima, Viviane Philipps, Benoit Liquet (2017). Estimation Extended Mixed Models Using Latent Classes Latent Processes: R Package lcmm. Journal Statistical Software, 78(2), 1-56. doi:10.18637/jss.v078.i02 Proust-Lima C, Philipps V, Diakite , Liquet B (2023). lcmm: Extended Mixed Models Using Latent Classes Latent Processes. R package version: 2.1.0, https://cran.r-project.org/package=lcmm.","code":"@Article{,   title = {Estimation of Extended Mixed Models Using Latent Classes and Latent Processes: The {R} Package {lcmm}},   author = {C\\'ecile Proust-Lima and Viviane Philipps and Benoit Liquet},   journal = {Journal of Statistical Software},   year = {2017},   volume = {78},   number = {2},   pages = {1--56},   doi = {10.18637/jss.v078.i02}, } @Manual{,   title = {lcmm: Extended Mixed Models Using Latent Classes and Latent Processes},   author = {Cecile Proust-Lima and Viviane Philipps and Amadou Diakite and Benoit Liquet},   year = {2023},   note = {R package version: 2.1.0},   url = {https://cran.r-project.org/package=lcmm}, }"},{"path":"/index.html","id":"extended-mixed-models-using-latent-classes-and-latent-processes","dir":"","previous_headings":"","what":"Extended Mixed Models Using Latent Classes and Latent Processes","title":"Extended Mixed Models Using Latent Classes and Latent Processes","text":"  lcmm package implements various extensions mixed models. handles continuous (Gaussian ) ordinal outcomes repeated measures latent classes. time--event can jointly considered proportionnal hazard model. models estimated maximum likelihood framework using modified Marquardt-Levenberg algorithm. package also includes several predictions, visualization, utility functions conduct complete statistical analysis. detailed companion paper available Journal Statistical Software : Proust-Lima C, Philipps V, Liquet B. Estimation Extended Mixed Models Using Latent Classes Latent Processes: R Package lcmm. Journal Statistical Software, Articles. 2017;78(2):1-56. https://doi.org/10.18637/jss.v078.i02 specific statistical models estimated described various statistical papers authors.  ","code":""},{"path":"/index.html","id":"install-the-package","dir":"","previous_headings":"","what":"Install the package","title":"Extended Mixed Models Using Latent Classes and Latent Processes","text":"lcmm package needs version 3.5 newer R software. install released CRAN version package, use get recent update, install github : lcmm package depends R package, namely : survival (>=2.37-2) dealing survival outcomes parallel parallelizing time consuming functions mvtnorm generating random parameters randtoolbox quasi Monte Carlo sequences marqLevAlg (>2.0) numerical optimization run examples proposed website, following package also needed : lattice NormPsy ggplot2 ggpubr dplyr splines gridExtra ggalluvial  ","code":"install.packages(\"lcmm\") remotes::install_github(\"CecileProust-Lima/lcmm\")"},{"path":"/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Extended Mixed Models Using Latent Classes and Latent Processes","text":"website intended help lcmm users statistical analyses. provides overview package, several vignettes, FAQ page help pages functions included lcmm package. issues questions use lcmm package reported github issue page https://github.com/CecileProust-Lima/lcmm/issues. Please check opened closed issues make sure topic already treated creating new issue. report bug, please provide reproducible example.","code":""},{"path":"/reference/Diffepoce.html","id":null,"dir":"Reference","previous_headings":"","what":"Difference of expected prognostic cross-entropy (EPOCE) estimators and its\n95% tracking interval between two joint latent class models estimated with\nJointlcmm — Diffepoce","title":"Difference of expected prognostic cross-entropy (EPOCE) estimators and its\n95% tracking interval between two joint latent class models estimated with\nJointlcmm — Diffepoce","text":"function computes difference 2 EPOCE estimates (CVPOL MPOL) 95% tracking interval two joint latent class models estimated using Jointlcmm evaluated using epoce function. Difference CVPOL computed EPOCE previously estimated dataset used estimation (using approximated cross-validation), difference MPOL computed EPOCE previously estimated external dataset.","code":""},{"path":"/reference/Diffepoce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Difference of expected prognostic cross-entropy (EPOCE) estimators and its\n95% tracking interval between two joint latent class models estimated with\nJointlcmm — Diffepoce","text":"","code":"Diffepoce(epoceM1, epoceM2)"},{"path":"/reference/Diffepoce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Difference of expected prognostic cross-entropy (EPOCE) estimators and its\n95% tracking interval between two joint latent class models estimated with\nJointlcmm — Diffepoce","text":"epoceM1 first object inheriting class epoce epoceM2 second object inheriting class epoce","code":""},{"path":"/reference/Diffepoce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Difference of expected prognostic cross-entropy (EPOCE) estimators and its\n95% tracking interval between two joint latent class models estimated with\nJointlcmm — Diffepoce","text":"call.Jointlcmm1 Jointlcmm call epoceM1 call.Jointlcmm2 Jointlcmm call epoceM2 call matched call DiffEPOCE Dataframe containing, prediction time s, difference either MPOL CVPOL depending dataset used, 95% tracking bands (TIinf TIsup) new.data boolean internal use , FALSE computation done data Jointlcmm estimation, TRUE otherwise.","code":""},{"path":"/reference/Diffepoce.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Difference of expected prognostic cross-entropy (EPOCE) estimators and its\n95% tracking interval between two joint latent class models estimated with\nJointlcmm — Diffepoce","text":"function apply moment multiple causes event (competing risks). EPOCE estimates individual contributions prognostic observed log-likelihood obtained epoce function dataset two different estimated joint latent class models, difference CVPOL (MPOL) 95% tracking interval computed. 95% tracking interval : Delta(MPOL) +/- qnorm(0.975)*sqrt(VARIANCE) external dataset Delta(CVPOL) +/- qnorm(0.975)*sqrt(VARIANCE) dataset used Jointlcmm Delta(CVPOL) (Delta(MPOL)) difference CVPOL (MPOL) two joint latent class models, VARIANCE empirical variance difference individual contributions prognostic observed log-likelihoods two joint latent class models. See Commenges et al. (2012) Proust-Lima et al. (2012) details.","code":""},{"path":"/reference/Diffepoce.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Difference of expected prognostic cross-entropy (EPOCE) estimators and its\n95% tracking interval between two joint latent class models estimated with\nJointlcmm — Diffepoce","text":"Commenges, Liquet Proust-Lima (2012). Choice prognostic estimators joint models estimating differences expected conditional Kullback-Leibler risks. Biometrics 68(2), 380-7. Proust-Lima, Sene, Taylor, Jacqmin-Gadda (2014). Joint latent class models longitudinal time--event data: review. Statistical Methods Medical Research 23, 74-90.","code":""},{"path":[]},{"path":"/reference/Diffepoce.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Difference of expected prognostic cross-entropy (EPOCE) estimators and its\n95% tracking interval between two joint latent class models estimated with\nJointlcmm — Diffepoce","text":"Cecile Proust-Lima Amadou Diakite","code":""},{"path":"/reference/Diffepoce.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Difference of expected prognostic cross-entropy (EPOCE) estimators and its\n95% tracking interval between two joint latent class models estimated with\nJointlcmm — Diffepoce","text":"","code":"if (FALSE) { #### estimation with 2 latent classes (ng=2) m2 <- Jointlcmm(fixed= Ydep1~Time*X1,random=~Time,mixture=~Time,subject='ID' ,survival = Surv(Tevent,Event)~ X1+X2 ,hazard=\"Weibull\" ,hazardtype=\"PH\",ng=2,data=data_lcmm, B=c( 0.7608, -9.4974,  1.0242,  1.4331,  0.1063 , 0.6714, 10.4679, 11.3178,  -2.5671, -0.5386,  1.4616, -0.0605,  0.9489,  0.1020,  0.2079,  1.5045),logscale=TRUE) m1 <- Jointlcmm(fixed= Ydep1~Time*X1,random=~Time,subject='ID' ,survival = Surv(Tevent,Event)~ X1+X2 ,hazard=\"Weibull\" ,hazardtype=\"PH\",ng=1,data=data_lcmm, B=c(-7.6634,  0.9136,  0.1002,  0.6641, 10.5675, -1.6589,  1.4767, -0.0806,   0.9240,0.5643,  1.2277,  1.5004))  ## EPOCE computation for predictions times from 1 to 6 on the dataset used ## for estimation of m. VecTime <- c(1,3,5,7,9,11,13,15) cvpol1 <- epoce(m1,var.time=\"Time\",pred.times=VecTime) cvpol1 cvpol2 <- epoce(m2,var.time=\"Time\",pred.times=VecTime) cvpol2 DeltaEPOCE <- Diffepoce(cvpol1,cvpol2) summary(DeltaEPOCE) plot(DeltaEPOCE,bty=\"l\") }"},{"path":"/reference/ForInternalUse.html","id":null,"dir":"Reference","previous_headings":"","what":"For internal use only ... — ForInternalUse","title":"For internal use only ... — ForInternalUse","text":"internal use ...","code":""},{"path":"/reference/ItemInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional probabilities and item information given specified latent process values\nfor lcmm or multlcmm\nobject with ordinal outcomes. — ItemInfo","title":"Conditional probabilities and item information given specified latent process values\nfor lcmm or multlcmm\nobject with ordinal outcomes. — ItemInfo","text":"function computes conditional probability information function level ordinal outcome information function item level. Confidence bands (median) can computed Monte Carlo approximation.","code":""},{"path":"/reference/ItemInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditional probabilities and item information given specified latent process values\nfor lcmm or multlcmm\nobject with ordinal outcomes. — ItemInfo","text":"","code":"ItemInfo(   x,   lprocess,   condRE_Y = FALSE,   nsim = 200,   draws = FALSE,   ndraws = 2000,   ... )"},{"path":"/reference/ItemInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditional probabilities and item information given specified latent process values\nfor lcmm or multlcmm\nobject with ordinal outcomes. — ItemInfo","text":"x object inheriting class  lcmm multlcmm,  representing general (latent class) mixed model. lprocess numeric vector containing latent process values predictions computed. condRE_Y multlcmm objects , logical indicating predictions conditional outcome-specific random-effects . Default FALSE= predictions marginal random effects. nsim number points used numerical integration (Monte-Carlo) splines Beta link functions. nsim relatively important (nsim=200 default). draws optional boolean specifying whether median confidence bands predicted values computed (TRUE). Monte Carlo approximation  posterior distribution predicted values computed median,  2.5% 97.5% percentiles given. Otherwise, predicted values  computed point estimate. default, draws=FALSE. ndraws draws=TRUE, ndraws specifies number draws generated approximate posterior distribution predicted values. default, ndraws=2000. ... arguments passed methods.  ignored function.","code":""},{"path":"/reference/ItemInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditional probabilities and item information given specified latent process values\nfor lcmm or multlcmm\nobject with ordinal outcomes. — ItemInfo","text":"object class ItemInfo values : - ItemInfo:  draws=FALSE, returns matrix 3 columns: first column indicates name outcome, second indicates latent process value last computed Fisher information. draws=TRUE, returns matrix 5 columns: name outcome, latent process value 50%, 2.5% 97.5% percentiles approximated posterior distribution information. - LevelInfo:  draws=FALSE, returns matrix 5 columns: first column indicates name outcome, second indicates outcome's level, third indicates latent process value two last contain probability Fisher information. draws=TRUE, returns matrix 5 columns: name outcome, outcome's level, latent process value 50%, 2.5% 97.5% percentiles approximated posterior distribution probability information. - object: model computations done. - IC: indicator specifying confidence intervals computed.","code":""},{"path":"/reference/ItemInfo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Conditional probabilities and item information given specified latent process values\nfor lcmm or multlcmm\nobject with ordinal outcomes. — ItemInfo","text":"Cecile Proust-Lima, Viviane Philipps","code":""},{"path":"/reference/ItemInfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conditional probabilities and item information given specified latent process values\nfor lcmm or multlcmm\nobject with ordinal outcomes. — ItemInfo","text":"","code":"if (FALSE) { ## This is a toy example to illustrate the information functions. ## The binary outcomes are arbitrarily created, please do not ## consider them as relevent indicators. data_lcmm$Yord1 <- as.numeric(data_lcmm$Ydep1>10) data_lcmm$Yord2 <- as.numeric(data_lcmm$Ydep2>25) m <- multlcmm(Yord1+Yord2~Time+I(Time^2),random=~Time,subject='ID',ng=1, data=data_lcmm,link=\"thresholds\") info <- ItemInfo(m,lprocess=seq(-4,4,length.out=100),draws=TRUE) plot(info) par(mfrow=c(1,2)) plot(info, which=\"LevelInfo\", outcome=\"Yord1\") plot(info, which=\"LevelInfo\", outcome=\"Yord2\") plot(info, which=\"LevelProb\", outcome=\"Yord1\") plot(info, which=\"LevelProb\", outcome=\"Yord2\") }"},{"path":"/reference/Jointlcmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of joint latent class models for longitudinal and time-to-event\ndata — Jointlcmm","title":"Estimation of joint latent class models for longitudinal and time-to-event\ndata — Jointlcmm","text":"function fits joint latent class mixed models longitudinal outcome right-censored (possibly left-truncated) time--event. function handles competing risks Gaussian non Gaussian (curvilinear) longitudinal outcomes. curvilinear longitudinal outcomes, normalizing continuous functions (splines Beta CDF) can specified lcmm.","code":""},{"path":"/reference/Jointlcmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of joint latent class models for longitudinal and time-to-event\ndata — Jointlcmm","text":"","code":"Jointlcmm(   fixed,   mixture,   random,   subject,   classmb,   ng = 1,   idiag = FALSE,   nwg = FALSE,   survival,   hazard = \"Weibull\",   hazardtype = \"Specific\",   hazardnodes = NULL,   hazardrange = NULL,   TimeDepVar = NULL,   link = NULL,   intnodes = NULL,   epsY = 0.5,   range = NULL,   cor = NULL,   data,   B,   convB = 1e-04,   convL = 1e-04,   convG = 1e-04,   maxiter = 100,   nsim = 100,   prior = NULL,   pprior = NULL,   logscale = FALSE,   subset = NULL,   na.action = 1,   posfix = NULL,   partialH = FALSE,   verbose = FALSE,   returndata = FALSE,   var.time = NULL,   nproc = 1,   clustertype = NULL )  jlcmm(   fixed,   mixture,   random,   subject,   classmb,   ng = 1,   idiag = FALSE,   nwg = FALSE,   survival,   hazard = \"Weibull\",   hazardtype = \"Specific\",   hazardnodes = NULL,   hazardrange = NULL,   TimeDepVar = NULL,   link = NULL,   intnodes = NULL,   epsY = 0.5,   range = NULL,   cor = NULL,   data,   B,   convB = 1e-04,   convL = 1e-04,   convG = 1e-04,   maxiter = 100,   nsim = 100,   prior = NULL,   pprior = NULL,   logscale = FALSE,   subset = NULL,   na.action = 1,   posfix = NULL,   partialH = FALSE,   verbose = FALSE,   returndata = FALSE,   var.time = NULL,   nproc = 1,   clustertype = NULL )"},{"path":"/reference/Jointlcmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of joint latent class models for longitudinal and time-to-event\ndata — Jointlcmm","text":"fixed two-sided linear formula object fixed-effects linear mixed model. response outcome left ~ covariates separated + right ~.  default, intercept included. intercept, -1 first term included right ~. mixture one-sided formula object class-specific fixed effects linear mixed model (specify number latent classes greater 1).  Among list covariates included fixed, covariates class-specific regression parameters entered mixture separated +.  default, intercept included. intercept, -1 first term included. random optional one-sided formula random-effects linear mixed model. Covariates random-effect separated +.  default, intercept included. intercept, -1 first term included. subject name covariate representing grouping structure (called subject identifier) specified ''. classmb optional one-sided formula describing covariates class-membership multinomial logistic model. Covariates included separated +. intercept included formula. ng optional number latent classes considered. ng=1 (default) mixture classmb specified. ng>1, mixture required. idiag optional logical structure variance-covariance matrix random-effects. FALSE, non structured matrix variance-covariance considered (default).  TRUE diagonal matrix variance-covariance considered. nwg optional logical indicating variance-covariance random-effects class-specific. FALSE variance-covariance matrix common latent classes (default). TRUE class-specific proportional parameter multiplies variance-covariance matrix class (proportional parameter last latent class equals 1 ensure identifiability). survival two-sided formula object. left side formula corresponds surv() object type \"counting\" right-censored left-truncated data (example: Surv(Time,EntryTime,Indicator)) type \"right\" right-censored data (example: Surv(Time,Indicator)). Multiple causes event can considered Indicator (0 censored, k cause k event).  right side formula specifies names covariates include survival model mixture() effect class-specific (example: Surv(Time,Indicator) ~  X1 + mixture(X2) class-common effect X1 class-specific effect X2). presence competing events, covariate effects common default. Code cause(X3) specifies cause-specific covariate effect X3 cause event cause1(X3) (cause2(X3), ...) specifies cause-specific effect X3 first (second, ...) cause . hazard optional family hazard function assumed survival model. default, \"Weibull\" specifies Weibull baseline risk function. possibilities \"piecewise\" piecewise constant risk function \"splines\" cubic M-splines baseline risk function. two latter families, number nodes location nodes specified well, separated -. number nodes entered first followed -, location specified \"equi\", \"quant\" \"manual\" respectively equidistant nodes, nodes quantiles times event distribution interior nodes entered manually argument hazardnodes. followed - finally \"piecewise\" \"splines\" indicates family baseline risk function considered. Examples include \"5-equi-splines\" M-splines 5 equidistant nodes, \"6-quant-piecewise\" piecewise constant risk 5 intervals nodes defined quantiles times events distribution \"9-manual-splines\" M-splines risk function 9 nodes, vector 7 interior nodes entered argument hazardnodes. presence competing events, vector hazards provided hazard=c(\"Weibull\",\"splines\" 2 causes event, first one modelled Weibull baseline cause-specific risk function second one splines. hazardtype optional indicator type baseline risk function ng>1. default \"Specific\" indicates class-specific baseline risk function. possibilities \"PH\" baseline risk function proportional latent class, \"Common\" baseline risk function common classes. presence competing events, vector hazardtypes given. hazardnodes optional vector containing interior nodes splines piecewise specified baseline hazard function hazard. hazardrange optional vector indicating range survival times (minimum maximum). default, range defined according minimum maximum observed values survival times. option used piecewise constant Splines hazard functions. TimeDepVar optional vector containing intermediate time corresponding change risk event. time-dependent covariate can take form time variable assumption effect risk time constant effect risk event time (example: initiation treatment account ). link optional family link functions estimate. default, \"linear\" option specifies linear link function leading standard linear mixed model (homogeneous heterogeneous estimated hlme).  possibilities include \"beta\" estimating link function family Beta cumulative distribution functions, \"thresholds\" using threshold model describe correspondence level ordinal outcome underlying latent process, \"Splines\" approximating link function -splines. latter case, number nodes nodes location also specified. number nodes first entered followed -, location specified \"equi\", \"quant\" \"manual\" respectively equidistant nodes, nodes quantiles marker distribution interior nodes entered manually argument intnodes. followed - finally \"splines\" indicated. example, \"7-equi-splines\" means -splines 7 equidistant nodes, \"6-quant-splines\" means -splines 6 nodes located quantiles marker distribution \"9-manual-splines\" means -splines 9 nodes, vector 7 interior nodes entered argument intnodes. intnodes optional vector interior nodes. argument required -splines link function nodes entered manually. epsY optional definite positive real used rescale marker (0,1) beta link function used. default, epsY=0.5. range optional vector indicating range outcome (minimum maximum). default, range defined according minimum maximum observed values outcome. option used Beta Splines transformations. cor optional brownian motion autoregressive process modeling correlation observations.  \"BM\" \"AR\" specified, followed time variable brackets. default, correlation added. data optional data frame containing variables named fixed, mixture, random, classmb subject. B optional specification initial values parameters. Three options allowed: (1) vector initial values entered (order parameters included detailed details section).  (2) nothing specified. preliminary analysis involving estimation standard linear mixed model performed choose initial values.  (3) ng>1, Jointlcmm object entered. correspond exact structure model ng=1. program automatically generate initial values model. specification avoids preliminary analysis indicated (2) Note due possible local maxima, B vector specified several different starting points tried. convB optional threshold convergence criterion based parameter stability. default, convB=0.0001. convL optional threshold convergence criterion based log-likelihood stability. default, convL=0.0001. convG optional threshold convergence criterion based derivatives. default, convG=0.0001. maxiter optional maximum number iterations Marquardt iterative algorithm. default, maxiter=150. nsim optional number points predicted survival curves predicted baseline risk curves. default, nsim=100. prior optional name covariate containing prior information latent class membership. covariate integer values 0,1,...,ng. Value O indicates prior subject value 1,...,ng indicates subject belongs corresponding latent class. pprior optional vector specifying names covariates containing prior probabilities belong latent class. probabilities 0 1 sum 1 subject. logscale optional boolean indicating whether exponential (logscale=TRUE) square (logscale=FALSE -default) transformation used ensure positivity parameters baseline risk functions. See details section subset specification rows used: defaults rows. can valid indexing vector rows data supplied, data frame made variable used formula. na.action Integer indicating NAs managed. default 1 'na.omit'. alternative 2 'na.fail'. options 'na.pass' 'na.exclude' implemented current version. posfix Optional vector specifying indices vector B parameters estimated. Default NULL, parameters estimated. partialH optional logical Piecewise Splines baseline risk functions Splines link functions . Indicates whether parameters baseline risk link functions can dropped Hessian matrix define convergence criteria. verbose logical indicating information computation reported. Default TRUE. returndata logical indicating data used computation returned. Default FALSE, data returned. var.time optional character indicating name time variable. nproc number cores parallel computation. Default 1 (sequential mode). clustertype optional character indicating type cluster parallel computation.","code":""},{"path":"/reference/Jointlcmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of joint latent class models for longitudinal and time-to-event\ndata — Jointlcmm","text":"list returned : loglik log-likelihood model best vector parameter estimates order specified B detailed section details V model converged (conv=1 3), vector containing upper triangle matrix variance-covariance estimates Best exception variance-covariance parameters random-effects V contains variance-covariance estimates Cholesky transformed parameters displayed cholesky. conv=2, V contains second derivatives log-likelihood. gconv vector convergence criteria: 1. parameters, 2. likelihood, 3. derivatives conv status convergence: =1 convergence criteria satisfied, =2 maximum number iterations reached, =4 5 problem occured optimisation call matched call niter number Marquardt iterations pred table individual predictions residuals; includes marginal predictions (pred_m), marginal residuals (resid_m), subject-specific predictions (pred_ss) subject-specific residuals (resid_ss) averaged classes, observation (obs) finally class-specific marginal subject-specific predictions (number latent class: pred_m_1,pred_m_2,...,pred_ss_1,pred_ss_2,...). var.time specified, corresponding measurement time also included. pprob table posterior classification posterior individual class-membership probabilities based longitudinal data time--event data pprobY table posterior classification posterior individual class-membership probabilities based longitudinal data predRE table containing individual predictions random-effects: column per random-effect, line per subject cholesky vector containing estimates Cholesky transformed parameters variance-covariance matrix random-effects scoretest Statistic Score Test conditional independence assumption longitudinal survival data given latent class structure. null hypothesis, statistics Chi-square p degrees freedom p indicates number random-effects longitudinal mixed model. See Jacqmin-Gadda Proust-Lima (2009) details. predSurv table predictions giving window times event (called \"time\"), predicted baseline risk function latent class (called \"RiskFct\") predicted cumulative baseline risk function latent class (called \"CumRiskFct\"). hazard internal information hazard specification used related functions data original data set (returndata TRUE)","code":""},{"path":"/reference/Jointlcmm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation of joint latent class models for longitudinal and time-to-event\ndata — Jointlcmm","text":". BASELINE RISK FUNCTIONS baseline risk functions, following parameterizations considered. careful, parametrisations changed lcmm_V1.5: 1. \"Weibull\" function: 2 parameters necessary w_1 w_2 baseline risk function a_0(t) = w_1^2*w_2^2*(w_1^2*t)^(w_2^2-1) logscale=FALSE a_0(t) = exp(w_1)*exp(w_2)(t)^(exp(w_2)-1) logscale=TRUE. 2. \"piecewise\" step function nz nodes (y_1,...y_nz), nz-1 parameters necesssary p_1,...p_nz-1 baseline risk function a_0(t) = p_j^2 y_j < t =< y_j+1 logscale=FALSE a_0(t) = exp(p_j) y_j < t =< y_j+1 logscale=TRUE. 3. \"splines\" function nz nodes (y_1,...y_nz), nz+2 parameters necessary s_1,...s_nz+2 baseline risk function a_0(t) = sum_j s_j^2 M_j(t) logscale=FALSE a_0(t) = sum_j exp(s_j) M_j(t) logscale=TRUE M_j basis cubic M-splines. Two parametrizations baseline risk function proposed (logscale=TRUE FALSE) cases, especially instantaneous risks close 0, convergence problems may appear one parameterization . consequence, recommend try alternative parameterization (changing logscale option) joint latent class model converge (maximum number iterations reached) convergence criteria based parameters likelihood small. B. VECTOR PARAMETERS B parameters vector initial values B vector maximum likelihood estimates best included following order: (1) ng-1 parameters required intercepts latent class membership model, covariates included classmb, ng-1 parameters entered one; (2) parameters baseline risk function: 2 parameters Weibull, nz-1 piecewise constant risk nz+2 splines risk; number multiplied ng specific hazard specified; otherwise, ng-1 additional proportional effects expected PH hazard specified; otherwise nothing added common hazard specified. presence competing events, number parameters adapted number causes event; (3) covariates survival, ng parameters required covariate inside mixture(), otherwise 1 parameter required. Covariates parameters included order survival. presence cause-specific effects, number parameters multiplied number causes; (4) covariates fixed, one parameter required covariate mixture, ng parameters required covariate also mixture. Parameters included order fixed; (5) variance random-effect specified random (including intercept) idiag=TRUE inferior triangular variance-covariance matrix random-effects idiag=FALSE; (6) nwg=TRUE, ng-1 parameters class-specific proportional coefficients variance covariance matrix random-effects; (7) variance residual error. C. CAUTION caution made using program: (1) log-likelihood latent class model can multiple maxima, careful choice initial values crucial ensuring convergence toward global maximum.  program can run without entering vector initial values (see point 2).  However, recommend systematically enter initial values B try different sets initial values. (2) automatic choice initial values provide requires estimation preliminary linear mixed model. user aware first, preliminary analysis can take time large datatsets second, generated initial values can likely even may converge slowly local maximum.  reason several alternatives exist. vector initial values can directly specified B initial values can generated (automatically randomly) model ng=. Finally, function gridsearch performs automatic grid search. (3) Convergence criteria strict based derivatives log-likelihood addition parameter log-likelihood stability.  cases, program may converge reach maximum number iterations fixed 150.  case, user check parameter estimates last iteration boundaries parameter space.  parameters boundaries parameter space, identifiability model critical. may happen especially baseline risk functions involve splines (value close lower boundary - 0 logscale=F -infinity logscale=F) classmb parameters high low (perfect classification) linkfunction parameters. identifiability parameters suspected, program can run former estimates fixing suspected parameters value option posfix. usually solves problem. alternative remove parameters Beta Splines link function inverse Hessian option partialH.  , program run initial values.  problems convergence may happen instantaneous risks event low \"piecewise\" \"splines\" baseline risk functions specified. case, changing parameterization baseline risk functions option logscale recommended (see paragraph details).","code":""},{"path":"/reference/Jointlcmm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of joint latent class models for longitudinal and time-to-event\ndata — Jointlcmm","text":"Proust-Lima C, Philipps V, Liquet B (2017). Estimation Extended Mixed  Models Using Latent Classes Latent Processes: R Package lcmm.  Journal Statistical Software, 78(2), 1-56. doi:10.18637/jss.v078.i02 Lin, H., Turnbull, B. W., McCulloch, C. E. Slate, E. H. (2002). Latent class models joint analysis longitudinal biomarker event process data: application longitudinal prostate-specific antigen readings prostate cancer. Journal American Statistical Association 97, 53-65. Proust-Lima, C. Taylor, J. (2009). Development validation dynamic prognostic tool prostate cancer recurrence using repeated measures post-treatment PSA: joint modelling approach. Biostatistics 10, 535-49. Jacqmin-Gadda, H. Proust-Lima, C. (2010). Score test conditional independence longitudinal outcome time--event given classes joint latent class model. Biometrics 66(1), 11-9 Proust-Lima, Sene, Taylor Jacqmin-Gadda (2014). Joint latent class models longitudinal time--event data: review. Statistical Methods Medical Research 23, 74-90.","code":""},{"path":[]},{"path":"/reference/Jointlcmm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimation of joint latent class models for longitudinal and time-to-event\ndata — Jointlcmm","text":"Cecile Proust Lima, Amadou Diakite Viviane Philipps cecile.proust-lima@inserm.fr","code":""},{"path":[]},{"path":"/reference/StandardMethods.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard methods for estimated models — StandardMethods","title":"Standard methods for estimated models — StandardMethods","text":"coef vcov hlme, lcmm, mutlcmm, Jointlcmm, mpjlcmm, externSurv, externX models, fixef, ranef, fitted residuals methods estimated hlme, lcmm, mutlcmm Jointlcmm models.","code":""},{"path":"/reference/StandardMethods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard methods for estimated models — StandardMethods","text":"","code":"# S3 method for hlme coef(object, ...)"},{"path":"/reference/StandardMethods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standard methods for estimated models — StandardMethods","text":"object object class hlme, lcmm, multlcmm Jointlcmm ... arguments. ignored functions.","code":""},{"path":"/reference/StandardMethods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standard methods for estimated models — StandardMethods","text":"coef, vector estimates. vcov, variance-covariance matrix estimates. fixef : - hlme, lcmm multlcmm objects, list containing fixed effects estimates class-membership model longitudinal model.  - Jointlcmm objects, list containing fixed effects estimates class-membership model, survival model longitudinal model. ranef, matrix (nrow=number subjects, ncol=number covariates random effect) containing individual random effects. fitted, vector containing subject-specific predictions extracted object. residuals, vector containing subject-specific residuals extracted object.","code":""},{"path":"/reference/StandardMethods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Standard methods for estimated models — StandardMethods","text":"Cecile Proust-Lima, Viviane Philipps","code":""},{"path":"/reference/VarCov.html","id":null,"dir":"Reference","previous_headings":"","what":"Variance-covariance of the estimates — VarCov","title":"Variance-covariance of the estimates — VarCov","text":"function provides variance-covariance matrix estimates. vcov alias .","code":""},{"path":"/reference/VarCov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variance-covariance of the estimates — VarCov","text":"","code":"VarCov(x)"},{"path":"/reference/VarCov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variance-covariance of the estimates — VarCov","text":"x object class hlme, lcmm, multlcmm, Jointlcmm mpjlcmm","code":""},{"path":"/reference/VarCov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variance-covariance of the estimates — VarCov","text":"matrix containing variance-covariance estimates. parameters matrix variance-covariance random effects, Cholesky transformed parameters considered VarCov provides covariance matrix function estimates cholesky=TRUE.","code":""},{"path":[]},{"path":"/reference/VarCov.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Variance-covariance of the estimates — VarCov","text":"Cecile Proust-Lima, Viviane Philipps","code":""},{"path":"/reference/VarCovRE.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimates, standard errors and Wald test for the parameters of the\nvariance-covariance matrix of the random effects. — VarCovRE","title":"Estimates, standard errors and Wald test for the parameters of the\nvariance-covariance matrix of the random effects. — VarCovRE","text":"Fromm Cholesky transformed parameters, function provides estimates, standard errors Wald test parameters variance-covariance matrix random effects.","code":""},{"path":"/reference/VarCovRE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimates, standard errors and Wald test for the parameters of the\nvariance-covariance matrix of the random effects. — VarCovRE","text":"","code":"VarCovRE(Mod)"},{"path":"/reference/VarCovRE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimates, standard errors and Wald test for the parameters of the\nvariance-covariance matrix of the random effects. — VarCovRE","text":"Mod object class hlme, lcmm, multlcmm Jointlcmm","code":""},{"path":"/reference/VarCovRE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimates, standard errors and Wald test for the parameters of the\nvariance-covariance matrix of the random effects. — VarCovRE","text":"matrix containing estimates parameters variance-covariance matrix random effects, standard errors, , covariance parameters, Wald statistic associated p-value.","code":""},{"path":"/reference/VarCovRE.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimates, standard errors and Wald test for the parameters of the\nvariance-covariance matrix of the random effects. — VarCovRE","text":"Cecile Proust-Lima, Lionelle Nkam Viviane Philipps","code":""},{"path":"/reference/VarExpl.html","id":null,"dir":"Reference","previous_headings":"","what":"Percentage of variance explained by the (latent class) linear mixed model\nregression — VarExpl","title":"Percentage of variance explained by the (latent class) linear mixed model\nregression — VarExpl","text":"function provides percentage variance explained (latent class) linear mixed regression model estimated hlme, lcmm, multlcmm Jointlcmm.","code":""},{"path":"/reference/VarExpl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Percentage of variance explained by the (latent class) linear mixed model\nregression — VarExpl","text":"","code":"VarExpl(x, values)"},{"path":"/reference/VarExpl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Percentage of variance explained by the (latent class) linear mixed model\nregression — VarExpl","text":"x object class hlme, lcmm, multlcmm Jointlcmm values data frame unique row contains values variables random time variable correlation process percentage variance calculated.","code":""},{"path":"/reference/VarExpl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Percentage of variance explained by the (latent class) linear mixed model\nregression — VarExpl","text":"hlme, lcmm, Jointlcmm objects, function returns matrix 1 row ng (ie number latent classes) columns containing (class specific) percentages variance explained linear mixed regression. multlcmm objects, function returns matrix containing (class specific) percentages variance explained linear mixed regression outcome. resulting matrix composed many rows outcomes many columns latent classes.","code":""},{"path":[]},{"path":"/reference/VarExpl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Percentage of variance explained by the (latent class) linear mixed model\nregression — VarExpl","text":"Cecile Proust-Lima, Viviane Philipps","code":""},{"path":"/reference/VarExpl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Percentage of variance explained by the (latent class) linear mixed model\nregression — VarExpl","text":"","code":"if (FALSE) { m1 <- multlcmm(Ydep1+Ydep2~1+Time*X2+contrast(X2),random=~1+Time, subject=\"ID\",randomY=TRUE,link=c(\"4-manual-splines\",\"3-manual-splines\"), intnodes=c(8,12,25),data=data_lcmm,  B=c(-1.071, -0.192,  0.106, -0.005, -0.193,  1.012,  0.870,  0.881,   0.000,  0.000, -7.520,  1.401,  1.607 , 1.908,  1.431,  1.082,  -7.528,  1.135 , 1.454 , 2.328, 1.052))  # variation percentages explained by linear mixed regression VarExpl(m1,data.frame(Time=0)) }"},{"path":"/reference/WaldMult.html","id":null,"dir":"Reference","previous_headings":"","what":"Multivariate Wald Test — WaldMult","title":"Multivariate Wald Test — WaldMult","text":"function provides multivariate univariate Wald tests combinations parameters hlme, lcmm, multlcmm, Jointlcmm mpjlcmm models.","code":""},{"path":"/reference/WaldMult.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multivariate Wald Test — WaldMult","text":"","code":"WaldMult(Mod, pos = NULL, contrasts = NULL, name = NULL, value = NULL)"},{"path":"/reference/WaldMult.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multivariate Wald Test — WaldMult","text":"Mod object class hlme, lcmm, multlcmm, Jointlcmm mpjlcmm pos vector containing indices Mod$best parameters test contrasts numeric vector length pos.  NULL (default), simultaneous test appropriate parameters realised.  contrasts specified, quantity test dot product pos contrasts. name character containing name user wants give test. default, name's test null hypothesis. value value(s) test . default, test 0.","code":""},{"path":"/reference/WaldMult.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multivariate Wald Test — WaldMult","text":"contrasts NULL, function returns matrix 1 row 2 columns containing value Wald test's statistic associated p-value. contrasts NULL, function returns matrix 1 row 4 columns containing value coefficient (dot product pos contrasts), standard deviation, value Wald test's statistic associated p-value.","code":""},{"path":"/reference/WaldMult.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Multivariate Wald Test — WaldMult","text":"Cecile Proust-Lima, Lionelle Nkam Viviane Philipps","code":""},{"path":"/reference/cuminc.html","id":null,"dir":"Reference","previous_headings":"","what":"Predicted cumulative incidence of event according to a profile of covariates — cuminc","title":"Predicted cumulative incidence of event according to a profile of covariates — cuminc","text":"function computes predicted cumulative incidence cause event according profile covariates joint latent class model. Confidence bands can computed Monte-Carlo method.","code":""},{"path":"/reference/cuminc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predicted cumulative incidence of event according to a profile of covariates — cuminc","text":"","code":"cuminc(x, time, draws = FALSE, ndraws = 2000, integrateOptions = NULL, ...)"},{"path":"/reference/cuminc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predicted cumulative incidence of event according to a profile of covariates — cuminc","text":"x object inheriting class Jointlcmm mpjlcmm time vector times cumulative incidence calculated draws optional boolean specifying whether Monte Carlo approximation posterior distribution cumulative incidence computed median, 2.5% 97.5% percentiles given. Otherwise, predicted cumulative incidence computed point estimate. default, draws=FALSE. ndraws draws=TRUE, ndraws specifies number draws generated approximate posterior distribution predicted cumulative incidence. default, ndraws=2000. integrateOptions optional list specifying subdivisions, rel.tol stop..error options (see ?integrate). ... arguments, particular values covariates specified survival part joint model.","code":""},{"path":"/reference/cuminc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predicted cumulative incidence of event according to a profile of covariates — cuminc","text":"object class cuminc containing many matrices profiles defined covariates values. matrices contains event-specific cumulative incidences latent class different times specified.","code":""},{"path":[]},{"path":"/reference/cuminc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Predicted cumulative incidence of event according to a profile of covariates — cuminc","text":"Viviane Philipps Cecile Proust-Lima","code":""},{"path":"/reference/cuminc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predicted cumulative incidence of event according to a profile of covariates — cuminc","text":"","code":"m2 <- Jointlcmm(fixed= Ydep1~Time*X1,mixture=~Time,random=~Time, classmb=~X3,subject='ID',survival = Surv(Tevent,Event)~X1+mixture(X2), hazard=\"3-quant-splines\",hazardtype=\"PH\",ng=2,data=data_lcmm, B=c(0.64,-0.62,0,0,0.52,0.81,0.41,0.78,0.1,0.77,-0.05,10.43,11.3,-2.6, -0.52,1.41,-0.05,0.91,0.05,0.21,1.5))  par(mfrow=c(1,2)) plot(cuminc(m2,time=seq(0,20),X1=0,X2=0), ylim=c(0,1)) plot(cuminc(m2,time=seq(0,20),X1=0,X2=1), ylim=c(0,1))"},{"path":"/reference/data_hlme.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated dataset for hlme function — data_hlme","title":"Simulated dataset for hlme function — data_hlme","text":"data simulated 3-latent class linear mixed model. Repeated data 100 subjects simulated. three latent classes predicted X2 X3. latent class, Y follows linear mixed model including intercept time correlated random-effects class-specific fixed effects. addition, X1 X1*time common impact classes Y trajectory.","code":""},{"path":"/reference/data_hlme.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated dataset for hlme function — data_hlme","text":"data frame 326 observations following 9 variables. ID subject identification number Y longitudinal outcome Time time measurement X1 binary covariate X2 binary covariate X3 binary covariate","code":""},{"path":[]},{"path":"/reference/data_lcmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated dataset for lcmm and Jointlcmm functions — data_lcmm","title":"Simulated dataset for lcmm and Jointlcmm functions — data_lcmm","text":"data simulated joint latent class mixed model 3 classes.  Repeated data 3 longitudinal outcomes (Ydep1, Ydep2, Ydep3) censored time event (Tevent, Event) delayed entry (Tentry) simulated total 300 subjects.  three latent classes predicted continuous covariate X3.  latent class, longitudinal outcome Ydep1 followed linear mixed model including intercept, time squared time correlated random-effects class-specific fixed effects. addition, binary covariate X1 interaction time X1:Time common impact (classes) Ydep1 trajectory.  longitudinal ordinal outcomes Ydep2 Ydep3 generated Ydep1 using threshold models respectively 30 10 thresholds.  latent class, time event followed class-specific Weibull hazard common proportional effect binary covariate X2. time entry Tentry time censoring uniform distribution","code":""},{"path":"/reference/data_lcmm.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated dataset for lcmm and Jointlcmm functions — data_lcmm","text":"data frame 1678 observations 300 different subjects 22 variables. ID subject identification number Ydep1 longitudinal continuous outcome Ydep2 longitudinal ordinal outcome 31 levels Ydep3 longitudinal ordinal outcome 11 levels Tentry delayed entry time--event Tevent observed time--event: either censoring time time event Event indicator Tevent time event Time time measurement X1 binary covariate X2 binary covariate X3 continuous covariate X4 categorical covariate","code":""},{"path":[]},{"path":"/reference/dynpred.html","id":null,"dir":"Reference","previous_headings":"","what":"Individual dynamic predictions from a joint latent class model — dynpred","title":"Individual dynamic predictions from a joint latent class model — dynpred","text":"function computes individual dynamic predictions 95% confidence bands. Given joint latent class model, landmark time s, horizon time t measurements time s, predicted probability event window [s,s+t] calculated. Confidence bands can provided using Monte Carlo method.","code":""},{"path":"/reference/dynpred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Individual dynamic predictions from a joint latent class model — dynpred","text":"","code":"dynpred(   model,   newdata,   event = 1,   landmark,   horizon,   var.time,   fun.time = identity,   na.action = 1,   draws = FALSE,   ndraws = 2000 )"},{"path":"/reference/dynpred.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Individual dynamic predictions from a joint latent class model — dynpred","text":"model object inheriting class Jointlcmm. newdata data frame containing data predictions computed. data frame must contain model's covariates, observations longitudinal survival outcomes, subject identifier necessary variables specified prior TimeDepVar argumentsfrom Jointlcmm. event integer giving event prediction calculated landmark numeric vector containing landmark times. horizon numeric vector containing horizon times. var.time character indicating time variable newdata fun.time optional function. required time scales longitudinal part model survival part different. case, fun.time function translates times longitudinal part time scale survival part. default identity function means two time scales . na.action Integer indicating NAs managed. default 1 'na.omit'. alternative 2 'na.fail'. options 'na.pass' 'na.exclude' implemented current version. draws optional boolean specifying whether median confidence bands predicted values computed (TRUE). TRUE, Monte Carlo approximation posterior distribution predicted values computed median, 2.5% 97.5% percentiles given. Otherwise, predicted values computed point estimate. default, draws=FALSE. ndraws draws=TRUE, ndraws specifies number draws generated approximate posterior distribution predicted values. default, ndraws=2000.","code":""},{"path":"/reference/dynpred.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Individual dynamic predictions from a joint latent class model — dynpred","text":"list containing : pred matrix 4 columns draws=FALSE 6 columns draws=TRUE, containing subjects identifier, landmark times, horizon times, predicted probability (draws=FALSE) median, 2.5% 97.5 % percentiles 'ndraws' probabilities calculated (draws=TRUE). subject measurement time s event already occured time s, probability NA. newdata data frame obtained argument newdata containing time measurements longitudinal observations used compute predictions","code":""},{"path":"/reference/dynpred.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Individual dynamic predictions from a joint latent class model — dynpred","text":"Proust-Lima, Sene, Taylor Jacqmin-Gadda (2014). Joint latent class models longitudinal time--event data: review. Statistical Methods Medical Research 23, 74-90.","code":""},{"path":[]},{"path":"/reference/dynpred.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Individual dynamic predictions from a joint latent class model — dynpred","text":"Cecile Proust-Lima, Viviane Philipps","code":""},{"path":"/reference/dynpred.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Individual dynamic predictions from a joint latent class model — dynpred","text":"","code":"## Joint latent class model with 2 classes : m32 <- Jointlcmm(Ydep1~Time*X1,mixture=~Time,random=~Time,subject=\"ID\", classmb=~X3,ng=2,survival=Surv(Tevent,Event)~X1+mixture(X2), hazard=\"3-quant-splines\",hazardtype=\"PH\",data=data_lcmm, B = c(0.641, -0.6217, 0, 0, 0.5045, 0.8115, -0.4316, 0.7798, 0.1027,  0.7704, -0.0479, 10.4257, 11.2972, -2.5955, -0.5234, 1.4147,  -0.05, 0.9124, 0.0501, 0.2138, 1.5027))  ## Predictions at landmark 10 and 12 for horizon 3, 5 and 10 for two subjects :  dynpred(m32,landmark=c(10,12),horizon=c(3,5,10),var.time=\"Time\", fun.time=function(x){10*x},newdata=data_lcmm[1:8,]) #>       ID landmark horizon      pred #>  [1,]  1       10       3 0.2329690 #>  [2,]  1       10       5 0.3788284 #>  [3,]  1       10      10 0.6368587 #>  [4,]  1       12       3 0.4250841 #>  [5,]  1       12       5 0.6318772 #>  [6,]  1       12      10 0.8845080 #>  [7,]  2       10       3 0.3278219 #>  [8,]  2       10       5 0.5266806 #>  [9,]  2       10      10 0.8370420 #> [10,]  2       12       3 0.4077001 #> [11,]  2       12       5 0.6157664 #> [12,]  2       12      10 0.8859773 if (FALSE) { dynpred(m32,landmark=c(10,12),horizon=c(3,5,10),var.time=\"Time\", fun.time=function(x){10*x},newdata=data_lcmm[1:8,],draws=TRUE,ndraws=2000) }"},{"path":"/reference/epoce.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimators of the Expected Prognostic Observed Cross-Entropy (EPOCE) for\nevaluating predictive accuracy of joint latent class models estimated using\nJointlcmm — epoce","title":"Estimators of the Expected Prognostic Observed Cross-Entropy (EPOCE) for\nevaluating predictive accuracy of joint latent class models estimated using\nJointlcmm — epoce","text":"function computes estimators Expected Prognostic Observed Cross-Entropy (EPOCE) evaluating predictive accuracy joint latent class models estimated using Jointlcmm. data used estimation Jointlcmm object, function computes Mean Prognostic Observed Log-Likelihood (MPOL) Cross-Validated Observed Log-Likelihood (CVPOL), two estimators EPOCE. latter corrects MPOL estimate -optimism approximated cross-validation. external data, function computes Mean Prognostic Observed Log-Likelihood (MPOL).","code":""},{"path":"/reference/epoce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimators of the Expected Prognostic Observed Cross-Entropy (EPOCE) for\nevaluating predictive accuracy of joint latent class models estimated using\nJointlcmm — epoce","text":"","code":"epoce(   model,   pred.times,   var.time,   fun.time = identity,   newdata = NULL,   subset = NULL,   na.action = 1 )"},{"path":"/reference/epoce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimators of the Expected Prognostic Observed Cross-Entropy (EPOCE) for\nevaluating predictive accuracy of joint latent class models estimated using\nJointlcmm — epoce","text":"model object inheriting class Jointlcmm pred.times Vector times prediction, predictive accuracy evaluated (subjects still risk time prediction included computation, information time prediction considered. var.time Name variable indicating time dataset fun.time optional function. required time scales longitudinal part model survival part different. case, fun.time function translates times longitudinal part time scale survival part. default identity function means two time scales . newdata optional. missing, data used estimating Jointlcmm object used, CVPOL MPOL computed (internal validation). newdata specified, MPOL computed newdataset (external validation). subset specification rows used: defaults rows. can valid indexing vector rows data supplied, data frame made variable used formula. na.action Integer indicating NAs managed. default 1 'na.omit'. alternative 2 'na.fail'. options 'na.pass' 'na.exclude' implemented current version.","code":""},{"path":"/reference/epoce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimators of the Expected Prognostic Observed Cross-Entropy (EPOCE) for\nevaluating predictive accuracy of joint latent class models estimated using\nJointlcmm — epoce","text":"call.Jointlcmm Jointlcmm call call.epoce matched call EPOCE Dataframe containing, prediction time s, number subjects still risk s (least one measure s), number events time s, MPOL, CVPOL computation done dataset used Jointlcmm estimation IndivContrib Individual contributions prognostic observed log-likelihood time prediction. Used computing tracking intervals EPOCE differences models. new.data boolean internal use , FALSE computation done data Jointlcmm estimation, TRUE otherwise.","code":""},{"path":"/reference/epoce.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimators of the Expected Prognostic Observed Cross-Entropy (EPOCE) for\nevaluating predictive accuracy of joint latent class models estimated using\nJointlcmm — epoce","text":"function apply moment multiple causes event (competing risks). EPOCE assesses prognostic information joint latent class model. relies information theory. MPOL computed time s equals minus mean individual contribution conditional log-likelihood time event given longitudinal data time prediction s given subject still risk event s. CVPOL computed time s equals MPOL time s plus penalty term corrects -optimism computing predictive accuracy measures dataset used estimation. penalty term computed inverse Hessian joint log-likelihood product gradients contributions respectively joint log-likelihood conditional log-likelihood. theory EPOCE estimators MPOL CVPOL given Commenges et al. (2012), detailed illustrated joint models Proust-Lima et al. (2013).","code":""},{"path":"/reference/epoce.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimators of the Expected Prognostic Observed Cross-Entropy (EPOCE) for\nevaluating predictive accuracy of joint latent class models estimated using\nJointlcmm — epoce","text":"Commenges, Liquet Proust-Lima (2012). Choice prognostic estimators joint models estimating differences expected conditional Kullback-Leibler risks. Biometrics 68(2), 380-7. Proust-Lima, Sene, Taylor Jacqmin-Gadda (2014). Joint latent class models longitudinal time--event data: review. Statistical Methods Medical Research 23, 74-90.","code":""},{"path":[]},{"path":"/reference/epoce.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimators of the Expected Prognostic Observed Cross-Entropy (EPOCE) for\nevaluating predictive accuracy of joint latent class models estimated using\nJointlcmm — epoce","text":"Cecile Proust-Lima Amadou Diakite","code":""},{"path":"/reference/epoce.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimators of the Expected Prognostic Observed Cross-Entropy (EPOCE) for\nevaluating predictive accuracy of joint latent class models estimated using\nJointlcmm — epoce","text":"","code":"if (FALSE) { ## estimation of a joint latent class model with 2 latent classes (ng=2) # (see the example section of Jointlcmm for details about #  the model specification)  m <- Jointlcmm(fixed= Ydep1~Time*X1,random=~Time,mixture=~Time,subject='ID' ,survival = Surv(Tevent,Event)~ X1+X2 ,hazard=\"Weibull\" ,hazardtype=\"PH\",ng=2,data=data_lcmm,logscale=TRUE, B=c(0.7608, -9.4974 , 1.0242,  1.4331 , 0.1063 , 0.6714, 10.4679, 11.3178,  -2.5671, -0.5386,  1.4616, -0.0605,  0.9489,  0.1020 , 0.2079,  1.5045)) summary(m)  ## Computation of the EPOCE on the same dataset as used for # estimation of m with times at predictions from 1 to 15  VecTime <- c(1,3,5,7,9,11,13,15) cvpl <- epoce(m,var.time=\"Time\",pred.times=VecTime) summary(cvpl) plot(cvpl,bty=\"l\",ylim=c(0,2)) }"},{"path":"/reference/estimates.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum likelihood estimates — estimates","title":"Maximum likelihood estimates — estimates","text":"function provides vector maximum likelihood estimates model estimated hlme, lcmm, multlcmm, Jointlcmm, mpjlcmm, externSurv, externX.","code":""},{"path":"/reference/estimates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum likelihood estimates — estimates","text":"","code":"estimates(x, cholesky = TRUE)"},{"path":"/reference/estimates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximum likelihood estimates — estimates","text":"x object class hlme, lcmm, multlcmm Jointlcmm cholesky optional logical indicating parameters variance-covariance random effets displayed instead cholesky transformations used estimation process.","code":""},{"path":"/reference/estimates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximum likelihood estimates — estimates","text":"vector estimates model.","code":""},{"path":[]},{"path":"/reference/estimates.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Maximum likelihood estimates — estimates","text":"Cecile Proust-Lima, Viviane Philipps","code":""},{"path":"/reference/externVar.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of secondary regression models after the estimation of a primary latent class model — externVar","title":"Estimation of secondary regression models after the estimation of a primary latent class model — externVar","text":"function fits regression models relate latent class structure (stemmed  latent class model estimated within lcmm package) either external  outcome external class predictors.   Two inference techniques implemented account classification error: - 2-stage estimation joint likelihood primary latent class model   secondary/ external regression; - regression posterior latent class assignment external variable   internally corrects assignment misclassification. returns object one lcmm package classes.","code":""},{"path":"/reference/externVar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of secondary regression models after the estimation of a primary latent class model — externVar","text":"","code":"externVar(   model,   fixed,   mixture,   random,   subject,   classmb,   survival,   hazard = \"Weibull\",   hazardtype = \"Specific\",   hazardnodes = NULL,   TimeDepVar = NULL,   logscale = FALSE,   idiag = FALSE,   nwg = FALSE,   randomY = NULL,   link = NULL,   intnodes = NULL,   epsY = NULL,   cor = NULL,   nsim = NULL,   range = NULL,   data,   longitudinal,   method,   varest,   M = 200,   B,   convB = 1e-04,   convL = 1e-04,   convG = 1e-04,   maxiter = 100,   posfix,   partialH = FALSE,   verbose = FALSE,   nproc = 1 )"},{"path":"/reference/externVar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of secondary regression models after the estimation of a primary latent class model — externVar","text":"model object inheriting class hlme, lcmm,  Jointlcmm, multlcmm mpjlcmm giving primary latent  class model. fixed optional two sided linear formula object specifying fixed-effects secondary model external outcome variable. response outcome left ~ covariates separated + right ~. default, intercept included. mixture optional one-sided formula object class-specific fixed effects model external outcome. Among list covariates included fixed, covariates class-specific regression parameters entered mixture separated +. default, intercept included. intercept, -1 first term included. random optional one-sided linear formula object specifying random-effects external outcome secondary model, appropriate.  default, random effect included. subject name covariate representing grouping structure. Even absence hierarchical structure. classmb optional one-sided formula specifying external predictors  latent class membership modelled secondary class-membership multinomial  logistic model. Covariates separated + right ~. survival optional two-sided formula specifying external survival part model. hazard optional family hazard function assumed survival model (Weibull, piecewise splines) hazardtype optional indicator type baseline risk function (Specific, PH Common) hazardnodes optional vector containing interior nodes splines piecewise specified baseline hazard function hazard TimeDepVar optional vector specifying name time-depending covariate survival model logscale optional boolean indicating whether exponential (logscale=TRUE) square (logscale=FALSE -default) transformation used ensure positivity parameters baseline risk functions idiag appropriate, optional logical structure variance-covariance matrix random-effects secondary model.  FALSE, non structured matrix variance-covariance considered (default). TRUE diagonal matrix variance-covariance considered. nwg appropriate, optional logical indicating variance-covariance random-effects secondary model class-specific. FALSE variance-covariance matrix common latent classes (default). TRUE class-specific proportional parameter multiplies variance-covariance matrix class (proportional parameter last latent class equals 1 ensure identifiability). randomY optional logical including outcome-specific random intercept. FALSE outcome-specific random intercept added (default). TRUE independent outcome-specific random intercept parameterized variance included link optional family parameterized link functions external outcome appropriate. Defaults NULL, corresponding continuous Gaussian distribution (hlme function). intnodes optional vector interior nodes. argument required -splines link function nodes entered manually. epsY optional definite positive real used rescale marker (0,1) beta link function used. default, epsY=0.5. cor optional indicator inclusion auto correlated Gaussian process latent process linear (latent process) mixed model. Option \"BM\" indicates brownian motion parameterized variance. Option \"AR\" specifies autoregressive process order 1 parameterized variance correlation intensity. option followed time variable brackets codecor=BM(time). default, autocorrelated Gaussian process added. nsim number points used estimated link function. default, nsom=100. range optional vector indicating range outcomes (minimum maximum). default, range defined according minimum maximum observed values outcome. option used Beta Splines transformations. data Data frame containing variables named fixed, mixture, random, classmb subject, current function arguments primary model arguments Check details get information data structure, especially external outcomes. longitudinal mpjlcmm primary models \"twoStageJoint\" method: mandatory list containing longitudinal submodels used primary latent class model. method character indicating inference technique used: \"twoStageJoint\" corresponds 2-stage estimation. \"conditional\" corresponds method based distribution Y conditionally true latent class membership. varest optional character indicating method used compute variance regression estimates. \"none\" account uncertainty primary latent class model, \"paramBoot\" computes total variance using parametric bootstrap technique, \"Hessian\" computes total Hessian joint likelihood (implemented \"twoStageJoint\" method ). Default \"Hessian\" \"twoStageJoint\" method \"paramBoot\" \"conditional\" method. M option integer indicating number draws parametric boostrap varest=\"paramBoot\". Default 200. B optional vector initial parameter values secondary model.  external outcome, vector structure latent class model estimated functions lcmm package type  outcome. external class predictors (size p), vector length  (ng-1)*(1+p). B=NULL (default), internal initial values selected. convB optional threshold convergence criterion based parameter stability. default, convB=0.0001. convL optional threshold convergence criterion based log-likelihood stability. default, convL=0.0001. convG optional threshold convergence criterion based derivatives. default, convG=0.0001. maxiter optional maximum number iterations secondary model estimation using Marquardt iterative algorithm. Defaults 100 posfix optional vector specifying indices parameter vector B  secondary model estimated. Default NULL,  parameters secondary regression estimated. partialH optional logical Piecewise Splines baseline risk functions Splines link functions . Indicates whether parameters baseline risk link functions can dropped Hessian matrix define convergence criteria (can solve non convergence due estimates boundary parameter space - usually 0). verbose logical indicating whether information computation reported. Default FALSE. nproc number cores parallel computation. Default 1 (sequential mode).","code":""},{"path":"/reference/externVar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of secondary regression models after the estimation of a primary latent class model — externVar","text":"object class externVar   externSurv external survival outcomes, externX external class predictors, hlme, lcmm, multlcmm external longitudinal cross-sectional outcomes.","code":""},{"path":"/reference/externVar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation of secondary regression models after the estimation of a primary latent class model — externVar","text":". DATA STRUCTURE data argument must follow specific structure individual variables, .e. variables unique constant value subject. individual variable given external outcome, data value must present per subject, independently time variable used primary latent class. individual variable given external class predictor, data values must given every row every individual (usual) B. VARIANCE ESTIMATION taking account first stage variance specifing \"none\" may lead underestimation final variance. possible, Method \"Hessian\"  relies combination Hessians primary secondary model recommended. However, may become numerically intensive event  high number parameters primary latent class model.  alternative, especially situations complex primary model rather  parcimonious secondary model, method \"paramBoot\" implements  parametric bootstrap can used.","code":""},{"path":"/reference/externVar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of secondary regression models after the estimation of a primary latent class model — externVar","text":"","code":"if (FALSE) {   ###### Estimation of the primary latent class model                   ######  set.seed(1234) PrimMod <- hlme(Ydep1~Time,random=~Time,subject='ID',ng=1,data=data_lcmm) PrimMod2 <- hlme(Ydep1~Time,mixture=~Time,random=~Time,subject='ID',                  ng=2,data=data_lcmm,B=random(PrimMod))  ###### Example 1: Relationship between a latent class structure and         # #                   external class predictors                          ######                    # estimation of the secondary multinomial logistic model with total variance # computed with the Hessian  XextHess <- externVar(PrimMod2,                       classmb = ~X1 + X2 + X3 + X4,                        subject = \"ID\",                       data = data_lcmm,                       method = \"twoStageJoint\")  summary(XextHess)  # estimation of a secondary multinomial logistic model with total variance # computed with parametric Bootstrap (much longer). When using the bootstrap  # estimator, we recommend running first the analysis with option varest = \"none\"  # which is faster but which underestimates the variance. And then use these values # as initial values when running the model with varest = \"paramBoot\" to obtain  # a valid variance of the parameters.   XextNone <- externVar(PrimMod2,                       classmb = ~X1 + X2 + X3 + X4,                        subject = \"ID\",                       data = data_lcmm,                       varest = \"none\",                       method = \"twoStageJoint\")   XextBoot <- externVar(PrimMod2,                       classmb = ~X1 + X2 + X3 + X4,                        subject = \"ID\",                       data = data_lcmm,                       varest = \"paramBoot\",                       method = \"twoStageJoint\",                       B = XextNone$best)  summary(XextBoot)    ###### Example 2: Relationship between a latent class structure and         # #                external outcome (repeatedly measured over time)     ######                    # estimation of the secondary linear mixed model with total variance # computed with the Hessian  YextHess = externVar(PrimMod2,   #primary model                      fixed = Ydep2 ~ Time*X1,  #secondary model                      random = ~Time, #secondary model                      mixture = ~Time,  #secondary model                      subject=\"ID\",                      data=data_lcmm,                      method = \"twoStageJoint\")                        # estimation of a secondary linear mixed model with total variance # computed with parametric Bootstrap (much longer). When using the bootstrap  # estimator, we recommend running first the analysis with option varest = \"none\"  # which is faster but which underestimates the variance. And then use these values # as initial values when running the model with varest = \"paramBoot\" to obtain  # a valid variance of the parameters.   YextNone = externVar(PrimMod2,   #primary model                      fixed = Ydep2 ~ Time*X1,  #secondary model                      random = ~Time, #secondary model                      mixture = ~Time,  #secondary model                      subject=\"ID\",                      data=data_lcmm,                      varest = \"none\",                      method = \"twoStageJoint\")  YextBoot = externVar(PrimMod2,   #primary model                      fixed = Ydep2 ~ Time*X1,  #secondary model                      random = ~Time, #secondary model                      mixture = ~Time,  #secondary model                      subject=\"ID\",                      data=data_lcmm,                      method = \"twoStageJoint\",                      B = YextNone$best,                      varest= \"paramBoot\")  summary(YextBoot)    ###### Example 3: Relationship between a latent class structure and         # #                      external outcome (survival)                     ######  # estimation of the secondary survival model with total variance # computed with the Hessian  YextHess = externVar(PrimMod2,   #primary model                      survival = Surv(Tevent,Event)~ X1+mixture(X2), #secondary model                      hazard=\"3-quant-splines\", #secondary model                      hazardtype=\"PH\", #secondary model                      subject=\"ID\",                      data=data_lcmm,                      method = \"twoStageJoint\") summary(YextHess)   # estimation of a secondary survival model with total variance # computed with parametric Bootstrap (much longer). When using the bootstrap # estimator, we recommend running first the analysis with option varest = \"none\" # which is faster but which underestimates the variance. And then use these values # as initial values when running the model with varest = \"paramBoot\" to obtain # a valid variance of the parameters.  YextNone = externVar(PrimMod2,   #primary model                      survival = Surv(Tevent,Event)~ X1+mixture(X2), #secondary model                      hazard=\"3-quant-splines\", #secondary model                      hazardtype=\"PH\", #secondary model                      subject=\"ID\",                      data=data_lcmm,                      varest = \"none\",                      method = \"twoStageJoint\")  YextBoot = externVar(PrimMod2,   #primary model                      survival = Surv(Tevent,Event)~ X1+mixture(X2), #secondary model                      hazard=\"3-quant-splines\", #secondary model                      hazardtype=\"PH\", #secondary model                      subject=\"ID\",                      data=data_lcmm,                      method = \"twoStageJoint\",                      B = YextNone$best,                      varest= \"paramBoot\")  summary(YextBoot)  }"},{"path":"/reference/fitY.html","id":null,"dir":"Reference","previous_headings":"","what":"Marginal predictions of the longitudinal outcome(s) in their natural scale\nfrom lcmm, Jointlcmm or multlcmm objects — fitY","title":"Marginal predictions of the longitudinal outcome(s) in their natural scale\nfrom lcmm, Jointlcmm or multlcmm objects — fitY","text":"function computes marginal predictions longitudinal outcome(s) natural scale individual data used estimation lcmm, Jointlcmm multlcmm objects.","code":""},{"path":"/reference/fitY.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Marginal predictions of the longitudinal outcome(s) in their natural scale\nfrom lcmm, Jointlcmm or multlcmm objects — fitY","text":"","code":"fitY(x)"},{"path":"/reference/fitY.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Marginal predictions of the longitudinal outcome(s) in their natural scale\nfrom lcmm, Jointlcmm or multlcmm objects — fitY","text":"x object inheriting classes lcmm multlcmm.","code":""},{"path":"/reference/fitY.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Marginal predictions of the longitudinal outcome(s) in their natural scale\nfrom lcmm, Jointlcmm or multlcmm objects — fitY","text":"lcmm Jointlcmm objects, returns matrix ng+1 columns containing subject identifier ng class-specific marginal predicted values. multlcmm objects, returns matrix ng+2 columns containing subject identifier, outcome indicator ng class-specific predicted values.","code":""},{"path":[]},{"path":"/reference/fitY.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Marginal predictions of the longitudinal outcome(s) in their natural scale\nfrom lcmm, Jointlcmm or multlcmm objects — fitY","text":"Cecile Proust-Lima, Viviane Philipps","code":""},{"path":"/reference/gridsearch.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatic grid search — gridsearch","title":"Automatic grid search — gridsearch","text":"function provides automatic grid search latent class mixed models estimated hlme, lcmm, multlcmm Jointlcmm functions.","code":""},{"path":"/reference/gridsearch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatic grid search — gridsearch","text":"","code":"gridsearch(m, rep, maxiter, minit, cl = NULL)"},{"path":"/reference/gridsearch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatic grid search — gridsearch","text":"m call hlme, lcmm, multlcmm,  Jointlcmm mpjlcmm corresponding model estimate rep number departures random initial values maxiter number iterations optimization algorithm minit object class hlme, lcmm, multlcmm, Jointlcmm mpjlcmm corresponding model specified m except number classes (one). object used generate random initial values cl cluster created makeCluster package parallel integer specifying number cores use parallel computation","code":""},{"path":"/reference/gridsearch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automatic grid search — gridsearch","text":"object class hlme, lcmm, multlcmm, Jointlcmm mpjlcmm corresponding call specified m.","code":""},{"path":"/reference/gridsearch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Automatic grid search — gridsearch","text":"function permits estimation model grid random initial values reduce odds convergence towards local maximum. function inspired emEM technique described Biernacki et al. (2003). consists : 1. randomly generating rep sets initial values m estimates minit (done internally using option B=random(minit) rep times) 2. running optimization algorithm model specified m rep sets initial values maximum number iterations maxit time. 3. retaining estimates random initialization provides best log-likelihood maxiter iterations. 4. running optimization algorithm estimates final estimation.","code":""},{"path":"/reference/gridsearch.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Automatic grid search — gridsearch","text":"Biernacki C, Celeux G, Govaert G (2003). Choosing Starting Values EM Algorithm Getting Highest Likelihood Multivariate Gaussian Mixture models. Computational Statistics Data Analysis, 41(3-4), 561-575.","code":""},{"path":"/reference/gridsearch.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Automatic grid search — gridsearch","text":"Cecile Proust-Lima Viviane Philipps","code":""},{"path":"/reference/gridsearch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Automatic grid search — gridsearch","text":"","code":"if (FALSE) { # initial model with ng=1 for the random initial values m1 <- hlme(Y ~ Time * X1, random =~ Time, subject = 'ID', ng = 1,        data = data_hlme)  # gridsearch with 10 iterations from 50 random departures m2d <- gridsearch(rep = 50, maxiter = 10, minit = m1, hlme(Y ~ Time * X1,       mixture =~ Time, random =~ Time, classmb =~ X2 + X3, subject = 'ID',           ng = 2, data = data_hlme))         }"},{"path":"/reference/hlme.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of latent class linear mixed models — hlme","title":"Estimation of latent class linear mixed models — hlme","text":"function fits linear mixed models latent class linear mixed models (LCLMM) also known growth mixture models heterogeneous linear mixed models.  LCLMM consists assuming population divided finite number latent classes. latent class characterised specific trajectory modelled class-specific linear mixed model.  latent class membership trajectory can explained according covariates.  function limited mixture Gaussian outcomes. types outcomes, please see function lcmm. multivariate longitudinal outcomes, please see multlcmm.","code":""},{"path":"/reference/hlme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of latent class linear mixed models — hlme","text":"","code":"hlme(   fixed,   mixture,   random,   subject,   classmb,   ng = 1,   idiag = FALSE,   nwg = FALSE,   cor = NULL,   data,   B,   convB = 1e-04,   convL = 1e-04,   convG = 1e-04,   prior,   pprior = NULL,   maxiter = 500,   subset = NULL,   na.action = 1,   posfix = NULL,   verbose = FALSE,   returndata = FALSE,   var.time = NULL,   partialH = FALSE,   nproc = 1,   clustertype = NULL )"},{"path":"/reference/hlme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of latent class linear mixed models — hlme","text":"fixed two-sided linear formula object fixed-effects linear mixed model. response outcome left ~ covariates separated + right ~.  default, intercept included. intercept, -1 first term included right ~. mixture one-sided formula object class-specific fixed effects linear mixed model (specify number latent classes greater 1).  Among list covariates included fixed, covariates class-specific regression parameters entered mixture separated +.  default, intercept included. intercept, -1 first term included. random optional one-sided formula random-effects linear mixed model. Covariates random-effect separated +.  default, intercept included. intercept, -1 first term included. subject name covariate representing grouping structure specified ''. classmb optional one-sided formula describing covariates class-membership multinomial logistic model. Covariates included separated +. default, classmb=~1 ng>1. ng optional number latent classes considered. ng=1 (default) mixture classmb specified. ng>1, mixture required. idiag optional logical structure variance-covariance matrix random-effects. FALSE, non structured matrix variance-covariance considered (default).  TRUE diagonal matrix variance-covariance considered. nwg optional logical indicating variance-covariance random-effects class-specific. FALSE variance-covariance matrix common latent classes (default). TRUE class-specific proportional parameter multiplies variance-covariance matrix class (proportional parameter last latent class equals 1 ensure identifiability). cor optional brownian motion autoregressive process modeling correlation observations.  \"BM\" \"AR\" specified, followed time variable brackets. default, correlation added. data optional data frame containing variables named fixed, mixture, random, classmb subject. B optional specification initial values parameters. Three options allowed: (1) vector initial values entered (order parameters included detailed details section).  (2) nothing specified. preliminary analysis involving estimation standard linear mixed model performed choose initial values.  (3) ng>1, hlme object entered. correspond exact structure model ng=1. program automatically generate initial values model. specification avoids preliminary analysis indicated (2). Note due possible local maxima, B vector specified several different starting points tried. convB optional threshold convergence criterion based parameter stability. default, convB=0.0001. convL optional threshold convergence criterion based log-likelihood stability. default, convL=0.0001. convG optional threshold convergence criterion based derivatives. default, convG=0.0001. prior optional name covariate containing prior information latent class membership. covariate integer values 0,1,...,ng. Value 0 indicates prior subject value 1,...,ng indicates subject belongs corresponding latent class. pprior optional vector specifying names covariates containing prior probabilities belong latent class. probabilities 0 1 sum 1 subject. maxiter optional maximum number iterations Marquardt iterative algorithm. default, maxiter=500. subset specification rows used: defaults rows. can valid indexing vector rows data supplied, data frame made variable used formula. na.action Integer indicating NAs managed. default 1 'na.omit'. alternative 2 'na.fail'. options 'na.pass' 'na.exclude' implemented current version. posfix Optional vector specifying indices vector B parameters estimated. Default NULL, parameters estimated. verbose logical indicating information computation reported. Default TRUE. returndata logical indicating data used computation returned. Default FALSE, data returned. var.time optional character indicating name time variable. partialH optional logical indicating parameters can dropped Hessian matrix define convergence criteria. nproc number cores parallel computation. Default 1 (sequential mode). clustertype optional character indicating type cluster parallel computation.","code":""},{"path":"/reference/hlme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of latent class linear mixed models — hlme","text":"list returned : ns number grouping units dataset ng number latent classes loglik log-likelihood model \\ itembestvector parameter estimates order specified B detailed section details V model converged (conv=1 3), vector containing upper triangle matrix variance-covariance estimates Best exception variance-covariance parameters random-effects V contains variance-covariance estimates Cholesky transformed parameters displayed cholesky. conv=2, V contains second derivatives log-likelihood. gconv vector convergence criteria: 1. parameters, 2. likelihood, 3. derivatives conv status convergence: =1 convergence criteria satisfied, =2 maximum number iterations reached, =3 convergence criteria satisfied partial Hessian matrix, =4 5 problem occured optimisation call matched call niter number Marquardt iterations N internal information used related functions idiag internal information used related functions pred table individual predictions residuals; includes marginal predictions (pred_m), marginal residuals (resid_m), subject-specific predictions (pred_ss) subject-specific residuals (resid_ss) averaged classes, observation (obs) finally class-specific marginal subject-specific predictions (number latent class: pred_m_1,pred_m_2,...,pred_ss_1,pred_ss_2,...). var.time specified, corresponding measurement time also included. pprob table posterior classification posterior individual class-membership probabilities Xnames list covariates included model predRE table containing individual predictions random-effects : column per random-effect, line per subject cholesky vector containing estimates Cholesky transformed parameters variance-covariance matrix random-effects data original data set (returndata TRUE)","code":""},{"path":"/reference/hlme.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation of latent class linear mixed models — hlme","text":". VECTOR PARAMETERS B parameters vector initial values B equivalently vector maximum likelihood estimates best included following order: (1) ng-1 parameters required intercepts latent class membership model, covariates included classmb, ng-1 paramaters entered covariate; (2) covariates fixed, one parameter required covariate mixture, ng paramaters required covariate also mixture; (3) variance random-effect specified random (including intercept) idiag=TRUE, inferior triangular variance-covariance matrix random-effects idiag=FALSE; (4) nwg=TRUE, ng-1 parameters required ng-1 class-specific proportional coefficients variance covariance matrix random-effects; (5) cor specified, 1 parameter corresponding variance Brownian motion entered cor=BM 2 parameters corresponding correlation variance parameters autoregressive process entered (6) standard error residual error. B. CAUTIONS caution made using program: (1) log-likelihood latent class model can multiple maxima, careful choice initial values crucial ensuring convergence toward global maximum.  program can run without entering vector initial values (see point 2).  However, recommend systematically enter initial values B try different sets initial values. (2) automatic choice initial values provide requires estimation preliminary linear mixed model. user aware first, preliminary analysis can take time large datatsets second, generated initial values can likely even may converge slowly local maximum.  reason several alternatives exist. vector initial values can directly specified B initial values can generated (automatically randomly) model ng=. Finally, function gridsearch performs automatic grid search. (3) Convergence criteria strict based derivatives log-likelihood addition parameter stability log-likelihood stability.  cases, program may converge reach maximum number iterations fixed 100.  case, user check parameter estimates last iteration boundaries parameter space.  parameters boundaries parameter space, identifiability model critical. may happen especially splines parameters may close 0 (lower boundary) classmb parameters high low (perfect classification). identifiability parameters suspected, program can run former estimates fixing suspected parameters value option posfix. usually solves problem. alternative remove parameters Beta Splines link function inverse Hessian option partialH.  , program run initial values, higher maximum number iterations less strict convergence tolerances.","code":""},{"path":"/reference/hlme.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of latent class linear mixed models — hlme","text":"Proust-Lima C, Philipps V, Liquet B (2017). Estimation Extended Mixed  Models Using Latent Classes Latent Processes: R Package lcmm.  Journal Statistical Software, 78(2), 1-56. doi:10.18637/jss.v078.i02 Verbeke G Lesaffre E (1996). linear mixed-effects model heterogeneity random-effects population. Journal American Statistical Association 91, 217-21 Muthen B Shedden K (1999). Finite mixture modeling mixture outcomes using EM algorithm. Biometrics 55, 463-9 Proust C Jacqmin-Gadda H (2005). Estimation linear mixed models mixture distribution random-effects. Computer Methods Programs Biomedicine 78, 165-73","code":""},{"path":[]},{"path":"/reference/hlme.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimation of latent class linear mixed models — hlme","text":"Cecile Proust-Lima, Benoit Liquet Viviane Philipps cecile.proust-lima@inserm.fr","code":""},{"path":"/reference/hlme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of latent class linear mixed models — hlme","text":"","code":"##### Example of a latent class model estimated for a varying number # of latent classes:  # The model includes a subject- (ID) and class-specific linear  # trend (intercept and Time in fixed, random and mixture components) # and a common effect of X1 and its interaction with time over classes  # (in fixed).  # The variance of the random intercept and slope are assumed to be equal  # over classes (nwg=F). # The covariate X3 predicts the class membership (in classmb). # # !CAUTION: initialization of mixed models with latent classes is  # of most importance because of the problem of multimodality of the likelihood. # Calls m2a-m2d illustrate the different implementations for the  # initial values.  ### homogeneous linear mixed model (standard linear mixed model)  ### with correlated random-effects m1<-hlme(Y~Time*X1,random=~Time,subject='ID',ng=1,data=data_hlme) summary(m1) #> Heterogenous linear mixed model  #>      fitted by maximum likelihood method  #>   #> hlme(fixed = Y ~ Time * X1, random = ~Time, subject = \"ID\", ng = 1,  #>     data = data_hlme) #>   #> Statistical Model:  #>      Dataset: data_hlme  #>      Number of subjects: 100  #>      Number of observations: 326  #>      Number of latent classes: 1  #>      Number of parameters: 8   #>   #> Iteration process:  #>      Convergence criteria satisfied  #>      Number of iterations:  10  #>      Convergence criteria: parameters= 5e-10  #>                          : likelihood= 1.4e-09  #>                          : second derivatives= 1.3e-16  #>   #> Goodness-of-fit statistics:  #>      maximum log-likelihood: -790.51   #>      AIC: 1597.02   #>      BIC: 1617.86   #>   #>   #> Maximum Likelihood Estimates:  #>   #> Fixed effects in the longitudinal model: #>  #>               coef      Se   Wald p-value #> intercept 25.86093 0.77175 33.509 0.00000 #> Time      -0.32877 0.17121 -1.920 0.05482 #> X1         1.69460 1.00508  1.686 0.09179 #> Time:X1   -0.39408 0.22293 -1.768 0.07710 #>  #>  #> Variance-covariance matrix of the random-effects: #>           intercept    Time #> intercept  23.13781         #> Time        2.79713 1.10558 #>  #>                              coef      Se #> Residual standard error:  0.96892 0.06095 #>   ### latent class linear mixed model with 2 classes  # a. automatic specification from G=1 model estimates: m2a<-hlme(Y~Time*X1,mixture=~Time,random=~Time,classmb=~X2+X3,subject='ID',          ng=2,data=data_hlme,B=m1)           # b. vector of initial values provided by the user: m2b<-hlme(Y~Time*X1,mixture=~Time,random=~Time,classmb=~X2+X3,subject='ID',          ng=2,data=data_hlme,B=c(0.11,-0.74,-0.07,20.71,                                  29.39,-1,0.13,2.45,-0.29,4.5,0.36,0.79,0.97))   # c. random draws from G = 1 model estimates: m2c<-hlme(Y~Time*X1,mixture=~Time,random=~Time,classmb=~X2+X3,subject='ID',           ng=2,data=data_hlme,B=random(m1)) #> Error in eval(cl$B[[2]], parent.env(environment())): object 'm1' not found  # d. gridsearch with 50 departures and 10 iterations of the algorithm  #     (see function gridsearch for details) if (FALSE) { m2d <- gridsearch(rep = 50, maxiter = 10, minit = m1, hlme(Y ~ Time * X1,  mixture =~ Time, random =~ Time, classmb =~ X2 + X3, subject = 'ID', ng = 2,  data = data_hlme))  }                # summary of the estimation process summarytable(m1, m2a, m2b, m2c) #> Error in summarytable(m1, m2a, m2b, m2c): object 'm2c' not found  # summary of m2a summary(m2a) #> Heterogenous linear mixed model  #>      fitted by maximum likelihood method  #>   #> hlme(fixed = Y ~ Time * X1, mixture = ~Time, random = ~Time,  #>     subject = \"ID\", classmb = ~X2 + X3, ng = 2, data = data_hlme) #>   #> Statistical Model:  #>      Dataset: data_hlme  #>      Number of subjects: 100  #>      Number of observations: 326  #>      Number of latent classes: 2  #>      Number of parameters: 13   #>   #> Iteration process:  #>      Convergence criteria satisfied  #>      Number of iterations:  21  #>      Convergence criteria: parameters= 3.9e-05  #>                          : likelihood= 3.4e-05  #>                          : second derivatives= 1.6e-10  #>   #> Goodness-of-fit statistics:  #>      maximum log-likelihood: -773.82   #>      AIC: 1573.64   #>      BIC: 1607.51   #>   #>   #> Maximum Likelihood Estimates:  #>   #> Fixed effects in the class-membership model: #> (the class of reference is the last class)  #>  #>                      coef      Se   Wald p-value #> intercept class1  0.10518 0.33392  0.315 0.75276 #> X2 class1        -0.73939 0.48976 -1.510 0.13112 #> X3 class1        -0.06818 0.19282 -0.354 0.72364 #>  #> Fixed effects in the longitudinal model: #>  #>                      coef      Se   Wald p-value #> intercept class1 20.70606 0.64002 32.352 0.00000 #> intercept class2 29.39253 0.54893 53.546 0.00000 #> Time class1      -1.00426 0.19584 -5.128 0.00000 #> Time class2       0.13102 0.17259  0.759 0.44778 #> X1                2.45174 0.64546  3.798 0.00015 #> Time:X1          -0.28770 0.20015 -1.437 0.15060 #>  #>  #> Variance-covariance matrix of the random-effects: #>           intercept    Time #> intercept   4.50085         #> Time        0.35984 0.79338 #>  #>                              coef      Se #> Residual standard error:  0.96808 0.06065 #>   # posterior classification postprob(m2a) #>   #> Posterior classification:  #>   class1 class2 #> N     46     54 #> %     46     54 #>   #> Posterior classification table:  #>      --> mean of posterior probabilities in each class  #>         prob1  prob2 #> class1 0.9588 0.0412 #> class2 0.0325 0.9675 #>   #> Posterior probabilities above a threshold (%):  #>          class1 class2 #> prob>0.7  93.48 100.00 #> prob>0.8  93.48  92.59 #> prob>0.9  86.96  83.33 #>    # plot of predicted trajectories using some newdata newdata<-data.frame(Time=seq(0,5,length=100), X1=rep(0,100),X2=rep(0,100),X3=rep(0,100)) plot(predictY(m2a,newdata,var.time=\"Time\"),legend.loc=\"right\",bty=\"l\")"},{"path":"/reference/lcmm-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of extended mixed models using latent classes and latent\nprocesses. — lcmm-package","title":"Estimation of extended mixed models using latent classes and latent\nprocesses. — lcmm-package","text":"Functions estimation latent class mixed models (LCMM), joint latent class mixed models longitudinal survival data (JLCM) latent process mixed models (without latent classes trajectory)  univariate multivariate longitudinal outcomes different types  including curvilinear ordinal outcomes.  models estimated maximum likelihood framework using  iterative algorithm. package also provides various post fit functions.","code":""},{"path":"/reference/lcmm-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation of extended mixed models using latent classes and latent\nprocesses. — lcmm-package","text":"package includes moment estimation : latent class mixed models Gaussian longitudinal outcomes using hlme function, latent class mixed models quantitative, bounded quantitative (curvilinear) discrete (ordinal/binary) longitudinal outcomes using lcmm function, mixed models (without latent classes) multivariate longitudinal outcomes different nature using multlcmm function (includes longitudinal IRT model homogeneous heterogeneous data), joint latent class mixed models Gaussian (curvilinear) longitudinal outcome right-censored (potentially left-truncated multiple causes) time--event using Jointlcmm function, joint latent class mixed models multivariate longitudinal outcomes  right-censored (potentially left-truncated multiple causes) time--event using mpjlcmm function. Please report bug comment regarding package future updates VIA GITHUB .","code":""},{"path":"/reference/lcmm-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of extended mixed models using latent classes and latent\nprocesses. — lcmm-package","text":"Proust-Lima C, Philipps V, Liquet B (2017). Estimation Extended Mixed  Models Using Latent Classes Latent Processes: R Package lcmm.  Journal Statistical Software, 78(2), 1-56. doi:10.18637/jss.v078.i02 Lin, Turnbull, McCulloch Slate (2002). Latent class models joint analysis longitudinal biomarker event process data: application longitudinal prostate-specific antigen readings prostate cancer. Journal American Statistical Association 97, 53-65. Muthen Shedden (1999). Finite mixture modeling mixture outcomes using EM algorithm. Biometrics 55, 463-9 Proust Jacqmin-Gadda (2005). Estimation linear mixed models mixture distribution random-effects. Comput Methods Programs Biomed 78:165-73 Proust, Jacqmin-Gadda, Taylor, Ganiayre, Commenges (2006). nonlinear model latent process cognitive evolution using multivariate longitudinal data. Biometrics 62, 1014-24. Proust-Lima, Dartigues Jacqmin-Gadda (2011). Misuse linear mixed model evaluating risk factors cognitive decline. Amer J Epidemiol 174(9), 1077-88 Proust-Lima Taylor (2009). Development validation dynamic prognostic tool prostate cancer recurrence using repeated measures post-treatment PSA: joint modelling approach. Biostatistics 10, 535-49. Proust-Lima, Sene, Taylor, Jacqmin-Gadda (2014). Joint latent class models longitudinal time--event data: review. Statistical Methods Medical Research 23, 74-90. Proust-Lima, Amieva, Jacqmin-Gadda (2013). Analysis multivariate mixed longitudinal data: flexible latent process approach. Br J Math Stat Psychol 66(3), 470-87. Proust-Lima, Philipps, Perrot, Blanchin, Sebille (2021). Modeling repeated self-reported outcome data: continuous-time longitudinal Item Response Theory model.  arXiv:210913064. http://arxiv.org/abs/2109.13064 Proust-Lima, Dartigues, Jacqmin-Gadda (2016). Joint modeling repeated multivariate  cognitive measures competing risks dementia death: latent process  latent class approach. Stat Med;35(3):382-98 Proust-Lima, Philipps, Dartigues, Bennett, Glymour, Jacqmin-Gadda, et al (2019).   latent variable models preferable composite score approaches assessing  risk factors change? Evaluation type-error statistical power longitudinal  cognitive studies. Stat Methods Med Res;28(7):1942-57 Verbeke Lesaffre (1996). linear mixed-effects model heterogeneity random-effects population. Journal American Statistical Association 91, 217-21","code":""},{"path":"/reference/lcmm-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimation of extended mixed models using latent classes and latent\nprocesses. — lcmm-package","text":"Cecile Proust-Lima, Viviane Philipps, Amadou Diakite Benoit Liquet cecile.proust-lima@inserm.fr","code":""},{"path":"/reference/lcmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of mixed-effect models and latent class mixed-effect models for\ndifferent types of outcomes (continuous Gaussian, continuous non-Gaussian or\nordinal) — lcmm","title":"Estimation of mixed-effect models and latent class mixed-effect models for\ndifferent types of outcomes (continuous Gaussian, continuous non-Gaussian or\nordinal) — lcmm","text":"function fits mixed models latent class mixed models different types outcomes. handles continuous longitudinal outcomes (Gaussian non-Gaussian) well bounded quantitative, discrete ordinal longitudinal outcomes.  different types outcomes taken account using parameterized nonlinear link functions observed outcome underlying latent process interest measures.  latent process level, model estimates standard linear mixed model latent class linear mixed model heterogeneity population investigated (way function hlme). noted program also works random-effect included. Parameters nonlinear link function latent process mixed model estimated simultaneously using maximum likelihood method.","code":""},{"path":"/reference/lcmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of mixed-effect models and latent class mixed-effect models for\ndifferent types of outcomes (continuous Gaussian, continuous non-Gaussian or\nordinal) — lcmm","text":"","code":"lcmm(   fixed,   mixture,   random,   subject,   classmb,   ng = 1,   idiag = FALSE,   nwg = FALSE,   link = \"linear\",   intnodes = NULL,   epsY = 0.5,   cor = NULL,   data,   B,   convB = 1e-04,   convL = 1e-04,   convG = 1e-04,   maxiter = 100,   nsim = 100,   prior,   pprior = NULL,   range = NULL,   subset = NULL,   na.action = 1,   posfix = NULL,   partialH = FALSE,   verbose = FALSE,   returndata = FALSE,   var.time = NULL,   nproc = 1,   clustertype = NULL,   computeDiscrete = NULL )"},{"path":"/reference/lcmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of mixed-effect models and latent class mixed-effect models for\ndifferent types of outcomes (continuous Gaussian, continuous non-Gaussian or\nordinal) — lcmm","text":"fixed two-sided linear formula object specifying fixed-effects linear mixed model latent process level. response outcome left ~ covariates separated + right ~.  Fo identifiability purposes, intercept specified default removed -1. mixture one-sided formula object class-specific fixed effects latent process mixed model (specify number latent classes greater 1).  Among list covariates included fixed, covariates class-specific regression parameters entered mixture separated +.  default, intercept included. intercept, -1 first term included. random optional one-sided formula random-effects latent process mixed model. Covariates random-effect separated +.  default, random effect included. subject name covariate representing grouping structure. classmb optional one-sided formula describing covariates class-membership multinomial logistic model. Covariates included separated +.  intercept included formula. ng number latent classes considered. ng=1 mixture classmb specified. ng>1, mixture required. idiag optional logical variance-covariance structure random-effects. FALSE, non structured matrix variance-covariance considered (default).  TRUE diagonal matrix variance-covariance considered. nwg optional logical class-specific variance-covariance random-effects. FALSE variance-covariance matrix common latent classes (default). TRUE class-specific proportional parameter multiplies variance-covariance matrix class (proportional parameter last latent class equals 1 ensure identifiability). link optional family link functions estimate. default, \"linear\" option specifies linear link function leading standard linear mixed model (homogeneous heterogeneous estimated hlme).  possibilities include \"beta\" estimating link function family Beta cumulative distribution functions, \"thresholds\" using threshold model describe correspondence level ordinal outcome underlying latent process, \"Splines\" approximating link function -splines. latter case, number nodes nodes location also specified. number nodes first entered followed -, location specified \"equi\", \"quant\" \"manual\" respectively equidistant nodes, nodes quantiles marker distribution interior nodes entered manually argument intnodes. followed - finally \"splines\" indicated. example, \"7-equi-splines\" means -splines 7 equidistant nodes, \"6-quant-splines\" means -splines 6 nodes located quantiles marker distribution \"9-manual-splines\" means -splines 9 nodes, vector 7 interior nodes entered argument intnodes. intnodes optional vector interior nodes. argument required -splines link function nodes entered manually. epsY optional definite positive real used rescale marker (0,1) beta link function used. default, epsY=0.5. cor optional brownian motion autoregressive process modeling correlation observations.  \"BM\" \"AR\" specified, followed time variable brackets. default, correlation added. data optional data frame containing variables named fixed, mixture, random, classmb subject. B optional specification initial values parameters. Three options allowed: (1) vector initial values entered (order parameters included detailed details section).  (2) nothing specified. preliminary analysis involving estimation standard linear mixed model performed choose initial values.  (3) ng>1, lcmm object entered. correspond exact structure model ng=1. program automatically generate initial values model. specification avoids preliminary analysis indicated (2). Note due possible local maxima, B vector specified several different starting points tried. convB optional threshold convergence criterion based parameter stability. default, convB=0.0001. convL optional threshold convergence criterion based log-likelihood stability. default, convL=0.0001. convG optional threshold convergence criterion based derivatives. default, convG=0.0001. maxiter optional maximum number iterations Marquardt iterative algorithm. default, maxiter=100. nsim number points used plot estimated link function. default, nsim=100. prior name covariate containing prior latent class membership. covariate integer values 0,1,...,ng. prior, value 0. prior subject, value number latent class (1,...,ng). pprior optional vector specifying names covariates containing prior probabilities belong latent class. probabilities 0 1 sum 1 subject. range optional vector indicating range outcome (minimum maximum). default, range defined according minimum maximum observed values outcome. option used Beta Splines transformations. subset optional vector giving subset observations data use. default, lines. na.action Integer indicating NAs managed. default 1 'na.omit'. alternative 2 'na.fail'. options 'na.pass' 'na.exclude' implemented current version. posfix Optional vector specifying indices vector B parameters estimated. Default NULL, parameters estimated. partialH optional logical Splines link functions . Indicates whether parameters link functions can dropped Hessian matrix define convergence criteria. verbose logical indicating information computation reported. Default TRUE. returndata logical indicating data used computation returned. Default FALSE, data returned. var.time optional character indicating name time variable. nproc number cores parallel computation. Default 1 (sequential mode). clustertype optional character indicating type cluster parallel computation. computeDiscrete optional logical indicating dscrete likelihood UACV computed. default, outcome consists integers computeDiscrete=TRUE.","code":""},{"path":"/reference/lcmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of mixed-effect models and latent class mixed-effect models for\ndifferent types of outcomes (continuous Gaussian, continuous non-Gaussian or\nordinal) — lcmm","text":"list returned : ns number grouping units dataset ng number latent classes loglik log-likelihood model best vector parameter estimates order specified B detailed section details V model converged (conv=1 3), vector containing upper triangle matrix variance-covariance estimates Best exception variance-covariance parameters random-effects V contains variance-covariance estimates Cholesky transformed parameters displayed cholesky.  conv=2, V contains second derivatives log-likelihood. gconv vector convergence criteria: 1. parameters, 2. likelihood, 3. derivatives conv status convergence: =1 convergence criteria satisfied, =2 maximum number iterations reached, =4 5 problem occured optimisation call matched call niter number Marquardt iterations dataset dataset N internal information used related functions idiag internal information used related functions pred table individual predictions residuals underlying latent process scale; includes marginal predictions (pred_m), marginal residuals (resid_m), subject-specific predictions (pred_ss) subject-specific residuals (resid_ss) averaged classes, transformed observations latent process scale (obs) finally class-specific marginal subject-specific predictions (number latent class: pred_m_1,pred_m_2,...,pred_ss_1,pred_ss_2,...). var.time specified, corresponding measurement time also included. output available yet specifying thresholds transformation. pprob table posterior classification posterior individual class-membership probabilities Xnames list covariates included model predRE table containing individual predictions random-effects : column per random-effect, line per subject. output available yet specifying thresholds transformation. cholesky vector containing estimates Cholesky transformed parameters variance-covariance matrix random-effects estimlink table containing simulated values marker corresponding estimated link function epsY definite positive real used rescale marker (0,1) beta link function used. default, epsY=0.5. linktype indicator link function type: 0 linear, 1 beta, 2 splines 3 thresholds linknodes vector nodes useful 'splines' link function data original data set (returndata TRUE)","code":""},{"path":"/reference/lcmm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation of mixed-effect models and latent class mixed-effect models for\ndifferent types of outcomes (continuous Gaussian, continuous non-Gaussian or\nordinal) — lcmm","text":". PARAMETERIZED LINK FUNCTIONS lcmm function estimates mixed models latent class mixed models different types outcomes assuming parameterized link function linking outcome Y(t) underlying latent process L(t) measures. fix latent process dimension, chose constrain (first) intercept latent class mixed model latent process level 0 standard error gaussian error measurement 1. two parameters replaced additional parameters parameterized link function : 1. \"linear\" link function, 2 parameters required correspond directly intercept standard error: (Y - b1)/b2 = L(t). 2. \"beta\" link function, 4 parameters required following transformation: [ h(Y(t)',b1,b2) - b3]/b4 h Beta CDF canonical parameters c1 c2 can derived b1 b2 c1=exp(b1)/[exp(b2)*(1+exp(b1))] c2=1/[exp(b2)*(1+exp(b1))], Y(t)' rescaled outcome .e. Y(t)'= [ Y(t) - min(Y(t)) + epsY ] / [ max(Y(t)) - min(Y(t)) +2*epsY ]. 3. \"splines\" link function, n+2 parameters required following transformation b_1 + b_2*I_1(Y(t)) + ... + b_n+2 I_n+1(Y(t)), I_1,...,I_n+1 basis quadratic -splines. constraint parameters positive, except b_1, program estimates b_k^* (k=2,...,n+2) b_k=(b_k^*)^2. 4. \"thresholds\" link function ordinal outcome levels 0,...,C. maximumn C parameters required following transformation: Y(t)=c <=> b_c < L(t) <= b_c+1 b_0 = - infinity b_C+1=+infinity. number parameters reduced levels information. example, level c observed dataset, corresponding threshold b_c+1 constrained previous one b_c. number parameters link function reduced 1. constraint parameters increasing, except first parameter b_1, program estimates b_k^* (k=2,...C) b_k=b_k-1+(b_k^*)^2. Details parameterized link functions can found referred papers. B. VECTOR PARAMETERS B parameters vector initial values B vector maximum likelihood estimates best included following order: (1) ng-1 parameters required intercepts latent class membership model, covariates included classmb, ng-1 paramaters entered one; (2) covariates fixed, one parameter required covariate mixture, ng paramaters required covariate also mixture; ng=1, intercept estimated parameter specified B. ng>1, first intercept estimated ng-1 parameters specified B; (3) variance random-effect specified random (including intercept) idiag=TRUE inferior triangular variance-covariance matrix random-effects idiag=FALSE; (4) nwg=TRUE, ng-1 parameters class-specific proportional coefficients variance covariance matrix random-effects; (5) contrast hlme, due identifiability purposes, standard error Gaussian error estimated (fixed 1), specified B; (6) parameters link function: 2 \"linear\", 4 \"beta\", n+2 \"splines\" n nodes number levels minus one \"thresholds\". C. CAUTIONS REGARDING USE PROGRAM caution made using program.  convergence criteria strict based derivatives log-likelihood addition parameter log-likelihood stability.  cases, program may converge reach maximum number iterations fixed 100.  case, user check parameter estimates last iteration boundaries parameter space.  parameters boundaries parameter space, identifiability model critical. may happen especially splines parameters may close 0 (lower boundary) classmb parameters high low (perfect classification). identifiability parameters suspected, program can run former estimates fixing suspected parameters value option posfix. usually solves problem. alternative remove parameters Beta Splines link function inverse Hessian option partialH.  , program run initial values, higher maximum number iterations less strict convergence tolerances. Specifically investigating heterogeneity (ng>1): (1) log-likelihood latent class model can multiple maxima, careful choice initial values crucial ensuring convergence toward global maximum.  program can run without entering vector initial values (see point 2).  However, recommend systematically enter initial values B try different sets initial values.  (2) automatic choice initial values provide requires estimation preliminary linear mixed model. user aware first, preliminary analysis can take time large datatsets second, generated initial values can likely even may converge slowly local maximum.  reason several alternatives exist. vector initial values can directly specified B initial values can generated (automatically randomly) model ng=. Finally, function gridsearch performs automatic grid search. D. NUMERICAL INTEGRATION THRESHOLD LINK FUNCTION exception threshold link function, maximum likelihood estimation implemented lcmm require numerical integration random-effects estimation procedure relatively fast. See Proust et al. (2006) details estimation procedure. However, threshold link function least one random-effect specified, numerical integration random-effects distribution required computation individual contribution likelihood complicates greatly estimation procedure. moment, allow option regarding numerical integration technics used.  1. single random-effect specified, use standard non-adaptive Gaussian quadrature 30 points. 2. least two random-effects specified, use multivariate non-adaptive Gaussian quadrature implemented Genz (1996) HRMSYM Fortran subroutine. developments allow adaptive technics options regarding numerical integration technic. E. POSTERIOR DISCRETE LIKELIHOOD Models involving nonlinear continuous link functions assume continuous data model threshold model assumes discrete data. consequence, comparing likelihoods criteria based likelihood (AIC) models possible former based Lebesgue measure latter counting measure. make comparison possible, compute posterior discrete likelihood models nonlinear continuous link function. posterior likelihood considers data discrete; computed MLE (maximum likelihood estimates) using counting measure models threshold continuous link functions become comparable. details can found Proust-Lima, Amieva, Jacqmin-Gadda (2012). addition Akaike information criterion based discrete posterior likelihood, also compute universal approximate cross-validation criterion compare models based different measure. See Commenges, Proust-Lima, Samieri, Liquet (2015) details.","code":""},{"path":"/reference/lcmm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of mixed-effect models and latent class mixed-effect models for\ndifferent types of outcomes (continuous Gaussian, continuous non-Gaussian or\nordinal) — lcmm","text":"Proust-Lima C, Philipps V, Liquet B (2017). Estimation Extended Mixed  Models Using Latent Classes Latent Processes: R Package lcmm.  Journal Statistical Software, 78(2), 1-56. doi:10.18637/jss.v078.i02 Genz Keister (1996). Fully symmetric interpolatory rules multiple integrals infinite regions gaussian weight. Journal Computational Applied Mathematics 71: 299-309. Proust Jacqmin-Gadda (2005). Estimation linear mixed models mixture distribution random-effects. Comput Methods Programs Biomed 78: 165-73. Proust, Jacqmin-Gadda, Taylor, Ganiayre, Commenges (2006). nonlinear model latent process cognitive evolution using multivariate longitudinal data. Biometrics 62: 1014-24. Proust-Lima, Dartigues Jacqmin-Gadda (2011). Misuse linear mixed model evaluating risk factors cognitive decline. Amer J Epidemiol 174(9): 1077-88. Proust-Lima, Amieva Jacqmin-Gadda (2013). Analysis multivariate mixed longitudinal data : flexible latent process approach, British Journal Mathematical Statistical Psychology 66(3): 470-87. Commenges, Proust-Lima, Samieri, Liquet (2015). universal approximate cross-validation criterion regular risk functions. Int J Biostat. 2015 May;11(1):51-67","code":""},{"path":[]},{"path":"/reference/lcmm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimation of mixed-effect models and latent class mixed-effect models for\ndifferent types of outcomes (continuous Gaussian, continuous non-Gaussian or\nordinal) — lcmm","text":"Cecile Proust-Lima, Amadou Diakite, Benoit Liquet Viviane Philipps cecile.proust-lima@inserm.fr","code":""},{"path":[]},{"path":"/reference/loglik.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper to the Fortran subroutines computing the log-likelihood — loglik","title":"Wrapper to the Fortran subroutines computing the log-likelihood — loglik","text":"Log-likelihood hlme, lcmm, multlcmm, Jointlcmm mpjlcmm models. argument's specification straightforward, functions usually directly used.","code":""},{"path":"/reference/loglik.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper to the Fortran subroutines computing the log-likelihood — loglik","text":"","code":"loglikhlme(   b,   Y0,   X0,   prior0,   pprior0,   idprob0,   idea0,   idg0,   idcor0,   ns0,   ng0,   nv0,   nobs0,   nea0,   nmes0,   idiag0,   nwg0,   ncor0,   npm0,   fix0,   nfix0,   bfix0 )  logliklcmm(   b,   Y0,   X0,   prior0,   pprior0,   idprob0,   idea0,   idg0,   idcor0,   ns0,   ng0,   nv0,   nobs0,   nea0,   nmes0,   idiag0,   nwg0,   ncor0,   npm0,   epsY0,   idlink0,   nbzitr0,   zitr0,   minY0,   maxY0,   ide0,   fix0,   nfix0,   bfix0 )  loglikmultlcmm(   b,   Y0,   X0,   prior0,   pprior0,   idprob0,   idea0,   idg0,   idcor0,   idcontr0,   ny0,   ns0,   ng0,   nv0,   nobs0,   nea0,   nmes0,   idiag0,   nwg0,   ncor0,   nalea0,   npm0,   epsY0,   idlink0,   nbzitr0,   zitr0,   uniqueY0,   indiceY0,   nvalSPLORD0,   fix0,   nfix0,   bfix0,   methInteg0,   nMC0,   dimMC0,   seqMC0,   chol0 )  loglikJointlcmm(   b,   Y0,   X0,   prior0,   pprior0,   tentr0,   tevt0,   devt0,   ind_survint0,   idprob0,   idea0,   idg0,   idcor0,   idcom0,   idspecif0,   idtdv0,   idlink0,   epsY0,   nbzitr0,   zitr0,   uniqueY0,   nvalSPL0,   indiceY0,   typrisq0,   risqcom0,   nz0,   zi0,   ns0,   ng0,   nv0,   nobs0,   nmes0,   nbevt0,   nea0,   nwg0,   ncor0,   idiag0,   idtrunc0,   logspecif0,   npm0,   fix0,   nfix0,   bfix0 )  loglikmpjlcmm(   b,   K0,   ny0,   nbevt0,   ng0,   ns0,   Y0,   nobs0,   X0,   nv0,   Xns0,   nv20,   prior0,   Tentr0,   Tevt0,   Devt0,   ind_survint0,   idnv0,   idnv20,   idspecif0,   idlink0,   epsY0,   nbzitr0,   zitr0,   uniqueY0,   nvalSPL0,   indiceY0,   typrisq0,   risqcom0,   nz0,   zi0,   nmes0,   nea0,   nw0,   ncor0,   nalea0,   idiag0,   idtrunc0,   logspecif0,   npm0,   fix0,   contrainte0,   nfix0,   bfix0 )"},{"path":"/reference/loglik.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper to the Fortran subroutines computing the log-likelihood — loglik","text":"b vector estimated parameters (length npm0) Y0 observed values outcome(s) (length nobs0) X0 observed values covariates included model (dim nob0 * nv0) prior0 prior latent class (length ns0) pprior0 prior probabilty latent class (dim ns0 * ng0) idprob0 indicator presence class membership submodel (length nv0) idea0 indicator presence random part longitudinal submodel (length nv0) idg0 indicator presence fixed part longitudinal submodel (length nv0) idcor0 indicator presence correlation part longitudinal submodel (length nv0) ns0 number subjects ng0 number latent classes nv0 number covariates nobs0 number observations nea0 number random effects nmes0 number mesures subject (length ns0 dom ns0*ny0) idiag0 indicator diagonal variance matrix random effects nwg0 number parameters proportional random effects latent classes ncor0 number parameters correlation npm0 total number parameters fix0 indicator non estimated parameter (length npm0+nfix0) nfix0 number non estimated parameters bfix0 vector non estimated parameters epsY0 epsY values Beta transformations idlink0 type transformation nbzitr0 number nodes transformations zitr0 nodes transformations minY0 minimum value longitudinal outcome maxY0 maximum value longitudinal outcome ide0 indicator observed values ordinal outcomes idcontr0 indicator presence contrast fixed part longitudinal submodel (length nv0) ny0 number longitudinal outcomes nalea0 number parameters f outcome specific random effect uniqueY0 unique values longitudinal outcomes indiceY0 correspondance Y0 uniqueY0 nvalSPLORD0 number unique values outcomes modeled splines transformations ordinal outcome methInteg0 type integration nMC0 number nodes Monte Carlo integration dimMC0 dimension integration seqMC0 sequence integration nodes chol0 indicator Cholesky parameterization tentr0 entry time survival submodel tevt0 event time survival submodel devt0 indicator event survival submodel ind_survint0 indicator risk change idcom0 indicator presence survival submodel common effect idspecif0 indicator presence survival submodel cause-specific class specific effect idtdv0 indicator 'TimeDepVar' covariate nvalSPL0 number unique values outcomes modeled splines transformations typrisq0 type baseline risk risqcom0 specification baseline risk across latent classes nz0 number nodes baseline zi0 nodes baseline nbevt0 number events idtrunc0 indicator left truncation logspecif0 indicator logarithm parameterization K0 number latent processes Xns0 observed values covariates included survival submodel (dim ns0*nv20) nv20 number covariates Xns0 Tentr0 entry time survival submodel (length ns0) Tevt0 event time survival submodel (length ns0) Devt0 indicator event survival submodel (length ns0) idnv0 indicator presence subpart longitudinal models (length 4*sum(nv0)) idnv20 indicator presence subpart survival models (length 3*nv20) nw0 number parameters proportional random effects latent classes contrainte0 type identifiability constraints","code":""},{"path":"/reference/loglik.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper to the Fortran subroutines computing the log-likelihood — loglik","text":"log-likelihood","code":""},{"path":"/reference/loglik.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Wrapper to the Fortran subroutines computing the log-likelihood — loglik","text":"Cecile Proust-Lima, Viviane Philipps","code":""},{"path":"/reference/mpjlcmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of multivariate joint latent class mixed models — mpjlcmm","title":"Estimation of multivariate joint latent class mixed models — mpjlcmm","text":"function fits joint latent class models multivariate longitudinal markers competing causes event. multivariate extension Jointlcmm function. defines longitudinal dimension  latent process (mp mpjlcmm multivariate processes), possibly measured sereval continuous markers (Gaussian curvilinear). moment,  theses processes assumed independent given latent classes.  (optional) survival part handles competing risks, right censoring left truncation. specification function similar estimating functions package.","code":""},{"path":"/reference/mpjlcmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of multivariate joint latent class mixed models — mpjlcmm","text":"","code":"mpjlcmm(   longitudinal,   subject,   classmb,   ng,   survival,   hazard = \"Weibull\",   hazardtype = \"Specific\",   hazardnodes = NULL,   TimeDepVar = NULL,   data,   B,   convB = 1e-04,   convL = 1e-04,   convG = 1e-04,   maxiter = 100,   nsim = 100,   prior,   logscale = FALSE,   subset = NULL,   na.action = 1,   posfix = NULL,   partialH = FALSE,   verbose = FALSE,   nproc = 1,   clustertype = NULL )"},{"path":"/reference/mpjlcmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of multivariate joint latent class mixed models — mpjlcmm","text":"longitudinal list longitudinal models type hlme, lcmm multlcmm. model defines structure one latent process. subject name covariate representing grouping structure (called subject identifier) classmb optional one-sided formula describing covariates class-membership multinomial logistic model ng number latent classes considered survival two-sided formula object specifying survival part model hazard optional family hazard function assumed survival model (Weibull, piecewise splines) hazardtype optional indicator type baseline risk function (Specific, PH Common) hazardnodes optional vector containing interior nodes splines piecewise specified baseline hazard function hazard TimeDepVar optional vector specifying name time-depending covariate survival model data data frame containing variables used model B optional specification initial values parameters. Three options allowed: (1) vector initial values entered (order parameters included detailed details section).  (2) nothing specified. Initial values extracted models specified longitudinal, default initial values chosen survival part (3) ng>1, mpjlcmm object entered. correspond exact structure model ng=1. program automatically generate initial values model. Note due possible local maxima, B vector specified several different starting points tried. can done automatically using  gridsearch function. convB optional threshold convergence criterion based parameter stability convL optional threshold convergence criterion based log-likelihood stability convG optional threshold convergence criterion based derivatives maxiter optional maximum number iterations Marquardt iterative algorithm nsim optional number points predicted survival curves predicted baseline risk curves prior optional name covariate containing prior information latent class membership logscale optional boolean indicating whether exponential (logscale=TRUE) square (logscale=FALSE -default) transformation used ensure positivity parameters baseline risk functions subset specification rows used: defaults rows. can valid indexing vector rows data supplied, data frame made variable used formula. na.action Integer indicating NAs managed. default 1 'na.omit'. alternative 2 'na.fail'. options 'na.pass' 'na.exclude' implemented current version. posfix Optional vector specifying indices vector B parameters estimated. Default NULL, parameters estimated partialH optional logical Piecewise Splines baseline risk functions Splines link functions . Indicates whether parameters baseline risk link functions can dropped Hessian matrix define convergence criteria (can solve non convergence due estimates boundary  parameter space - usually 0). verbose logical indicating whether information computation reported. Default FALSE. nproc number cores parallel computation. Default 1 (sequential mode). clustertype optional character indicating type cluster parallel computation.","code":""},{"path":"/reference/mpjlcmm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimation of multivariate joint latent class mixed models — mpjlcmm","text":"Cecile Proust Lima Viviane Philipps","code":""},{"path":"/reference/mpjlcmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of multivariate joint latent class mixed models — mpjlcmm","text":"","code":"if (FALSE) { paquid$age65 <- (paquid$age-65)/10  ############################################################################## ###                          EXAMPLE 1 :                                   ### ###two outcomes measuring the same latent process along with dementia onset### ##############################################################################  ## multlcmm model for MMSE and BVRT for 1 class mult1 <- multlcmm(MMSE+BVRT~age65+I(age65^2)+CEP+male,random=~age65+I(age65^2), subject=\"ID\",link=c(\"5-quant-splines\",\"4-quant-splines\"),data=paquid) summary(mult1)  ## joint model for 1 class m1S <- mpjlcmm(longitudinal=list(mult1),subject=\"ID\",ng=1,data=paquid, survival=Surv(age_init,agedem,dem)~1) summary(m1S)   ##### joint model for 2 classes #####  ## specify longitudinal model for 2 classes, without estimation mult2 <- multlcmm(MMSE+BVRT~age65+I(age65^2)+CEP+male,random=~age65+I(age65^2), subject=\"ID\",link=c(\"5-quant-splines\",\"4-quant-splines\"),ng=2, mixture=~age65+I(age65^2),data=paquid,B=random(mult1),maxiter=0)  ## estimation of the associated joint model  m2S <- mpjlcmm(longitudinal=list(mult2),subject=\"ID\",ng=2,data=paquid, survival=Surv(age_init,agedem,dem)~1)  ## estimation by a grid search with 50 replicates, initial values ## randomly generated from m1S m2S_b <- gridsearch(mpjlcmm(longitudinal=list(mult2),subject=\"ID\",ng=2, data=paquid,survival=Surv(age_init,agedem,dem)~1), minit=m1S, rep=50, maxiter=30)   ##### joint model for 3 classes ##### mult3 <- multlcmm(MMSE+BVRT~age65+I(age65^2)+CEP+male,random=~age65+I(age65^2), subject=\"ID\",link=c(\"5-quant-splines\",\"4-quant-splines\"),ng=3, mixture=~age65+I(age65^2),data=paquid,B=random(mult1),maxiter=0)  m3S <- mpjlcmm(longitudinal=list(mult3),subject=\"ID\",ng=3,data=paquid, survival=Surv(age_init,agedem,dem)~1)  m3S_b <- gridsearch(mpjlcmm(longitudinal=list(mult3),subject=\"ID\",ng=3, data=paquid,survival=Surv(age_init,agedem,dem)~1), minit=m1S, rep=50, maxiter=30)   ##### summary of the models #####  summarytable(m1S,m2S,m2S_b,m3S,m3S_b)    ##### post-fit #####  ## update longitudinal models : mod2 <- update(m2S)  mult2_post <- mod2[[1]] ## -> use the available functions for multlcmm on the mult2_post object  ## fit of the longitudinal trajectories par(mfrow=c(2,2)) plot(mult2_post,\"fit\",\"age65\",marg=TRUE,shades=TRUE,outcome=1) plot(mult2_post,\"fit\",\"age65\",marg=TRUE,shades=TRUE,outcome=2)  plot(mult2_post,\"fit\",\"age65\",marg=FALSE,shades=TRUE,outcome=1) plot(mult2_post,\"fit\",\"age65\",marg=FALSE,shades=TRUE,outcome=2)   ## predicted trajectories dpred <- data.frame(age65=seq(0,3,0.1),male=0,CEP=0)  predL <- predictL(mult2_post,newdata=dpred,var.time=\"age65\",confint=TRUE) plot(predL,shades=TRUE) # in the latent process scale   predY <- predictY(mult2_post,newdata=dpred,var.time=\"age65\",draws=TRUE)  plot(predY,shades=TRUE,ylim=c(0,30),main=\"MMSE\") #in the 0-30 scale for MMSE plot(predY,shades=TRUE,ylim=c(0,15),outcome=2,main=\"BVRT\") #in 0-15 for BVRT  ## baseline hazard and survival curves : plot(m2S,\"hazard\") plot(m2S,\"survival\")  ## posteriori probabilities and classification : postprob(m2S)    #################################################################################### ###                              EXAMPLE 2 :                                     ### ### two latent processes measured each by one outcome along with dementia onset  ### ####################################################################################  ## define the two longitudinal models  mMMSE1 <- lcmm(MMSE~age65+I(age65^2)+CEP,random=~age65+I(age65^2),subject=\"ID\", link=\"5-quant-splines\",data=paquid)  mCESD1 <- lcmm(CESD~age65+I(age65^2)+male,random=~age65+I(age65^2),subject=\"ID\", link=\"5-quant-splines\",data=paquid)   ## joint estimation  mm1S <- mpjlcmm(longitudinal=list(mMMSE1,mCESD1),subject=\"ID\",ng=1,data=paquid, survival=Surv(age_init,agedem,dem)~CEP+male)   ## with 2 latent classes  mMMSE2 <- lcmm(MMSE~age65+I(age65^2)+CEP,random=~age65+I(age65^2),subject=\"ID\", link=\"5-quant-splines\",data=paquid,ng=2,mixture=~age65+I(age65^2), B=random(mMMSE1),maxiter=0)  mCESD2 <- lcmm(CESD~age65+I(age65^2)+male,random=~age65+I(age65^2),subject=\"ID\", link=\"5-quant-splines\",data=paquid,ng=2,mixture=~age65+I(age65^2), B=random(mCESD1),maxiter=0)  mm2S <- mpjlcmm(longitudinal=list(mMMSE2,mCESD2),subject=\"ID\",ng=2,data=paquid, survival=Surv(age_init,agedem,dem)~CEP+mixture(male),classmb=~CEP+male)  mm2S_b <- gridsearch(mpjlcmm(longitudinal=list(mMMSE2,mCESD2),subject=\"ID\",ng=2, data=paquid,survival=Surv(age_init,agedem,dem)~CEP+mixture(male), classmb=~CEP+male),minit=mm1S,rep=50,maxiter=50)  summarytable(mm1S,mm2S,mm2S_b)   mod1_biv <- update(mm1S) mod2_biv <- update(mm2S)  ## -> use post-fit functions as in exemple 1 }"},{"path":"/reference/multlcmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of multivariate mixed-effect models and multivariate latent class\nmixed-effect models for multivariate longitudinal outcomes of possibly\nmultiple types (continuous Gaussian, continuous non-Gaussian/curvilinear, ordinal)\nthat measure the same underlying latent process. — multlcmm","title":"Estimation of multivariate mixed-effect models and multivariate latent class\nmixed-effect models for multivariate longitudinal outcomes of possibly\nmultiple types (continuous Gaussian, continuous non-Gaussian/curvilinear, ordinal)\nthat measure the same underlying latent process. — multlcmm","text":"function constitutes multivariate extension function lcmm. fits multivariate mixed models multivariate latent class mixed models multivariate longitudinal outcomes different types. handles continuous longitudinal outcomes (Gaussian non-Gaussian, curvilinear) well ordinal longitudinal outcomes (cumulative probit measurement model).  model assumes outcomes measure underlying latent process  defined common factor, outcome related latent common  factor specific parameterized link function. latent process level, model estimates standard linear mixed model latent class linear mixed model heterogeneity population investigated (way functions hlme lcmm). Parameters nonlinear link  functions latent process mixed model estimated simultaneously  using maximum likelihood method.","code":""},{"path":"/reference/multlcmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of multivariate mixed-effect models and multivariate latent class\nmixed-effect models for multivariate longitudinal outcomes of possibly\nmultiple types (continuous Gaussian, continuous non-Gaussian/curvilinear, ordinal)\nthat measure the same underlying latent process. — multlcmm","text":"","code":"multlcmm(   fixed,   mixture,   random,   subject,   classmb,   ng = 1,   idiag = FALSE,   nwg = FALSE,   randomY = FALSE,   link = \"linear\",   intnodes = NULL,   epsY = 0.5,   cor = NULL,   data,   B,   convB = 1e-04,   convL = 1e-04,   convG = 1e-04,   maxiter = 100,   nsim = 100,   prior,   pprior = NULL,   range = NULL,   subset = NULL,   na.action = 1,   posfix = NULL,   partialH = FALSE,   verbose = FALSE,   returndata = FALSE,   methInteg = \"QMC\",   nMC = NULL,   var.time = NULL,   nproc = 1,   clustertype = NULL )  mlcmm(   fixed,   mixture,   random,   subject,   classmb,   ng = 1,   idiag = FALSE,   nwg = FALSE,   randomY = FALSE,   link = \"linear\",   intnodes = NULL,   epsY = 0.5,   cor = NULL,   data,   B,   convB = 1e-04,   convL = 1e-04,   convG = 1e-04,   maxiter = 100,   nsim = 100,   prior,   pprior = NULL,   range = NULL,   subset = NULL,   na.action = 1,   posfix = NULL,   partialH = FALSE,   verbose = FALSE,   returndata = FALSE,   methInteg = \"QMC\",   nMC = NULL,   var.time = NULL,   nproc = 1,   clustertype = NULL )"},{"path":"/reference/multlcmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of multivariate mixed-effect models and multivariate latent class\nmixed-effect models for multivariate longitudinal outcomes of possibly\nmultiple types (continuous Gaussian, continuous non-Gaussian/curvilinear, ordinal)\nthat measure the same underlying latent process. — multlcmm","text":"fixed two-sided linear formula object specifying fixed-effects linear mixed model latent process level. response outcomes separated + left ~ covariates separated + right ~. identifiability purposes, intercept specified default removed -1. Variables contrast different outcomes also estimated included contrast(). mixture one-sided formula object class-specific fixed effects latent process mixed model (specify number latent classes greater 1). Among list covariates included fixed, covariates class-specific regression parameters entered mixture separated +. default, intercept included. intercept, -1 first term included. random optional one-sided formula random-effects latent process mixed model. least one random effect included identifiability purposes. Covariates random-effect separated +. default, intercept included. intercept, -1 first term included. subject name covariate representing grouping structure. classmb optional one-sided formula describing covariates class-membership multinomial logistic model. Covariates included separated +. intercept included formula. ng number latent classes considered. ng=1 mixture classmb specified. ng>1, mixture required. idiag optional logical variance-covariance structure random-effects. FALSE, non structured matrix variance-covariance considered (default). TRUE diagonal matrix variance-covariance considered. nwg optional logical class-specific variance-covariance random-effects. FALSE variance-covariance matrix common latent classes (default). TRUE class-specific proportional parameter multiplies variance-covariance matrix class (proportional parameter last latent class equals 1 ensure identifiability). randomY optional logical including outcome-specific random intercept. FALSE outcome-specific random intercept added (default). TRUE independent outcome-specific random intercepts parameterized variance included. link optional vector families parameterized link functions estimate (one outcome). Option \"linear\" (default) specifies linear link function. possibilities include \"beta\" estimating link function family Beta cumulative distribution functions, \"thresholds\" using threshold model describe correspondence level ordinal outcome underlying latent process \"Splines\" approximating link function -splines. latter case, number nodes nodes location also specified. number nodes first entered followed -, location specified \"equi\", \"quant\" \"manual\" respectively equidistant nodes, nodes quantiles marker distribution interior nodes entered manually argument intnodes. followed - finally \"splines\" indicated.  example, \"7-equi-splines\" means -splines 7 equidistant nodes, \"6-quant-splines\" means -splines 6 nodes located quantiles marker distribution \"9-manual-splines\" means -splines 9 nodes, vector 7 interior nodes entered argument intnodes. intnodes optional vector interior nodes. argument required -splines link function nodes entered manually. epsY optional definite positive real used rescale marker (0,1) beta link function used. default, epsY=0.5. cor optional indicator inclusion autocorrelated Gaussian process latent process linear (latent process) mixed model. Option \"BM\" indicates brownian motion parameterized variance. Option \"AR\" specifies autoregressive process order 1 parameterized variance correlation intensity. option followed time variable brackets cor=BM(time). default, autocorrelated Gaussian process added. data data frame containing variables named fixed, mixture, random, classmb subject. B optional specification initial values parameters. Three options allowed: (1) vector initial values entered (order parameters included detailed details section).  (2) nothing specified. preliminary analysis involving estimation standard linear mixed model performed choose initial values.  (3) ng>1, multlcmm object entered. correspond exact structure model ng=1. program automatically generate initial values model. specification avoids preliminary analysis indicated (2) Note due possible local maxima, B vector specified several different starting points tried. convB optional threshold convergence criterion based parameter stability. default, convB=0.0001. convL optional threshold convergence criterion based log-likelihood stability. default, convL=0.0001. convG optional threshold convergence criterion based derivatives. default, convG=0.0001. maxiter optional maximum number iterations Marquardt iterative algorithm. default, maxiter=100. nsim number points used plot estimated link functions. default, nsim=100. prior name covariate containing prior latent class membership. covariate integer values 0,1,...,ng. prior, value 0. prior subject, value number latent class (1,...,ng). pprior optional vector specifying names covariates containing prior probabilities belong latent class. probabilities 0 1 sum 1 subject. range optional vector indicating range outcomes (minimum maximum). default, range defined according minimum maximum observed values outcome. option used Beta Splines transformations. subset optional vector giving subset observations data use. default, lines. na.action Integer indicating NAs managed. default 1 'na.omit'. alternative 2 'na.fail'. options 'na.pass' 'na.exclude' implemented current version. posfix Optional vector giving indices vector B parameters estimated. Default NULL, parameters estimated. partialH optional logical Splines link functions . Indicates whether parameters link functions can dropped Hessian matrix define convergence criteria. verbose logical indicating information computation reported. Default TRUE. returndata logical indicating data used computation returned. Default FALSE, data returned. methInteg character indicating type integration ordinal outcomes considered. 'MCO' ordinary Monte Carlo, 'MCA' antithetic Monte Carlo, 'QMC' quasi Monte Carlo. Default \"QMC\". nMC integer, number Monte Carlo simulations. default, 1000 points used least one threshold link specified. var.time optional character indicating name time variable. nproc number cores parallel computation. Default 1 (sequential mode). clustertype optional character indicating type cluster parallel computation.","code":""},{"path":"/reference/multlcmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of multivariate mixed-effect models and multivariate latent class\nmixed-effect models for multivariate longitudinal outcomes of possibly\nmultiple types (continuous Gaussian, continuous non-Gaussian/curvilinear, ordinal)\nthat measure the same underlying latent process. — multlcmm","text":"list returned : ns number grouping units dataset ng number latent classes loglik log-likelihood model best vector parameter estimates order specified B detailed section details V model converged (conv=1 3), vector containing upper triangle matrix variance-covariance estimates Best exception variance-covariance parameters random-effects V contains variance-covariance estimates Cholesky transformed parameters displayed cholesky. conv=2, V contains second derivatives log-likelihood. gconv vector convergence criteria: 1. parameters, 2. likelihood, 3. derivatives conv status convergence: =1 convergence criteria satisfied, =2 maximum number iterations reached, =4 5 problem occured optimisation call matched call niter number Marquardt iterations N internal information used related functions idiag internal information used related functions pred table individual predictions residuals underlying latent process scale; includes marginal predictions (pred_m), marginal residuals (resid_m), subject-specific predictions (pred_ss) subject-specific residuals (resid_ss) averaged classes, transformed observations latent process scale (obs) finally class-specific marginal subject-specific predictions (number latent class: pred_m_1,pred_m_2,...,pred_ss_1,pred_ss_2,...). var.time specified, corresponding measurement time also included. pprob table posterior classification posterior individual class-membership probabilities Xnames list covariates included model predRE table containing individual predictions random-effects : column per random-effect, line per subject. cholesky vector containing estimates Cholesky transformed parameters variance-covariance matrix random-effects estimlink table containing simulated values outcome corresponding estimated link function epsY definite positive reals used rescale markers (0,1) beta link function used. default, epsY=0.5. linktype indicators link function types: 0 linear, 1 beta, 2 splines 3 thresholds linknodes vector nodes useful 'splines' link functions data original data set (returndata TRUE)","code":""},{"path":"/reference/multlcmm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation of multivariate mixed-effect models and multivariate latent class\nmixed-effect models for multivariate longitudinal outcomes of possibly\nmultiple types (continuous Gaussian, continuous non-Gaussian/curvilinear, ordinal)\nthat measure the same underlying latent process. — multlcmm","text":". PARAMETERIZED LINK FUNCTIONS multlcmm function estimates multivariate latent class mixed models different types outcomes assuming parameterized link function linking outcome Y_k(t) underlying latent common factor L(t) measure. fix latent process dimension, chose constrain latent process level (first) intercept latent class mixed model 0 standard error first random effect 1. 1. \"linear\" link function, 2 parameters required following transformation (Y(t) - b1)/b2 2. \"beta\" link function, 4 parameters required following transformation: [ h(Y(t)',b1,b2) - b3]/b4 h Beta CDF canonical parameters c1 c2 can derived b1 b2 c1=exp(b1)/[exp(b2)*(1+exp(b1))] c2=1/[exp(b2)*(1+exp(b1))], Y(t)' rescaled outcome .e. Y(t)'= [ Y(t) - min(Y(t)) + epsY ] / [ max(Y(t)) - min(Y(t)) +2*epsY ]. 3. \"splines\" link function, n+2 parameters required following transformation b_1 + b_2*I_1(Y(t)) + ... + b_n+2 I_n+1(Y(t)), I_1,...,I_n+1 basis quadratic -splines. constraint parameters positive, except b_1, program estimates b_k^* (k=2,...,n+2) b_k=(b_k^*)^2. parameterization may lead cases problems convergence currently addressing. 4. \"thresholds\" link function ordinal outcome levels 0,...,C, C-1 parameters required following transformation: Y(t)=c <=> b_c < L(t) <= b_c+1 b_0 = - infinity b_C+1=+infinity. constraint parameters increasing, except first parameter b_1, program estimates b_k^* (k=2,...C-1) b_k=b_k-1+(b_k^*)^2. Details parameterized link functions can found papers: Proust-Lima et al. (Biometrics 2006), Proust-Lima et al. (BJMSP 2013), Proust-Lima et al. (arxiv 2021 - https://arxiv.org/abs/2109.13064) B. VECTOR PARAMETERS B parameters vector initial values B vector maximum likelihood estimates best included following order: (1) ng-1 parameters required intercepts latent class membership model, covariates included classmb, ng-1 paramaters entered one; (2) covariates fixed, one parameter required covariate mixture, ng paramaters required covariate also mixture; ng=1, intercept estimated parameter specified B. ng>1, first intercept estimated ng-1 parameters specified B; (3) covariates included contrast() fixed, one supplementary parameter per outcome required excepted last outcome parameter estimated deduced others; (4) idiag=TRUE, variance random-effect specified random required excepted first one (usually intercept) constrained 1. (5) idiag=FALSE, inferior triangular variance-covariance matrix random-effects required excepted first variance (usually intercept) constrained 1. (5) nwg=TRUE ng>1, ng-1 parameters class-specific proportional coefficients variance covariance matrix random-effects; (6) cor specified, standard error Brownian motion standard error correlation parameter autoregressive process; (7) standard error outcome-specific Gaussian errors (one per outcome); (8) randomY=TRUE, standard error outcome-specific random intercept (one per outcome); (9) parameters parameterized link function: 2 \"linear\", 4 \"beta\", n+2 \"splines\" n nodes. C. CAUTIONS REGARDING USE PROGRAM caution made using program. Convergence criteria strict based derivatives log-likelihood addition parameter log-likelihood stability. cases, program may converge reach maximum number iterations fixed 100. case, user check parameter estimates last iteration boundaries parameter space. parameters boundaries parameter space, identifiability model critical. may happen especially splines parameters may close 0 (lower boundary) classmb parameters high low (perfect classification). identifiability parameters suspected, program can run former estimates fixing suspected parameters value option posfix. usually solves problem. alternative remove parameters Beta Splines link function inverse Hessian option partialH. , program run initial values, higher maximum number iterations less strict convergence tolerances. Specifically investigating heterogeneity (ng>1): (1) log-likelihood latent class model can multiple maxima, careful choice initial values crucial ensuring convergence toward global maximum. program can run without entering vector initial values (see point 2). However, recommend systematically enter initial values B try different sets initial values. (2) automatic choice initial values provide requires estimation preliminary linear mixed model. user aware first, preliminary analysis can take time large datatsets second, generated initial values can likely even may converge slowly local maximum. reason several alternatives exist. vector initial values can directly specified B initial values can generated (automatically randomly) model ng=. Finally, function gridsearch performs automatic grid search. D. NUMERICAL INTEGRATION THRESHOLD LINK FUNCTION dealing continuous outcomes, computation likelihood require numerical integration random-effects, estimation procedure relatively fast. least one ordinal outcome modeled, numerical integration random-effects required computation individual contribution likelihood. achieved using Monte-Carlo procedure. allow three options: standard Monte-Carlo simulations, well antithetic Monte-Carlo quasi Monte-Carlo methods proposed Philipson et al (2020).","code":""},{"path":"/reference/multlcmm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of multivariate mixed-effect models and multivariate latent class\nmixed-effect models for multivariate longitudinal outcomes of possibly\nmultiple types (continuous Gaussian, continuous non-Gaussian/curvilinear, ordinal)\nthat measure the same underlying latent process. — multlcmm","text":"Proust-Lima C, Philipps V, Liquet B (2017). Estimation Extended Mixed  Models Using Latent Classes Latent Processes: R Package lcmm.  Journal Statistical Software, 78(2), 1-56. doi:10.18637/jss.v078.i02 Proust Jacqmin-Gadda (2005). Estimation linear mixed models mixture distribution random-effects. Comput Methods Programs Biomed 78: 165-73. Proust, Jacqmin-Gadda, Taylor, Ganiayre, Commenges (2006). nonlinear model latent process cognitive evolution using multivariate longitudinal data. Biometrics 62, 1014-24. Proust-Lima, Dartigues Jacqmin-Gadda (2011). Misuse linear mixed model evaluating risk factors cognitive decline. Amer J Epidemiol 174(9): 1077-88. Proust-Lima, Amieva, Jacqmin-Gadda (2013). Analysis multivariate mixed longitudinal data: flexible latent process approach. Br J Math Stat Psychol 66(3): 470-87. Commenges, Proust-Lima, Samieri, Liquet (2012). universal approximate cross-validation criterion asymptotic distribution, Arxiv. Philipson, Hickey, Crowther, Kolamunnage-Dona (2020). Faster Monte Carlo estimation semiparametric joint models time--event multivariate longitudinal data. Computational Statistics & Data Analysis 151. Proust-Lima, Philipps, Perrot, Blanchin, Sebille (2021). Modeling repeated  self-reported outcome data: continuous-time longitudinal Item Response  Theory model. https://arxiv.org/abs/2109.13064","code":""},{"path":[]},{"path":"/reference/multlcmm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimation of multivariate mixed-effect models and multivariate latent class\nmixed-effect models for multivariate longitudinal outcomes of possibly\nmultiple types (continuous Gaussian, continuous non-Gaussian/curvilinear, ordinal)\nthat measure the same underlying latent process. — multlcmm","text":"Cecile Proust-Lima Viviane Philipps cecile.proust-lima@inserm.fr","code":""},{"path":"/reference/multlcmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of multivariate mixed-effect models and multivariate latent class\nmixed-effect models for multivariate longitudinal outcomes of possibly\nmultiple types (continuous Gaussian, continuous non-Gaussian/curvilinear, ordinal)\nthat measure the same underlying latent process. — multlcmm","text":"","code":"if (FALSE) { # Latent process mixed model for two curvilinear outcomes. Link functions are  # aproximated by I-splines, the first one has 3 nodes (i.e. 1 internal node 8), # the second one has 4 nodes (i.e. 2 internal nodes 12,25)  m1 <- multlcmm(Ydep1+Ydep2~1+Time*X2+contrast(X2),random=~1+Time, subject=\"ID\",randomY=TRUE,link=c(\"4-manual-splines\",\"3-manual-splines\"), intnodes=c(8,12,25),data=data_lcmm)  # to reduce the computation time, the same model is estimated using  # a vector of initial values m1 <- multlcmm(Ydep1+Ydep2~1+Time*X2+contrast(X2),random=~1+Time, subject=\"ID\",randomY=TRUE,link=c(\"4-manual-splines\",\"3-manual-splines\"), intnodes=c(8,12,25),data=data_lcmm,  B=c(-1.071, -0.192,  0.106, -0.005, -0.193,  1.012,  0.870,  0.881,   0.000,  0.000, -7.520,  1.401,  1.607 , 1.908,  1.431,  1.082,  -7.528,  1.135 , 1.454 , 2.328, 1.052))   # output of the model summary(m1) # estimated link functions plot(m1,which=\"linkfunction\") # variation percentages explained by linear mixed regression VarExpl(m1,data.frame(Time=0))  #### Heterogeneous latent process mixed model with linear link functions  #### and 2 latent classes of trajectory  m2 <- multlcmm(Ydep1+Ydep2~1+Time*X2,random=~1+Time,subject=\"ID\", link=\"linear\",ng=2,mixture=~1+Time,classmb=~1+X1,data=data_lcmm, B=c( 18,-20.77,1.16,-1.41,-1.39,-0.32,0.16,-0.26,1.69,1.12,1.1,10.8, 1.24,24.88,1.89)) # summary of the estimation summary(m2) # posterior classification postprob(m2) # longitudinal predictions in the outcomes scales for a given profile of covariates  newdata <- data.frame(Time=seq(0,5,length=100),X1=0,X2=0,X3=0) predGH <- predictY(m2,newdata,var.time=\"Time\",methInteg=0,nsim=20)  head(predGH) }"},{"path":"/reference/paquid.html","id":null,"dir":"Reference","previous_headings":"","what":"Longitudinal data on cognitive and physical aging in the elderly — paquid","title":"Longitudinal data on cognitive and physical aging in the elderly — paquid","text":"dataset consists subsample Paquid prospective cohort study. Repeated measures cognitive measures (MMSE, IST, BVRT psychometric tests), physical dependency (HIER) depression sympatomatology (CESD) collected maximum period 20 years along dementia information (age dementia diagnosis, dementia diagnosis information). Time-independent socio-demographic information also provided (CEP, male, age_init).","code":""},{"path":"/reference/paquid.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Longitudinal data on cognitive and physical aging in the elderly — paquid","text":"data frame 2250 observations 500 subjects 12 variables: ID subject identification number MMSE score Mini-Mental State Examination (MMSE), psychometric test global cognitive functioning (integer range 0-30) BVRT score Benton Visual Retention Test (BVRT), psychometric test spatial memory (integer range 0-15) IST score Isaacs Set Test (IST) truncated 15 seconds, test verbal memory (integer range 0-40) HIER score physical dependency (0=dependency, 1=mild dependency, 2=moderate dependency, 3=severe dependency) CESD score short self-report scale CES-D designed measure depressive symptomatology general population (integer range 0-52) age age follow-visit dem indicator positive diagnosis dementia agedem age dementia diagnosis dem=1 last contact dem=0 age_init age entry cohort CEP binary indicator educational level (CEP=1 subjects graduated primary school; CEP=0 otherwise) male binary indicator gender (male=1 men; male=0 women)","code":""},{"path":"/reference/paquid.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Longitudinal data on cognitive and physical aging in the elderly — paquid","text":"Letenneur, L., Commenges, D., Dartigues, J. F., & Barberger-Gateau, P. (1994). Incidence dementia Alzheimer's disease elderly community residents southwestern France. International Journal Epidemiology, 23 (6), 1256-61.","code":""},{"path":"/reference/paquid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Longitudinal data on cognitive and physical aging in the elderly — paquid","text":"","code":"summary(paquid) #>        ID             MMSE            BVRT            IST        #>  Min.   :  1.0   Min.   : 0.00   Min.   : 0.00   Min.   : 5.00   #>  1st Qu.:132.2   1st Qu.:25.00   1st Qu.: 9.00   1st Qu.:22.00   #>  Median :263.0   Median :27.00   Median :11.00   Median :27.00   #>  Mean   :256.2   Mean   :25.99   Mean   :10.78   Mean   :26.52   #>  3rd Qu.:376.0   3rd Qu.:29.00   3rd Qu.:13.00   3rd Qu.:31.00   #>  Max.   :500.0   Max.   :30.00   Max.   :15.00   Max.   :40.00   #>                  NA's   :36      NA's   :300     NA's   :198     #>       HIER            CESD             age             agedem      #>  Min.   :0.000   Min.   : 0.000   Min.   : 66.28   Min.   :66.87   #>  1st Qu.:1.000   1st Qu.: 2.000   1st Qu.: 75.09   1st Qu.:82.03   #>  Median :1.000   Median : 6.000   Median : 80.57   Median :86.61   #>  Mean   :1.272   Mean   : 8.488   Mean   : 80.53   Mean   :85.89   #>  3rd Qu.:2.000   3rd Qu.:12.000   3rd Qu.: 85.77   3rd Qu.:89.94   #>  Max.   :3.000   Max.   :52.000   Max.   :102.16   Max.   :99.49   #>  NA's   :46      NA's   :146                                       #>       dem            age_init          CEP              male        #>  Min.   :0.0000   Min.   :65.25   Min.   :0.0000   Min.   :0.0000   #>  1st Qu.:0.0000   1st Qu.:68.00   1st Qu.:0.0000   1st Qu.:0.0000   #>  Median :0.0000   Median :71.92   Median :1.0000   Median :0.0000   #>  Mean   :0.3329   Mean   :73.01   Mean   :0.7373   Mean   :0.3853   #>  3rd Qu.:1.0000   3rd Qu.:76.96   3rd Qu.:1.0000   3rd Qu.:1.0000   #>  Max.   :1.0000   Max.   :92.33   Max.   :1.0000   Max.   :1.0000   #>"},{"path":"/reference/permut.html","id":null,"dir":"Reference","previous_headings":"","what":"Permutation of the latent classes — permut","title":"Permutation of the latent classes — permut","text":"function allows re-ordering latent classes estimated model.","code":""},{"path":"/reference/permut.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Permutation of the latent classes — permut","text":"","code":"permut(m, order, estim = TRUE)"},{"path":"/reference/permut.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Permutation of the latent classes — permut","text":"m object inheriting classes hlme, lcmm, multlcmm Jointlcmm order vector (integer 1 ng) containing new order latent classes estim optional boolean specifying model estimated reordered parameters initial values. default, model estimated. FALSE, coefficients $best modified. outputs changed.","code":""},{"path":"/reference/permut.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Permutation of the latent classes — permut","text":"object class m, reordered classes, initial object new coefficients estim FALSE.","code":""},{"path":"/reference/permut.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Permutation of the latent classes — permut","text":"Viviane Philipps Cecile Proust-Lima","code":""},{"path":"/reference/permut.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Permutation of the latent classes — permut","text":"","code":"## Estimation of a hlme model with 2 classes m2 <- hlme(Y~Time*X1,mixture=~Time,random=~Time,classmb=~X2+X3,subject='ID',          ng=2,data=data_hlme,B=c(0.11,-0.74,-0.07,20.71,                                  29.39,-1,0.13,2.45,-0.29,4.5,0.36,0.79,0.97))  ## Exchange class 2 and class 1 m2b <- permut(m2,order=c(2,1))"},{"path":"/reference/plot.ItemInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot of information functions — plot.ItemInfo","title":"Plot of information functions — plot.ItemInfo","text":"function plots information functions stemmed lcmm multlcmm object ordinal outcomes modeled via threshold links.","code":""},{"path":"/reference/plot.ItemInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot of information functions — plot.ItemInfo","text":"","code":"# S3 method for ItemInfo plot(   x,   which = \"ItemInfo\",   outcome = \"all\",   legend.loc = \"topright\",   legend = NULL,   add = FALSE,   shades = TRUE,   ... )"},{"path":"/reference/plot.ItemInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot of information functions — plot.ItemInfo","text":"x object inheriting classes ItemInfo character specifying values plot. one 'ItemInfo' Fisher information function ordinal outcomes, 'LevelInfo' information item's level 'LevelProb' probability item's levels.  Default 'ItemInfo'. outcome character specifying outcome consider. Default \"\". legend.loc keyword position legend list \"bottomright\", \"bottom\", \"bottomleft\", \"left\", \"topleft\",\"top\", \"topright\", \"right\" \"center\". legend character expression appear legend. legend added, \"legend\" NULL. add logical indicating curves added existing plot. Default FALSE. shades logical indicating confidence intervals represented shades. Default FALSE, confidence intervals represented dotted lines. ... parameters passed plotting functions legend","code":""},{"path":"/reference/plot.ItemInfo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot of information functions — plot.ItemInfo","text":"Viviane Philipps Cecile Proust-Lima","code":""},{"path":"/reference/plot.cuminc.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot of predicted cumulative incidences according to a profile of covariates — plot.cuminc","title":"Plot of predicted cumulative incidences according to a profile of covariates — plot.cuminc","text":"function displays predicted cause-specific cumulative incidences derived joint latent class model according profile covariates.   . ~~","code":""},{"path":"/reference/plot.cuminc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot of predicted cumulative incidences according to a profile of covariates — plot.cuminc","text":"","code":"# S3 method for cuminc plot(   x,   profil = 1,   event = 1,   add = FALSE,   legend,   legend.loc = \"topleft\",   ... )"},{"path":"/reference/plot.cuminc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot of predicted cumulative incidences according to a profile of covariates — plot.cuminc","text":"x object class cuminc profil integer giving profile number cumulative incidences plotted. event integer giving event indicator cumulative incidence plotted. add logical indicating curves added existing plot. Default FALSE. legend character expression appear legend. legend added, \"legend\" NULL. legend.loc keyword position legend list \"bottomright\", \"bottom\", \"bottomleft\", \"left\", \"topleft\",\"top\", \"topright\", \"right\" \"center\". default, legend located top left plot. ... parameters passed plotting functions","code":""},{"path":"/reference/plot.cuminc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot of predicted cumulative incidences according to a profile of covariates — plot.cuminc","text":"returns NULL","code":""},{"path":[]},{"path":"/reference/plot.cuminc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot of predicted cumulative incidences according to a profile of covariates — plot.cuminc","text":"Viviane Philipps Cecile Proust-Lima","code":""},{"path":"/reference/plot.dynpred.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot of individual dynamic predictions — plot.dynpred","title":"Plot of individual dynamic predictions — plot.dynpred","text":"function provides graphical representation individual dynamic predictions obtained joint latent class model plots simultaneously observed outcome.","code":""},{"path":"/reference/plot.dynpred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot of individual dynamic predictions — plot.dynpred","text":"","code":"# S3 method for dynpred plot(x, subject = NULL, landmark = NULL, horizon = NULL, add = FALSE, ...)"},{"path":"/reference/plot.dynpred.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot of individual dynamic predictions — plot.dynpred","text":"x dynpred object, containing predicted probabilities event time window, obtained joint latent class model. subject vector containing identifiers subjects user wants display. NULL (default), subjects plotted. landmark vector containing landmark times probabilities plotted. NULL (default), landmarks used. several horizon specified, one landmark selected. horizon vector containing horizon times probabilities plotted. NULL (default), horizons used. several landmarks specified, one horizon selected. add logical indicating plot added existing plot. default (add=FALSE), new plot created. ... optional graphical parameters.","code":""},{"path":"/reference/plot.dynpred.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot of individual dynamic predictions — plot.dynpred","text":"returns NULL","code":""},{"path":"/reference/plot.dynpred.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot of individual dynamic predictions — plot.dynpred","text":"Two types plot provided moment : - one horizon selected (one several landmarks), prediction represented point landmark time. available, predictions surrounded confidence intervals. - several horizons (t1, t2, etc) one landmark (s) selected, line linking predictions (placed abscissa s+t1, s+t2, etc) drawn. Confidence bands (available) represented dotted lines.","code":""},{"path":[]},{"path":"/reference/plot.dynpred.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot of individual dynamic predictions — plot.dynpred","text":"Cecile Proust-Lima, Viviane Philipps","code":""},{"path":"/reference/plot.dynpred.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot of individual dynamic predictions — plot.dynpred","text":"","code":"if (FALSE) {  ## Joint latent class model with 2 classes : m32 <- Jointlcmm(Ydep1~Time*X1,mixture=~Time,random=~Time,subject=\"ID\", classmb=~X3,ng=2,survival=Surv(Tevent,Event)~X1+mixture(X2), hazard=\"3-quant-splines\",hazardtype=\"PH\",data=data_lcmm,B = c(0.64, -0.62,  0, 0, 0.52, 0.81, 0.41, 0.78, 0.1, 0.77, -0.05, 10.43, 11.3, -2.6, -0.52, 1.41,  -0.05, 0.91, 0.05, 0.21, 1.5))  ## Predictions at landmark 10 and 12 for horizon 3, 5 and 10 for two subjects : dynpred.m32 <- dynpred(m32,landmark=c(10,12),horizon=c(3,5,10),var.time=\"Time\", fun.time=function(x){10*x},newdata=data_lcmm[4:8,],draws=TRUE,ndraws=2000)  ## Plot of the predictions at landmark 10 for horizon 3,5,10 : plot(dynpred.m32,landmark=10)  ## Plot of the predictions at landmark 10 and 12 for horizon 3 : plot(dynpred.m32,horizon=3) }"},{"path":"/reference/plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot of a fitted model — plot","title":"Plot of a fitted model — plot","text":"function produces different plots (residuals, goodness--fit, estimated link functions, estimated baseline risk/survival posterior probabilities distributions) fitted object class hlme, lcmm, multlcmm Jointlcmm.","code":""},{"path":"/reference/plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot of a fitted model — plot","text":"","code":"# S3 method for hlme plot(x, which = \"residuals\", var.time, break.times, marg, subset, shades, ...)  # S3 method for lcmm plot(x, which = \"residuals\", var.time, break.times, marg, subset, shades, ...)  # S3 method for multlcmm plot(   x,   which = \"residuals\",   var.time,   break.times,   marg,   outcome,   subset,   shades,   ... )  # S3 method for Jointlcmm plot(   x,   which = \"residuals\",   var.time,   break.times,   marg,   event,   subset,   shades,   ... )  # S3 method for mpjlcmm plot(x, which, event, ...)  # S3 method for externSurv plot(x, which = \"hazard\", event, ...)  # S3 method for externX plot(x, which = \"postprob\", event, ...)"},{"path":"/reference/plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot of a fitted model — plot","text":"x object inheriting classes hlme, lcmm, multlcmm Jointlcmm, representing respectively fitted latent class linear mixed model, general latent class mixed model joint latent class model character string indicating type plot produce. hlme objects, available \"residuals\", \"postprob\",\"fit\". lcmm multlcmm objects, available \"residuals\", \"postprob\", \"link\", \"linkfunction\", \"fit\".  Jointlcmm objects, avaiable \"residuals\", \"postprob\", \"link\", \"linkfunction\", \"fit\", \"hazard\", \"baselinerisk\", \"survival\". Default \"residuals\" var.time =\"fit\" , character string containing name variable corresponds time longitudinal model. break.times =\"fit\" , either numeric vector containing cuts-defining time-intervals integer giving number cut-offs. latter case, cut-offs placed quantiles observed times distribution. marg =\"fit\" , logical indicating type prediction. marg=TRUE (default), marginal predictions provided. marg=FALSE, subject-specific predictions provided. subset =\"fit\" , subset data used estimate model, defining data fit evaluated. default, data used. shades logical indicating confidence intervals represented shades. Default FALSE, confidence intervals represented dotted lines. ... parameters passed plotting functions. includes graphical parameters described par function arguments legend (character expression appear legend. legend added, \"legend\" NULL. ), legend.loc (keyword position legend list \"bottomright\", \"bottom\", \"bottomleft\",  \"left\", \"topleft\",\"top\", \"topright\", \"right\" \"center\". default, legend located top left plot. ) add (logical indicating curves added existing plot. Default FALSE.). outcome =\"fit\" multlcmm objects , outcome consider. event =\"baselinerisk\" =\"hazard\" , integer corresponding numeric code (indicator variable) event baseline risk functions plotted. default, first event considered.","code":""},{"path":"/reference/plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot of a fitted model — plot","text":"=\"residuals\", function provides marginal residuals marginal predictions, subject-specific residuals subject-specific predictions, normal QQ-plot confidence bands marginal residuals normal QQ-plot confidence bands subject-specific residuals. =\"postprob\", function provides histograms posterior class-membership probabilities stemmed Jointlcmm, lcmm, hlme multlcmm object. =\"link\" =\"linkfunction\", function displays estimated transformation(s) specified option link lcmm multlcmm functions. corresponds (non)linear parameterized link estimated oberved longitudinal outcome underlying latent process. =\"fit\", function provides class-specific weighted marginal subject-specific mean predicted trajectories time class-specific weighted mean observed trajectories 95% confidence bounds. predicted observed class-specific values weighted means within time interval; observation prediction (transformed scale appropriate), weights class-specific (posterior subject-specific marginal otherwise) probabilities belong latent class. =\"baselinerisk\" =\"hazard\", function displays estimated baseline risk functions time--event interest latent class. =\"survival\", function displays estimated event-free probabilities (survival functions) time--event interest latent class.","code":""},{"path":[]},{"path":"/reference/plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot of a fitted model — plot","text":"Cecile Proust-Lima, Viviane Philipps Benoit Liquet","code":""},{"path":"/reference/plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot of a fitted model — plot","text":"","code":"###################### fit, residuals and postprob   # estimation of the model m<-lcmm(Y~Time*X1,mixture=~Time,random=~Time,classmb=~X2+X3, subject='ID',ng=2,data=data_hlme,B=c(0.41,0.55,-0.18,-0.41, -14.26,-0.34,1.33,13.51,24.65,2.98,1.18,26.26,0.97))    # fit plot(m,which=\"fit\",marg=FALSE,var.time=\"Time\",bty=\"n\")  # residuals plot plot(m)  # postprob plot plot(m,which=\"postprob\")     ###################### fit, linkfunctions  #### Estimation of homogeneous mixed models with different assumed link #### functions, a quadratic mean trajectory for the latent process with  #### independent random intercept, slope and quadratic slope #### (comparison of linear, Beta and 3 and 5 splines link functions) if (FALSE) {  # linear link function m10<-lcmm(Ydep2~Time+I(Time^2),random=~Time+I(Time^2),subject='ID',ng=1,           data=data_lcmm,link=\"linear\",           B=c(-0.7454, -0.2031,  0.2715,  0.2916 , 0.6114, -0.0064,  0.0545,               0.0128, 25.3795, 2.2371))              # Beta link function m11<-lcmm(Ydep2~Time+I(Time^2),random=~Time+I(Time^2),subject='ID',ng=1,           data=data_lcmm,link=\"beta\",B=c(-0.9109, -0.0831,  0.5194,  0.1910 ,           0.8984, -0.0179, -0.0636,  0.0045,  0.5514, -0.7692,  0.7037,  0.0899))            # fit  par(mfrow=c(2,1),mar=c(4,4,1,1)) plot(m11,which=\"fit\",var.time=\"Time\",bty=\"l\",ylim=c(-3,0)) plot(m11,which=\"fit\",var.time=\"Time\",marg=FALSE,bty=\"l\",ylim=c(-3,0))  # I-splines with 3 equidistant nodes m12<-lcmm(Ydep2~Time+I(Time^2),random=~Time+I(Time^2),subject='ID',ng=1,           data=data_lcmm,link=\"3-equi-splines\",B=c(-0.9272, -0.0753 , 0.5304,            0.1950,  0.9260, -0.0204, -0.0739 , 0.0059, -7.8369,  0.9228 ,-1.4689,           2.0396,  1.8102))  # I-splines with 5 nodes, and interior nodes entered manually m13<-lcmm(Ydep2~Time+I(Time^2),random=~Time+I(Time^2),subject='ID',ng=1,           data=data_lcmm,link=\"5-manual-splines\",intnodes=c(10,20,25),           B=c(-0.9315, -0.0739 , 0.5254 , 0.1933,  0.9418, -0.0206, -0.0776,           0.0064, -7.8645, 0.7470,  1.2080,  1.5537 , 1.7558 , 1.3386 , 1.0982))  # Plot of estimated different link functions: # (applicable for models that only differ in the \"link function\" used.  # Otherwise, the latent process scale is different and a rescaling # is necessary) plot(m10,which=\"linkfunction\",bty=\"l\") plot(m11,which=\"linkfunction\",bty=\"l\",add=TRUE,col=2) plot(m12,which=\"linkfunction\",bty=\"l\",add=TRUE,col=3) plot(m13,which=\"linkfunction\",bty=\"l\",add=TRUE,col=4) legend(\"topleft\",legend=c(\"linear\",\"beta\",\"3-Isplines\",\"5-Isplines\"), col=1:4,lty=1,bty='n') }   ###################### fit, baselinerisk and survival if (FALSE) { #### estimation with 3 latent classes (ng=3) - see Jointlcmm  #### help for details on the model m3 <- Jointlcmm(fixed= Ydep1~Time*X1,mixture=~Time,random=~Time, classmb=~X3,subject='ID',survival = Surv(Tevent,Event)~ X1+mixture(X2), hazard=\"3-quant-splines\",hazardtype=\"PH\",ng=3,data=data_lcmm, B=c(0.7576, 0.4095, -0.8232, -0.2737, 0, 0, 0, 0.2838, -0.6338,  2.6324, 5.3963, -0.0273, 1.3979, 0.8168, -15.041, 10.164, 10.2394,  11.5109, -2.6219, -0.4553, -0.6055, 1.473, -0.0383, 0.8512, 0.0389,  0.2624, 1.4982))  # fit plot(m3,which=\"fit\",var.time=\"Time\",bty=\"l\") plot(m3,which=\"fit\",var.time=\"Time\",marg=FALSE,bty=\"l\",ylim=c(0,15))   # Class-specific predicted baseline risk & survival functions in the  # 3-class model retained (for the reference value of the covariates)  plot(m3,which=\"baselinerisk\",bty=\"l\") plot(m3,which=\"baselinerisk\",ylim=c(0,5),bty=\"l\") plot(m3,which=\"survival\",bty=\"l\") }"},{"path":"/reference/plot.pred.accuracy.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots — plot.Diffepoce","title":"Plots — plot.Diffepoce","text":"function displays plots related predictive accuracy functions: epoce Diffepoce.","code":""},{"path":"/reference/plot.pred.accuracy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots — plot.Diffepoce","text":"","code":"# S3 method for Diffepoce plot(x, ...)  # S3 method for epoce plot(x, ...)"},{"path":"/reference/plot.pred.accuracy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots — plot.Diffepoce","text":"x object inheriting classes epoce Diffepoce ... parameters passed plotting functions","code":""},{"path":"/reference/plot.pred.accuracy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots — plot.Diffepoce","text":"Returns plots related epoce Diffepoce","code":""},{"path":"/reference/plot.pred.accuracy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plots — plot.Diffepoce","text":"functions apply moment multiple causes event (competing risks). epoce objects, function displays EPOCE estimate (either MPOL CVPOL) according time prediction.  Diffepoce objects, plot displays difference EPOCE estimates (either MPOL CVPOL) 95% tracking interval two joint latent class models","code":""},{"path":[]},{"path":"/reference/plot.pred.accuracy.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plots — plot.Diffepoce","text":"Cecile Proust-Lima Viviane Philipps","code":""},{"path":"/reference/plot.pred.accuracy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots — plot.Diffepoce","text":"","code":"if (FALSE) { # estimation of the joint latent class model m3 <- Jointlcmm(fixed= Ydep1~Time*X1,mixture=~Time,random=~Time, classmb=~X3,subject='ID',survival = Surv(Tevent,Event)~X1+mixture(X2), hazard=\"3-quant-splines\",hazardtype=\"PH\",ng=3,data=data_lcmm, B=c(0.7667, 0.4020, -0.8243, -0.2726, 0.0000, 0.0000, 0.0000, 0.3020, -0.6212, 2.6247, 5.3139, -0.0255, 1.3595, 0.8172, -11.6867, 10.1668, 10.2355, 11.5137, -2.6209, -0.4328, -0.6062, 1.4718, -0.0378, 0.8505, 0.0366, 0.2634, 1.4981)) # predictive accuracy of the model evaluated with EPOCE VecTime <- c(1,3,5,7,9,11,13,15) cvpl <- epoce(m3,var.time=\"Time\",pred.times=VecTime) summary(cvpl) plot(cvpl,bty=\"l\",ylim=c(0,2)) }"},{"path":"/reference/plot.predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot of predicted trajectories and link functions — plot.predict","title":"Plot of predicted trajectories and link functions — plot.predict","text":"function provides class-specific predicted trajectories stemmed hlme, lcmm, multlcmm Jointlcmm object.","code":""},{"path":"/reference/plot.predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot of predicted trajectories and link functions — plot.predict","text":"","code":"# S3 method for predictL plot(x, legend.loc = \"topright\", legend, add = FALSE, shades = FALSE, ...)  # S3 method for predictY plot(   x,   outcome = 1,   legend.loc = \"topright\",   legend,   add = FALSE,   shades = FALSE,   ... )  # S3 method for predictYcond plot(x, legend.loc = \"topleft\", legend, add = FALSE, shades = TRUE, ...)"},{"path":"/reference/plot.predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot of predicted trajectories and link functions — plot.predict","text":"x object inheriting classes predictL, predictY predictlink representing respectively predicted marginal mean trajectory latent process, predicted marginal mean trajectory longitudinal outcome, predicted link function fitted latent class model. legend.loc keyword position legend list \"bottomright\", \"bottom\", \"bottomleft\", \"left\", \"topleft\",\"top\", \"topright\", \"right\" \"center\". legend character expression appear legend. legend added, \"legend\" NULL. add logical indicating curves added existing plot. Default FALSE. shades logical indicating confidence intervals represented shades. Default FALSE, confidence intervals represented dotted lines. ... parameters passed plotting functions legend outcome predictY multivariate model fitted multlcmm , outcome consider.","code":""},{"path":[]},{"path":"/reference/plot.predict.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot of predicted trajectories and link functions — plot.predict","text":"Cecile Proust-Lima, Benoit Liquet Viviane Philipps","code":""},{"path":"/reference/plot.predict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot of predicted trajectories and link functions — plot.predict","text":"","code":"################# Prediction from linear latent class model ## fitted model m<-lcmm(Y~Time*X1,mixture=~Time,random=~Time,classmb=~X2+X3, subject='ID',ng=2,data=data_hlme,B=c(0.41,0.55,-0.18,-0.41, -14.26,-0.34,1.33,13.51,24.65,2.98,1.18,26.26,0.97)) ## newdata for predictions plot newdata<-data.frame(Time=seq(0,5,length=100), X1=rep(0,100),X2=rep(0,100),X3=rep(0,100)) plot(predictL(m,newdata,var.time=\"Time\"),legend.loc=\"right\",bty=\"l\")  ## data from the first subject for predictions plot firstdata<-data_hlme[1:3,] plot(predictL(m,firstdata,var.time=\"Time\"),legend.loc=\"right\",bty=\"l\")    if (FALSE) { ################# Prediction from a joint latent class model ## fitted model - see help of Jointlcmm function for details on the model m3 <- Jointlcmm(fixed= Ydep1~Time*X1,mixture=~Time,random=~Time, classmb=~X3,subject='ID',survival = Surv(Tevent,Event)~X1+mixture(X2), hazard=\"3-quant-splines\",hazardtype=\"PH\",ng=3,data=data_lcmm, B=c(0.7576, 0.4095, -0.8232, -0.2737, 0, 0, 0, 0.2838, -0.6338,  2.6324, 5.3963, -0.0273, 1.398, 0.8168, -15.041, 10.164, 10.2394,  11.5109, -2.6219, -0.4553, -0.6055, 1.473, -0.0383, 0.8512, 0.0389,  0.2624, 1.4982)) # class-specific predicted trajectories  #(with characteristics of subject ID=193) data <- data_lcmm[data_lcmm$ID==193,] plot(predictY(m3,newdata=data,var.time=\"Time\"),bty=\"l\") }"},{"path":"/reference/postprob.html","id":null,"dir":"Reference","previous_headings":"","what":"Posterior classification stemmed from a hlme, lcmm,\nmultlcmm or Jointlcmm estimation — postprob","title":"Posterior classification stemmed from a hlme, lcmm,\nmultlcmm or Jointlcmm estimation — postprob","text":"function provides informations posterior classification stemmed hlme, lcmm, multlcmm, Jointlcmm, mpjlcmm, externSurv externX object.","code":""},{"path":"/reference/postprob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Posterior classification stemmed from a hlme, lcmm,\nmultlcmm or Jointlcmm estimation — postprob","text":"","code":"postprob(x, threshold = c(0.7, 0.8, 0.9), ...)"},{"path":"/reference/postprob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Posterior classification stemmed from a hlme, lcmm,\nmultlcmm or Jointlcmm estimation — postprob","text":"x object inheriting classes hlme, lcmm, Jointlcmm multlcmm representing respectively fitted latent class linear mixed-effects model, general latent class mixed model, joint latent class model multivariate general latent class mixed model. threshold optional vector thresholds posterior probabilities ... arguments passed methods.  ignored function.","code":""},{"path":"/reference/postprob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Posterior classification stemmed from a hlme, lcmm,\nmultlcmm or Jointlcmm estimation — postprob","text":"list containing posterior classification, posterior classification table percentage subjects classified posterior probability given thresholds.","code":""},{"path":"/reference/postprob.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Posterior classification stemmed from a hlme, lcmm,\nmultlcmm or Jointlcmm estimation — postprob","text":"function provides number subjects classified posteriori latent class, percentage subjects classified posterior probability certain threshold, classification table contains mean posterior probability belonging latent class subjects classified latent classes. table aims evaluating quality posterior classification.  hlme, lcmm objects, posterior classification classification table derived posterior class-membership probabilities given vector repeated measures contained pprob output matrix. Jointlcmm object, first posterior classification classification table derived posterior class-membership probabilities given vector repeated measures time--event information (contained columns probYT1, probYT2, etc pprob output matrix). second posterior classification derived posterior class-membership probabilities given vector repeated measures (contained columns probY1, probY2, etc pprob output matrix).","code":""},{"path":"/reference/postprob.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Posterior classification stemmed from a hlme, lcmm,\nmultlcmm or Jointlcmm estimation — postprob","text":"function can used latent class mixed models joint latent class mixed models include least 2 latent classes","code":""},{"path":[]},{"path":"/reference/postprob.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Posterior classification stemmed from a hlme, lcmm,\nmultlcmm or Jointlcmm estimation — postprob","text":"Cecile Proust-Lima, Benoit Liquet Viviane Philipps","code":""},{"path":"/reference/postprob.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Posterior classification stemmed from a hlme, lcmm,\nmultlcmm or Jointlcmm estimation — postprob","text":"","code":"m<-lcmm(Y~Time*X1,mixture=~Time,random=~Time,classmb=~X2+X3, subject='ID',ng=2,data=data_hlme,B=c(0.41,0.55,-0.18,-0.41, -14.26,-0.34,1.33,13.51,24.65,2.98,1.18,26.26,0.97)) postprob(m) #>   #> Posterior classification:  #>   class1 class2 #> N     59     41 #> %     59     41 #>   #> Posterior classification table:  #>      --> mean of posterior probabilities in each class  #>        prob1 prob2 #> class1     1     0 #> class2     0     1 #>   #> Posterior probabilities above a threshold (%):  #>          class1 class2 #> prob>0.7    100    100 #> prob>0.8    100    100 #> prob>0.9    100    100 #>"},{"path":"/reference/predictClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Posterior classification and class-membership probabilities — predictClass","title":"Posterior classification and class-membership probabilities — predictClass","text":"function provides posterior classification posterior individual  class-membership probabilities external data.","code":""},{"path":"/reference/predictClass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Posterior classification and class-membership probabilities — predictClass","text":"","code":"predictClass(model, newdata, subject = NULL)"},{"path":"/reference/predictClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Posterior classification and class-membership probabilities — predictClass","text":"model object inheriting class hlme, lcmm,  Jointlcmm multlcmm representing general latent class mixed model. newdata data frame containing data predictions computed. data frame include least covariates listed model$Xnames2, outcome(s) grouping structure. Names match exactly. subject character specifying name grouping structure. NULL (default), model used.","code":""},{"path":"/reference/predictClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Posterior classification and class-membership probabilities — predictClass","text":"matrix 2+ng columns: grouping structure, predicted class ng posterior class-membership probabilities.","code":""},{"path":"/reference/predictClass.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Posterior classification and class-membership probabilities — predictClass","text":"Sasha Cuau, Viviane Philipps, Cecile Proust-Lima","code":""},{"path":"/reference/predictClass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Posterior classification and class-membership probabilities — predictClass","text":"","code":"if (FALSE) { library(NormPsy) paquid$normMMSE <- normMMSE(paquid$MMSE) paquid$age65 <- (paquid$age - 65)/10 m2b <- hlme(normMMSE ~ age65+I(age65^2)+CEP, random =~ age65+I(age65^2), subject = 'ID', data = paquid, ng = 2, mixture =~ age65+I(age65^2), B = c(0, 60, 40, 0, -4, 0, -10, 10, 212.869397, -216.421323,456.229910, 55.713775, -145.715516, 59.351000, 10.072221)) predictClass(m2b, newdata=paquid[1:6,]) }"},{"path":"/reference/predictL.html","id":null,"dir":"Reference","previous_headings":"","what":"Class-specific marginal predictions in the latent process scale for\nlcmm, Jointlcmm and multlcmm objects — predictL","title":"Class-specific marginal predictions in the latent process scale for\nlcmm, Jointlcmm and multlcmm objects — predictL","text":"function provides matrix containing class-specific predicted trajectories computed latent process scale, latent process underlying curvilinear outcome(s), profile covariates specified user. function applies lcmm multlcmm objects. function plot.predict provides directly plot class-specific predicted trajectories. function predictY provides class-specific predicted trajectories computed natural scale outcome(s).","code":""},{"path":"/reference/predictL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class-specific marginal predictions in the latent process scale for\nlcmm, Jointlcmm and multlcmm objects — predictL","text":"","code":"predictL(x, newdata, var.time, na.action = 1, confint = FALSE, ...)"},{"path":"/reference/predictL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class-specific marginal predictions in the latent process scale for\nlcmm, Jointlcmm and multlcmm objects — predictL","text":"x object inheriting class lcmm,multlcmm Jointlcmm representing (joint) (latent class) mixed model involving latent process estimated link function(s). newdata data frame containing data predictions computed. data frame include least covariates listed x$Xnames2. Names data frame exactly x$Xnames2 names covariates specified lcmm multlcmm calls. var.time character string containing name variable corresponds time data frame (x axis plot). na.action Integer indicating NAs managed. default 1 'na.omit'. alternative 2 'na.fail'. options 'na.pass' 'na.exclude' implemented current version. confint logical indicating confidence provided. Default FALSE. ... arguments passed methods.  ignored function.","code":""},{"path":"/reference/predictL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class-specific marginal predictions in the latent process scale for\nlcmm, Jointlcmm and multlcmm objects — predictL","text":"object class predictL values : - pred : matrix containing class-specific predicted values latent process scale, lower upper limits confidence intervals (calculated). - times : var.time variable newdata","code":""},{"path":[]},{"path":"/reference/predictL.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class-specific marginal predictions in the latent process scale for\nlcmm, Jointlcmm and multlcmm objects — predictL","text":"Cecile Proust-Lima, Viviane Philipps","code":""},{"path":"/reference/predictL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class-specific marginal predictions in the latent process scale for\nlcmm, Jointlcmm and multlcmm objects — predictL","text":"","code":"#### Prediction from a 2-class model with a Splines link function if (FALSE) { ## fitted model m<-lcmm(Ydep2~Time*X1,mixture=~Time,random=~Time,classmb=~X2+X3, subject='ID',ng=2,data=data_lcmm,link=\"splines\",B=c( -0.175,      -0.191,       0.654,      -0.443,  -0.345,      -1.780,       0.913,       0.016,   0.389,       0.028,       0.083,      -7.349,   0.722,       0.770,       1.376,       1.653,   1.640,       1.285)) summary(m) ## predictions for times from 0 to 5 for X1=0 newdata<-data.frame(Time=seq(0,5,length=100), X1=rep(0,100),X2=rep(0,100),X3=rep(0,100)) predictL(m,newdata,var.time=\"Time\") ## predictions for times from 0 to 5 for X1=1 newdata$X1 <- 1 predictY(m,newdata,var.time=\"Time\") }"},{"path":"/reference/predictRE.html","id":null,"dir":"Reference","previous_headings":"","what":"Predictions of the random-effects — predictRE","title":"Predictions of the random-effects — predictRE","text":"function computes predicted values random effects given observed data provided input. multiple latent classes, predictions averaged  classes using posterior class-membership probabilities.","code":""},{"path":"/reference/predictRE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predictions of the random-effects — predictRE","text":"","code":"predictRE(model, newdata, subject = NULL)"},{"path":"/reference/predictRE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predictions of the random-effects — predictRE","text":"model object inheriting class hlme, lcmm,  Jointlcmm multlcmm representing general latent class mixed model. newdata data frame containing data predictions computed.  data frame include least covariates listed model$Xnames2,  marker(s) values grouping structure. Names match exactly names  variables model. subject character specifying name grouping structure. NULL (default), model used.","code":""},{"path":"/reference/predictRE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predictions of the random-effects — predictRE","text":"matrix containing grouping structure predicted random-effects.","code":""},{"path":"/reference/predictRE.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Predictions of the random-effects — predictRE","text":"Sasha Cuau, Viviane Philipps, Cecile Proust-Lima","code":""},{"path":"/reference/predictRE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predictions of the random-effects — predictRE","text":"","code":"if (FALSE) { library(NormPsy) paquid$normMMSE <- normMMSE(paquid$MMSE) paquid$age65 <- (paquid$age - 65)/10 m2b <- hlme(normMMSE ~ age65+I(age65^2)+CEP, random =~ age65+I(age65^2), subject = 'ID', data = paquid, ng = 2, mixture =~ age65+I(age65^2), B = c(0, 60, 40, 0, -4, 0, -10, 10, 212.869397, -216.421323,456.229910, 55.713775, -145.715516, 59.351000, 10.072221)) predictRE(m2b,newdata=paquid[1:6,]) }"},{"path":"/reference/predictY.html","id":null,"dir":"Reference","previous_headings":"","what":"Predictions (marginal and possibly subject-specific in some cases) of a hlme,\nlcmm, multlcmm or Jointlcmm object in the natural scale\nof the longitudinal outcome(s) computed from a profile of covariates (marginal) or\nindividual data (subject specific in case of hlme). — predictY","title":"Predictions (marginal and possibly subject-specific in some cases) of a hlme,\nlcmm, multlcmm or Jointlcmm object in the natural scale\nof the longitudinal outcome(s) computed from a profile of covariates (marginal) or\nindividual data (subject specific in case of hlme). — predictY","text":"hlme Jointlcmm objects, function computes predicted values longitudinal marker (latent class ng>1) specified profile covariates.  lcmm multlcmm objects, function computes predicted values natural scale outcomes specified profile covariates. linear threshold links, predicted values computed analytically. splines Beta links, Gauss-Hermite Monte-Carlo integration used numerically compute predictions. addition, type link function, confidence bands (median) can computed Monte Carlo approximation posterior distribution predicted values.","code":""},{"path":"/reference/predictY.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predictions (marginal and possibly subject-specific in some cases) of a hlme,\nlcmm, multlcmm or Jointlcmm object in the natural scale\nof the longitudinal outcome(s) computed from a profile of covariates (marginal) or\nindividual data (subject specific in case of hlme). — predictY","text":"","code":"# S3 method for Jointlcmm predictY(   x,   newdata,   var.time,   methInteg = 0,   nsim = 20,   draws = FALSE,   ndraws = 2000,   na.action = 1,   ... )  # S3 method for hlme predictY(   x,   newdata,   var.time,   draws = FALSE,   na.action = 1,   marg = TRUE,   subject = NULL,   ... )  # S3 method for lcmm predictY(   x,   newdata,   var.time,   methInteg = 0,   nsim = 20,   draws = FALSE,   ndraws = 2000,   na.action = 1,   ... )  predictY(x, newdata, var.time, ...)  # S3 method for multlcmm predictY(   x,   newdata,   var.time,   methInteg = 0,   nsim = 20,   draws = FALSE,   ndraws = 2000,   na.action = 1,   ... )"},{"path":"/reference/predictY.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predictions (marginal and possibly subject-specific in some cases) of a hlme,\nlcmm, multlcmm or Jointlcmm object in the natural scale\nof the longitudinal outcome(s) computed from a profile of covariates (marginal) or\nindividual data (subject specific in case of hlme). — predictY","text":"x object inheriting class lcmm, hlme, Jointlcmm multlcmm representing general latent class mixed model. newdata data frame containing data predictions computed. data frame include least covariates listed x$Xnames2. Names data frame exactly x$Xnames2 names covariates specified lcmm, hlme, Jointlcmm multlcmm calls. hlme object marg=FALSE, grouping structure values outcome also specified. var.time character string containing name variable corresponds time data frame (x axis plot). methInteg optional integer specifying type numerical integration required predictions splines Beta link functions. Value 0 (default) specifies Gauss-Hermite integration rapid neglects correlation predicted values (presence random-effects). Value 1 refers Monte-Carlo integration slower correctly account correlation predicted values. nsim lcmm, multlcmm Jointlcmm object ; optional number points used numerical integration splines Beta link functions. methInteg=0, nsim chosen among following values: 5, 7, 9, 15, 20, 30, 40 50 (nsim=20 default). methInteg=1, nsim relatively important (200). draws optional boolean specifying whether median confidence bands predicted values computed (TRUE) - whatever type link function. lcmm, multlcmm Jointlcmm object, Monte Carlo approximation posterior distribution predicted values computed median, 2.5% 97.5% percentiles given. Otherwise, predicted values computed point estimate. default, draws=FALSE. ndraws lcmm, multlcmm Jointlcmm object ; draws=TRUE, ndraws specifies number draws generated approximate posterior distribution predicted values. default, ndraws=2000. na.action Integer indicating NAs managed. default 1 'na.omit'. alternative 2 'na.fail'. options 'na.pass' 'na.exclude' implemented current version. ... arguments passed methods.  argument 'median' used, ignored. 'median' logical indicating whether median computed.  default, mean value computed. marg Optional boolean specifying whether predictions marginal (default) subject-specific (marg=FALSE). marge=FALSE  works hlme objects. subject hlme object marg=FALSE , character specifying name grouping strucuture. NULL (default), model (argument x) used.","code":""},{"path":"/reference/predictY.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predictions (marginal and possibly subject-specific in some cases) of a hlme,\nlcmm, multlcmm or Jointlcmm object in the natural scale\nof the longitudinal outcome(s) computed from a profile of covariates (marginal) or\nindividual data (subject specific in case of hlme). — predictY","text":"object class predictY values : - pred : matrix rows (number order) newdata. hlme objects lcmm Jointlcmm draws=FALSE, returns matrix ng columns corresponding ng class-specific vectors predicted values computed point estimate objects class lcmm Jointlcmm draws=TRUE, returns matrix ng*3 columns representing ng class-specific 50%, 2.5% 97.5% percentiles approximated posterior distribution class-specific predicted values. objects class multlcmm draws=FALSE, returns matrix ng+1 columns: first column indicates name outcome predicted ng subsequent columns correspond ng class-specific vectors predicted values computed point estimate objects class multlcmm draws=TRUE, returns matrix ng*3+1 columns: first column indicates name outcome predicted ng*3 subsequent columns correspond ng class-specific 50%, 2.5% 97.5% percentiles approximated posterior distribution class-specific predicted values. objects class hlme marg=FALSE, returns matrix 2+ng columns : grouping structure, subject-specific predictions (pred_ss) averaged  classes class-specific subject-specific predictions (number latent class: pred_ss_1,pred_ss_2,...) - times : var.time variable newdata","code":""},{"path":[]},{"path":"/reference/predictY.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Predictions (marginal and possibly subject-specific in some cases) of a hlme,\nlcmm, multlcmm or Jointlcmm object in the natural scale\nof the longitudinal outcome(s) computed from a profile of covariates (marginal) or\nindividual data (subject specific in case of hlme). — predictY","text":"Cecile Proust-Lima, Viviane Philipps, Sasha Cuau","code":""},{"path":[]},{"path":"/reference/predictYcond.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional predictions of a lcmm, multlcmm or Jointlcmm\nobject in the natural scale of the longitudinal outcome(s) for specified\nlatent process values. — predictYcond","title":"Conditional predictions of a lcmm, multlcmm or Jointlcmm\nobject in the natural scale of the longitudinal outcome(s) for specified\nlatent process values. — predictYcond","text":"function computes predicted values longitudinal markers natural scale specified values latent process. splines Beta links, Gauss-Hermite integration used numerically compute predictions. addition, type link function, confidence bands (median) can computed Monte Carlo approximation posterior distribution predicted values.","code":""},{"path":"/reference/predictYcond.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditional predictions of a lcmm, multlcmm or Jointlcmm\nobject in the natural scale of the longitudinal outcome(s) for specified\nlatent process values. — predictYcond","text":"","code":"predictYcond(   x,   lprocess,   condRE_Y = FALSE,   nsim = 200,   draws = FALSE,   ndraws = 2000,   ... )"},{"path":"/reference/predictYcond.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditional predictions of a lcmm, multlcmm or Jointlcmm\nobject in the natural scale of the longitudinal outcome(s) for specified\nlatent process values. — predictYcond","text":"x object inheriting class lcmm,  Jointlcmm multlcmm representing general latent class mixed model. lprocess numeric vector containing latent process values predictions computed. condRE_Y multlcmm objects , logical indicating predictions conditional outcome specific random effects . Default FALSE, predictions marginal random effects. nsim number points used numerical integration (Monte-Carlo) splines Beta link functions. nsim relatively important (nsim=200 default). draws optional boolean specifying whether median confidence bands predicted values computed (TRUE) - whatever type link function. Monte Carlo approximation posterior distribution predicted values computed median, 2.5% 97.5% percentiles given. Otherwise, predicted values computed point estimate. default, draws=FALSE. ndraws draws=TRUE, ndraws specifies number draws generated approximate posterior distribution predicted values. default, ndraws=2000. ... arguments passed methods.  ignored function.","code":""},{"path":"/reference/predictYcond.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditional predictions of a lcmm, multlcmm or Jointlcmm\nobject in the natural scale of the longitudinal outcome(s) for specified\nlatent process values. — predictYcond","text":"object class predictYcond values : - pred :  draws=FALSE, returns matrix 3 columns : first column indicates name outcome, second indicates latent process value last computed prediction. draws=TRUE, returns matrix 5 columns : name outcome, latent process value 50%, 2.5% 97.5% percentiles approximated posterior distribution predicted values. - object : model predictions computed.","code":""},{"path":[]},{"path":"/reference/predictYcond.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Conditional predictions of a lcmm, multlcmm or Jointlcmm\nobject in the natural scale of the longitudinal outcome(s) for specified\nlatent process values. — predictYcond","text":"Cecile Proust-Lima, Viviane Philipps","code":""},{"path":"/reference/predictYcond.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conditional predictions of a lcmm, multlcmm or Jointlcmm\nobject in the natural scale of the longitudinal outcome(s) for specified\nlatent process values. — predictYcond","text":"","code":"if (FALSE) { m12 <- lcmm(Ydep2~Time+I(Time^2),random=~Time,subject='ID',ng=1, data=data_lcmm,link=\"3-equi-splines\") predm12 <- predictYcond(m12,lprocess=seq(-8,2,length.out=100),draws=TRUE) plot(predm12) }"},{"path":"/reference/predictlink.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence intervals for the estimated link functions from lcmm,\nJointlcmm and multlcmm — predictlink","title":"Confidence intervals for the estimated link functions from lcmm,\nJointlcmm and multlcmm — predictlink","text":"function provides 95% confidence intervals around estimated transformation given estimlink attribute lcmm, Jointlcmm multlcmm objects. can also used evaluate link functions values given attribute estimlink lcmm, Jointlcmm multlcmm object.","code":""},{"path":"/reference/predictlink.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence intervals for the estimated link functions from lcmm,\nJointlcmm and multlcmm — predictlink","text":"","code":"predictlink(x, ndraws, Yvalues, ...)"},{"path":"/reference/predictlink.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence intervals for the estimated link functions from lcmm,\nJointlcmm and multlcmm — predictlink","text":"x object inheriting classes lcmm, Jointlcmm multlcmm. ndraws number draws generated approximate posterior distribution transformed values. default, ndraws=2000. Yvalues vector (lcmm Jointlcmm object) matrix (multlcmm object) containing values compute transformation(s). Default values x$estimlink. ... parameters (ignored)","code":""},{"path":"/reference/predictlink.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence intervals for the estimated link functions from lcmm,\nJointlcmm and multlcmm — predictlink","text":"object class predictlink values : - pred : lcmm Jointlcmm object, data frame containing values transformation evaluated, transformed values lower upper limits confidence intervals (ndraws>0). multlcmm object, data frame containing indicator outcome, values transformations evaluated,transformed values lower upper limits confidence intervals (ndraws>0). - object : object link function predicted","code":""},{"path":[]},{"path":"/reference/predictlink.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Confidence intervals for the estimated link functions from lcmm,\nJointlcmm and multlcmm — predictlink","text":"Cecile Proust-Lima Viviane Philipps","code":""},{"path":"/reference/predictlink.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence intervals for the estimated link functions from lcmm,\nJointlcmm and multlcmm — predictlink","text":"","code":"if (FALSE) {  ## Univariate mixed model with splines link funciton m14<-lcmm(Ydep2~Time+I(Time^2),random=~Time,subject='ID',ng=1, data=data_lcmm,link=\"5-manual-splines\",intnodes=c(10,20,25), B=c(-0.89255, -0.09715, 0.56335, 0.21967, 0.61937, -7.90261, 0.75149,  -1.22357, 1.55832, 1.75324, 1.33834, 1.0968))  ##Transformed values of several scores and their confidence intervals transf.m14 <- predictlink(m14,ndraws=2000,Yvalues=c(0,1,7:30)) plot(transf.m14)   ## Multivariate mixed model with splines link functions m1 <- multlcmm(Ydep1+Ydep2~1+Time*X2+contrast(X2),random=~1+Time, subject=\"ID\",randomY=TRUE,link=c(\"4-manual-splines\",\"3-manual-splines\"), intnodes=c(8,12,25),data=data_lcmm, B=c(-1.071, -0.192,  0.106, -0.005, -0.193,  1.012,  0.870,  0.881,   0.000,  0.000, -7.520,  1.401,  1.607 , 1.908,  1.431,  1.082,  -7.528,  1.135 , 1.454 , 2.328, 1.052)) ##Confidence intervals for the transformed values (given in m1$estimlink) transf.m1 <- predictlink(m1,ndraws=200) plot(transf.m1) }"},{"path":"/reference/print.lcmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Brief summary of a hlme, lcmm,\nJointlcmm,multlcmm, epoce or Diffepoce objects — print.lcmm","title":"Brief summary of a hlme, lcmm,\nJointlcmm,multlcmm, epoce or Diffepoce objects — print.lcmm","text":"function provides brief summary hlme, lcmm,multlcmm Jointlcmm estimations, epoce Diffepoce computations.","code":""},{"path":"/reference/print.lcmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Brief summary of a hlme, lcmm,\nJointlcmm,multlcmm, epoce or Diffepoce objects — print.lcmm","text":"","code":"# S3 method for lcmm print(x, ...)"},{"path":"/reference/print.lcmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Brief summary of a hlme, lcmm,\nJointlcmm,multlcmm, epoce or Diffepoce objects — print.lcmm","text":"x object inheriting classes hlme, lcmm, multlcmm fitted latent class mixed-effects, class Jointlcmm, codempjclmm Joint latent class mixed model epoce predictive accuracy computations externSurv, externX secondary regression models. ... arguments passed methods.  ignored function.","code":""},{"path":[]},{"path":"/reference/print.lcmm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Brief summary of a hlme, lcmm,\nJointlcmm,multlcmm, epoce or Diffepoce objects — print.lcmm","text":"Cecile Proust-Lima, Viviane Philipps, Amadou Diakite Benoit Liquet","code":""},{"path":"/reference/simdataHADS.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated dataset simdataHADS — simdataHADS","title":"Simulated dataset simdataHADS — simdataHADS","text":"data mimic PREDIALA study described analyzed Proust-Lima et al (2021 -  https://arxiv.org/abs/2109.13064).  study aims describe trajectories depressive symptomatology patients  suffering end-stage renal disease registered renal transplant waiting list. Repeated measures anxiety depression (HADS) simulated different times measurement 561 subjects. Four time-independent covariates also generated:  group (dialyzed pre-emptive), sex age entry cohort time  waiting list entry cohort.","code":""},{"path":"/reference/simdataHADS.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated dataset simdataHADS — simdataHADS","text":"data frame 1140 observations following 13 variables. grp group 0=dialyzed 1=preemptive sex sex 0=woman 1=man age age entry cohort hads_2 item 2 HADS measuring depression hads_4 item 4 HADS measuring depression hads_6 item 6 HADS measuring depression hads_8 item 8 HADS measuring depression hads_10 item 10 HADS measuring depression hads_12 item 12 HADS measuring depression hads_14 item 14 HADS measuring depression ID subject identification number time time measurement time_entry time waiting list entry cohort","code":""},{"path":"/reference/simulate.lcmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Data simulation according to models from lcmm package — simulate.lcmm","title":"Data simulation according to models from lcmm package — simulate.lcmm","text":"function simulates sample according model estimated hlme, lcmm, multlcmm Jointlcmm functions.","code":""},{"path":"/reference/simulate.lcmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data simulation according to models from lcmm package — simulate.lcmm","text":"","code":"# S3 method for lcmm simulate(   object,   nsim,   seed,   times,   tname = NULL,   n,   Xbin = NULL,   Xcont = NULL,   entry = 0,   dropout = NULL,   pMCAR = 0,   ... )"},{"path":"/reference/simulate.lcmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data simulation according to models from lcmm package — simulate.lcmm","text":"object object class hlme, lcmm, multlcmm Jointlcmm nsim used (compatibility stats::simulate). function simulates one sample seed random seed times either data frame 2 columns containing IDs measurement times, vector length 4 specifying minimal maximum measurement times, spacing 2 consecutive visits margin around spacing tname name variable representing measurement times object. Default second column's name times data frame, object$var.time otherwise. n number subjects simulate. Required times data frame. Xbin optional named list giving probabilities binary covariates simulate. list's names match binary covariate's names used object. Xcont optional named list giving mean standard deviation Gaussian covariates simulate. list's names match continuous covariate's names used object. entry expression simulate subject's entry time. Default 0. dropout expression simulate subject's time dropout. Default NULL, dropout considered. pMCAR optional numeric giving observation's probability missing. Default 0, missing data introduced. ... additionnal options. None used yet.","code":""},{"path":"/reference/simulate.lcmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data simulation according to models from lcmm package — simulate.lcmm","text":"data frame one line per observation one column per variable. Variables appears following order : subject id, measurement time, entry time, binary covariates, continuous covariates, longitudinal outcomes, latent class, entry time, survival time, event indicator.","code":""},{"path":"/reference/simulate.lcmm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Data simulation according to models from lcmm package — simulate.lcmm","text":"Viviane Philipps Cecile Proust-Lima","code":""},{"path":"/reference/simulate.lcmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data simulation according to models from lcmm package — simulate.lcmm","text":"","code":"## estimation of a 2 classes mixed model m2 <- hlme(Y~Time*X1,mixture=~Time,random=~Time,classmb=~X2+X3,subject='ID',          ng=2,data=data_hlme,B=c(0.11,-0.74,-0.07,20.71,                                  29.39,-1,0.13,2.45,-0.29,4.5,0.36,0.79,0.97))  ## simulate according to model m2 with same number of subjects and ## same measurement times as in data_lcmm. Binary covariates X1 and X2 are simulated ## according to a Bernoulli distribution with probability p=0.5, continuous covariate ## X3 is simulated according to a Gaussian distribution with mean=1 and sd=1 : dsim1 <- simulate(m2, times=data_hlme[,c(\"ID\",\"Time\")],                   Xbin=list(X1=0.5, X2=0.5), Xcont=list(X3=c(1,1)))  ## simulate a dataset of 300 subjects according to the same model ## with new observation times, equally spaced and ranging from 0 to 3 : dsim2 <- simulate(m2, times=c(0,3,0.5,0), n=300, tname=\"Time\",                   Xbin=list(X1=0.5, X2=0.5), Xcont=list(X3=c(1,1)))"},{"path":"/reference/summary.lcmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of a hlme, lcmm, Jointlcmm, multlcmm,\nmpjlcmm, externSurv, externX,\nepoce or Diffepoce objects — summary.lcmm","title":"Summary of a hlme, lcmm, Jointlcmm, multlcmm,\nmpjlcmm, externSurv, externX,\nepoce or Diffepoce objects — summary.lcmm","text":"function provides summary hlme, lcmm, multlcmm Jointlcmm estimations, epoce Diffepoce computations.","code":""},{"path":"/reference/summary.lcmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of a hlme, lcmm, Jointlcmm, multlcmm,\nmpjlcmm, externSurv, externX,\nepoce or Diffepoce objects — summary.lcmm","text":"","code":"# S3 method for lcmm summary(object, ...)"},{"path":"/reference/summary.lcmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of a hlme, lcmm, Jointlcmm, multlcmm,\nmpjlcmm, externSurv, externX,\nepoce or Diffepoce objects — summary.lcmm","text":"object object inheriting classes hlme, lcmm, multlcmm fitted latent class mixed-effects, class Jointlcmm, mpjlcmm Joint latent class mixed model epoce Diffepoce predictive accuracy computations externSurv, externX secondary regression models. ... arguments passed methods.  ignored function.","code":""},{"path":"/reference/summary.lcmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of a hlme, lcmm, Jointlcmm, multlcmm,\nmpjlcmm, externSurv, externX,\nepoce or Diffepoce objects — summary.lcmm","text":"epoce Diffepoce objects, returns NULL. hlme, lcmm, Jointlcmm multlcmm returns also matrix containing fixed effect estimates longitudinal model, standard errors, Wald statistics p-values","code":""},{"path":[]},{"path":"/reference/summary.lcmm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary of a hlme, lcmm, Jointlcmm, multlcmm,\nmpjlcmm, externSurv, externX,\nepoce or Diffepoce objects — summary.lcmm","text":"Cecile Proust-Lima, Viviane Philipps, Amadou Diakite Benoit Liquet","code":""},{"path":"/reference/summaryplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of models — summaryplot","title":"Summary of models — summaryplot","text":"function provides plot summarizing results different models fitted hlme, lcmm, multlcmm, Jointlcmm, mpjlcmm externVar.","code":""},{"path":"/reference/summaryplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of models — summaryplot","text":"","code":"summaryplot(   m1,   ...,   which = c(\"BIC\", \"entropy\", \"ICL\"),   mfrow = c(1, length(which)),   xaxis = \"G\" )"},{"path":"/reference/summaryplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of models — summaryplot","text":"m1 object class hlme, lcmm, multlcmm, Jointlcmm, mpjlcmm, externVar externVar. ... arguments, particular objects class hlme, lcmm, multlcmm, Jointlcmm mpjlcmm, graphical parameters. character vector indicating results plotted. Possible values \"loglik\", \"conv\", \"npm\", \"AIC\", \"BIC\", \"SABIC\", \"entropy\", \"ICL\", \"ICL1\", \"ICL2\". mfrow multiple plots, number rows columns split graphical device. Default one line length() columns. xaxis abscissa plot. Default \"G\", number latent classes.","code":""},{"path":"/reference/summaryplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary of models — summaryplot","text":"Can reported usual criteria used assess fit clustering  data:  - maximum log-likelihood L (higher better)  - number parameters P, number classes G, convergence criterion (1 = converged)  - AIC (lower better) computed -2L+2P   - BIC (lower better) computed -2L+ P log(N) N number subjects  - SABIC (lower better) computed -2L+ P log((N+2)/24)  - Entropy (closer one better) computed 1-sum[pi_ig*log(pi_ig)]/(N*log(G))    pi_ig posterior probability subject belongs class g  - ICL (lower better) computed two ways : ICL1 = BIC - sum[pi_ig*log(pi_ig)]    ICL2 = BIC - 2*sum(log(max(pi_ig)), max taken classes subject.  -","code":""},{"path":[]},{"path":"/reference/summaryplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary of models — summaryplot","text":"Sasha Cuau, Viviane Philipps, Cecile Proust-Lima","code":""},{"path":"/reference/summaryplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary of models — summaryplot","text":"","code":"if (FALSE) { library(NormPsy) paquid$normMMSE <- normMMSE(paquid$MMSE) paquid$age65 <- (paquid$age - 65)/10 m1 <- hlme(normMMSE~age65+I(age65^2)+CEP, random=~age65+I(age65^2), subject='ID', data=paquid) m2 <- hlme(normMMSE~age65+I(age65^2)+CEP, random=~age65+I(age65^2), subject='ID', data=paquid, ng = 2, mixture=~age65+I(age65^2), B=m1) m3g <- gridsearch(hlme(normMMSE~age65+I(age65^2)+CEP, random=~age65+I(age65^2), subject='ID', data=paquid, ng=3, mixture=~age65+I(age65^2)), rep=100, maxiter=30, minit=m1) summaryplot(m1, m2, m3g, which=c(\"BIC\",\"entropy\",\"ICL\"),bty=\"l\",pch=20,col=2) }"},{"path":"/reference/summarytable.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of models — summarytable","title":"Summary of models — summarytable","text":"function provides table summarizing results different models fitted hlme, lcmm, multlcmm, Jointlcmm, mpjlcmm externVar.","code":""},{"path":"/reference/summarytable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of models — summarytable","text":"","code":"summarytable(   m1,   ...,   which = c(\"G\", \"loglik\", \"npm\", \"BIC\", \"%class\"),   display = TRUE )"},{"path":"/reference/summarytable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of models — summarytable","text":"m1 object class hlme, lcmm, multlcmm,  Jointlcmm, mpjlcmm, externVar externVar. ... arguments, particular objects class hlme, lcmm, multlcmm, Jointlcmm mpjlcmm. character vector indicating results returned. Possible values \"G\", \"loglik\", \"conv\", \"npm\", \"AIC\", \"BIC\", \"SABIC\", \"entropy\", \"ICL\", \"ICL1\", \"ICL2\", \"%class\". display logical indicating whether table printed (default) (display=FALSE)","code":""},{"path":"/reference/summarytable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of models — summarytable","text":"matrix giving model values requested indexes. default, number latent classes, log-likelihood, number parameters, BIC posterior probability latent classes.","code":""},{"path":"/reference/summarytable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary of models — summarytable","text":"Can reported usual criteria used assess fit clustering  data:  - maximum log-likelihood L (higher better)  - number parameters P, number classes G, convergence criterion (1 = converged)  - AIC (lower better) computed -2L+2P   - BIC (lower better) computed -2L+ P log(N) N number subjects  - SABIC (lower better) computed -2L+ P log((N+2)/24)  - Entropy (closer one better) computed two ways : ICL1 = 1-sum[pi_ig*log(pi_ig)]/(N*log(G))    pi_ig posterior probability subject belongs class g  - ICL (lower better) computed two ways : ICL1 = BIC - sum[pi_ig*log(pi_ig)]    ICL2 = BIC - 2*sum(log(max(pi_ig)), max taken classes subject.  -","code":""},{"path":[]},{"path":"/reference/summarytable.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summary of models — summarytable","text":"Cecile Proust-Lima, Viviane Philipps","code":""},{"path":"/reference/update.mpjlcmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Update the longitudinal submodels — update.mpjlcmm","title":"Update the longitudinal submodels — update.mpjlcmm","text":"function updates longitudinal submodels mpjlcmm object injecting estimated parameters variances hlme/lcmm/multlcmm model used define multi-process joint model. (uni-process) models specified mpjlcmm call returned, updated outputs best, V, conv, cholesky, pred, predRE, predRE_Y, pprob. postfit functions (plots, predictions, ...) can called updated hlme/lcmm/multlcmm models. See mpjlcmm's help page examples.","code":""},{"path":"/reference/update.mpjlcmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update the longitudinal submodels — update.mpjlcmm","text":"","code":"# S3 method for mpjlcmm update(object, ...)"},{"path":"/reference/update.mpjlcmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update the longitudinal submodels — update.mpjlcmm","text":"object estimated mpjlcmm model ... used","code":""},{"path":"/reference/update.mpjlcmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update the longitudinal submodels — update.mpjlcmm","text":"list hlme/lcmm/multlcmm models. models appear order specified call mpjlcmm function.","code":""},{"path":"/reference/xclass.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross classifications — xclass","title":"Cross classifications — xclass","text":"function crosses posterior classifications two estimated models","code":""},{"path":"/reference/xclass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross classifications — xclass","text":"","code":"xclass(m1, m2)"},{"path":"/reference/xclass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross classifications — xclass","text":"m1 object inheriting classes hlme, lcmm, multlcmm, Jointlcmm, mpjlcmm externVar m2 object inheriting classes hlme, lcmm, multlcmm, Jointlcmm, mpjlcmm externVar","code":""},{"path":"/reference/xclass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross classifications — xclass","text":"contingency table two classifications","code":""},{"path":"/reference/xclass.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cross classifications — xclass","text":"Viviane Philipps Cecile Proust-Lima","code":""},{"path":"/reference/xclass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cross classifications — xclass","text":"","code":"## Estimation of the models m2 <- hlme(Y~Time*X1,mixture=~Time,random=~Time,classmb=~X2+X3,subject='ID',ng=2, data=data_hlme,B=c(0.11,-0.74,-0.07,20.71,29.39,-1,0.13,2.45,-0.29,4.5,0.36,0.79,0.97)) m3 <- hlme(fixed = Y ~ Time * X1, mixture = ~Time, random = ~Time,subject = \"ID\", classmb = ~X2 + X3, ng = 3, data = data_hlme,B=c(-0.21, 0.31, -2.11, -0.81, -0.24, -0.18, 25.4, 20.09, 30.18, -0.43, -1.1, 0.25, 2.37, -0.29, 2.34, 0.03, 0.74, 0.97))  ## Compare the classifications xclass(m2,m3) #>     #>      1  2  3 #>   1  7 39  0 #>   2  9  0 45 # The 39 subjects in class 2 of m3 come from class 1 of m2. # In the same way, all the subjects in class 3 come from class 2 of m2. # Class 1 of m3 mixes subject from class 1 and class 2 of m2."},{"path":"/news/index.html","id":"changes-in-version-2-1-0-2023-10-06","dir":"Changelog","previous_headings":"","what":"Changes in Version 2.1.0 (2023-10-06) :","title":"Changes in Version 2.1.0 (2023-10-06) :","text":"new function externVar perform secondary regression analysis estimation primary latent class model new argument pprior hlme, lcmm, multlcmm Jointlcmm fix probability belong latent class packages survival, parallel, mvtnorm, randtoolbox, marqLevAlg, doParallel, numDeriv now listed Imports rather Depends subject-specific predictions multlcmm ordinal outcomes corrections mpjlcmm correction predictL without random effects correction epoce predictY.Jointlcmm use R’s random number generator Fortran codes use double precision rather real(kind=8) Fortran","code":""},{"path":"/news/index.html","id":"changes-in-version-2-0-2-2023-02-17","dir":"Changelog","previous_headings":"","what":"Changes in Version 2.0.2 (2023-02-17)","title":"Changes in Version 2.0.2 (2023-02-17)","text":"CRAN release: 2023-02-20 vignettes excepted introduction vignette (now renamed lcmm.Rmd) removed CRAN version long check time. now provide website https://CecileProust-Lima.github.io/lcmm","code":""},{"path":"/news/index.html","id":"changes-in-version-2-0-1-2023-02-01","dir":"Changelog","previous_headings":"","what":"Changes in Version 2.0.1 (2023-02-01) :","title":"Changes in Version 2.0.1 (2023-02-01) :","text":"new vignette Joint latent class model Jointlcmm new vignette Multivariate latent class model mpjlcmm new argument pprior hlme function new argument computeDiscrete lcmm function mpjlcmm can used mix hlme/lcmm/multlcmm objects summarytable summaryplot implement two versions ICL criterion new output levels estimating functions new output varRE hlme check convergence initial model using B=random() random parameters generated rmnvorm instead using Cholesky transformation permut, cuminc, VarCov, coef, vcov functions available mpjlcmm objects corrections mpjlcmm, especially competing risks correction residuals Jointlcmm models bug fixed using posfix partialH simultaneously correction likelihood mutlcmm models bug fixed predictClass predictRE using splines verbose=FALSE default","code":""},{"path":"/news/index.html","id":"changes-in-version-2-0-0-2022-06-15","dir":"Changelog","previous_headings":"","what":"Changes in Version 2.0.0 (2022-06-15) :","title":"Changes in Version 2.0.0 (2022-06-15) :","text":"CRAN release: 2022-06-24 model’s estimation now available parallel mode! optimization relies parallelized marqLevAlg R package. models latent classes (ng>1) require initial values hlme function now pprior argument mpjlcmm function can used without time--event model summary functions now shorten parameters names log-likelihood functions now exported bug fixed mpjlcmm random effect included bug fixed Jointlcmm Weibull hazards competing risks bug fixed permut used Jointlcmm objects competing risks correction outputs multlcmm models","code":""},{"path":"/news/index.html","id":"changes-in-version-1-9-4-2022-01-03","dir":"Changelog","previous_headings":"","what":"Changes in Version 1.9.4 (2022-01-03) :","title":"Changes in Version 1.9.4 (2022-01-03) :","text":"CRAN release: 2022-01-05 multlcmm function now available ordinal outcomes (link=“thresholds”) providing longitudinal IRT model! new vignette Dynamic IRT multlcmm new dataset simdataHADS new function simulate simulate dataset hlme, lcmm, multlcmm Jointlcmm model new functions ItemInfo plot.ItemInfo compute plot Fisher information ordinal outcomes new argument var.time hlme, lcmm, multlcmm Jointlcmm functions (used plot(, =“fit”); issue #91) fix CRAN error .vector.data.frame correction permut function (transformation parameters updated) add envir=parent.frame() permut gridsearch enable use functions parallel setting fix bug estimation functions infinite posterior probabilities gridsearch function now checks initial model converged (ie minit$conv=1) fixef ranef function now imported nlme package","code":""},{"path":"/news/index.html","id":"changes-in-version-1-9-3-2021-06-17","dir":"Changelog","previous_headings":"","what":"Changes in Version 1.9.3 (2021-06-17):","title":"Changes in Version 1.9.3 (2021-06-17):","text":"CRAN release: 2021-06-21 new functions predictClass, predictRE summaryplot ICL computation summaryplot use rmvnorm multlcmm generate random initial values maxiter used estimation final model gridsearch fix bug cuminc without covariates fix bug check numeric type argument subject tibbles fix bug predictY hlme object dataset named “x” fix bug update function model unestimated parameters (posfix) fix bug hlme posterior probabilities NA fix bug plot option =“fit” (observations maximum time measurement systematically included) correction outputs (ppi resid) mpjlcmm function","code":""},{"path":"/news/index.html","id":"changes-in-version-1-9-2","dir":"Changelog","previous_headings":"","what":"Changes in Version 1.9.2:","title":"Changes in Version 1.9.2:","text":"CRAN release: 2020-07-07 event variable joint models can logical bug fixed Jointlcmm prior missing data bug fixed mpjlcmm : initial values badly modified (least 3 dimensions) small bugs fixed predictY median=TRUE","code":""},{"path":"/news/index.html","id":"changes-in-version-1-9-1","dir":"Changelog","previous_headings":"","what":"Changes in Version 1.9.1:","title":"Changes in Version 1.9.1:","text":"CRAN release: 2020-06-03 parallel implementation gridsearch function. Thanks Raphael Peter suggestion. add condRE_Y option predictYcond add median options predictY corrections Jointlcmm, multlcmm mpjlcmm prior specified bugs fixed prediction functions small bugs fixed summary parameters estimated bug fixed VarExpl models including BM AR bug fixed update.mpjlcmm (variance matrix correct) manage infinite ppi hlme correction epsY type, URL vignettes, data statements position","code":""},{"path":"/news/index.html","id":"changes-in-version-1-8-1","dir":"Changelog","previous_headings":"","what":"Changes in Version 1.8.1:","title":"Changes in Version 1.8.1:","text":"CRAN release: 2019-06-26 new function mpjlcmm estimating joint latent class models multiple markers /latent processes various post-fit functions mpjlcmm objects new functions permut xclass creation vignettes, thanks Samy Youbi help variable subject must numeric plot(=‘fit’), time intervals depend subset add score test result summarytable bug fixed lcmm prior bug fixed Jointlcmm infinite score test bug fixed dynpred TimeDepVar","code":""},{"path":"/news/index.html","id":"changes-in-version-1-7-9","dir":"Changelog","previous_headings":"","what":"Changes in Version 1.7.9:","title":"Changes in Version 1.7.9:","text":"CRAN release: 2018-06-22 bug summary model converge bug dynpred draws=TRUE 1 horizon 1 landmark, o covariates included survival model, using factor bug Jointlcmm using B=m1 bug plot.predictY CI bug Jointlcmm B=random(m1)","code":""},{"path":"/news/index.html","id":"changes-in-version-1-7-8","dir":"Changelog","previous_headings":"","what":"Changes in Version 1.7.8:","title":"Changes in Version 1.7.8:","text":"CRAN release: 2017-05-29 shades plot.predictlink/L/Y subset plot, =“fit”","code":""},{"path":"/news/index.html","id":"changes-in-version-1-7-6-2016-12-12","dir":"Changelog","previous_headings":"","what":"Changes in Version 1.7.6 (2016-12-12):","title":"Changes in Version 1.7.6 (2016-12-12):","text":"CRAN release: 2016-12-13 Small bugs identified solved multlcmm","code":""},{"path":"/news/index.html","id":"changes-in-version-1-7-5-2016-03-15","dir":"Changelog","previous_headings":"","what":"Changes in Version 1.7.5 (2016-03-15):","title":"Changes in Version 1.7.5 (2016-03-15):","text":"CRAN release: 2016-03-16 Small bugs identified solved multlcmm, predictY predictL","code":""},{"path":"/news/index.html","id":"changes-in-version-1-7-4-2015-12-26","dir":"Changelog","previous_headings":"","what":"Changes in Version 1.7.4 (2015-12-26):","title":"Changes in Version 1.7.4 (2015-12-26):","text":"CRAN release: 2015-12-26 package uses lazydata automatically load datasets package. jlcmm mlcmm shortcuts functions Jointlcmm multlcmm, respectively. Function gridsearch provides automatic grid departures reducing odds converging towards local maximum. Initial values can randomly generated model 1 class (called m1 next example) option B=random(m1) hlme, lcmm, multlcmm Jointlcmm.","code":""},{"path":"/news/index.html","id":"changes-in-version-1-7-3-0-2015-10-23","dir":"Changelog","previous_headings":"","what":"Changes in Version 1.7.3.0 (2015-10-23):","title":"Changes in Version 1.7.3.0 (2015-10-23):","text":"CRAN release: 2015-10-23 Functions hlme, lcmm, multlcmm, Jointlcmm now include posfix option specify parameters estimated. Functions lcmm, multlcmm, Jointlcmm now include partialH option restrict computation inverse Hessian matrix submatrix Functions hlme, lcmm, multlcmm, Jointlcmm now allow optional vector B estimated model (G=1) reduce calculation time initial values. Bug identified solved calculation subject-specific predictions hlme, lcmm, multlcmm Jointlcmm cor NULL. Bug identified solved calculation confidence bands individual dynamic predictions dynpred draws=T. Bug identified solved calculation explained variance multlcmm objects cor NULL.","code":""},{"path":"/news/index.html","id":"changes-in-version-1-7-1-1-7-2-2015-02-27","dir":"Changelog","previous_headings":"","what":"Changes in Version 1.7.1 & 1.7.2 (2015-02-27):","title":"Changes in Version 1.7.1 & 1.7.2 (2015-02-27):","text":"CRAN release: 2015-02-26 Function plot now includes =“fit” option plot observed predicted trajectories stemming hlme, lcmm, Jointlcmm multlcmm object. Function predictlink replaces deprecated function link.confint Function plot gathers deprecated functions plot.linkfunction, plot.baselinerisk, plot.survival, plot.fit together","code":""},{"path":"/news/index.html","id":"changes-in-version-1-7-0-2015-02-13","dir":"Changelog","previous_headings":"","what":"Changes in Version 1.7.0 (2015-02-13):","title":"Changes in Version 1.7.0 (2015-02-13):","text":"function Jointlcmm now allows competing risks data survival part also available non-Gaussian longitudinal data. existing methods Jointlcmm objects (except EPOCE Diffepoce functions) adapted new framework. Functions link.confint, plot.linkfunction, predictL now available Jointlcmm objects. new functions incidcum plot.incidcum respectively compute plot cumulative incidence associated competing event Jointlcmm object. new function fitY computes marginal predicted values longitudinal outcomes natural scale lcmm multlcmm objects. Bug identified solved dynpred function used joint model assuming proportional hazards latent classes. Makevars file now allows compilation package parallel make.","code":""},{"path":"/news/index.html","id":"changes-in-version-1-6-5-1-6-6-2014-09-10","dir":"Changelog","previous_headings":"","what":"Changes in Version 1.6.5 & 1.6.6 (2014-09-10):","title":"Changes in Version 1.6.5 & 1.6.6 (2014-09-10):","text":"bug solved regarding installation problem parallel make","code":""},{"path":"/news/index.html","id":"changes-in-version-1-6-4-2014-04-11","dir":"Changelog","previous_headings":"","what":"Changes in Version 1.6.4 (2014-04-11):","title":"Changes in Version 1.6.4 (2014-04-11):","text":"CRAN release: 2014-04-11 new functions dynpred plot.dynpred respectively compute plot individual dynamic predictions obtained joint latent class model estimated Jointlcmm. new function VarCovRE computes standard errors parameters variance-covariance random effects hlme, lcmm, Jointlcmm multlcmm object new function WaldMult computes multivariate Wald tests Wald tests combinations parameters hlme, lcmm, Jointlcmm multlcmm object new function VarExpl computes percentages variance explained linear regression hlme, lcmm, Jointlclmm multlcmm object new functions estimates VarCov get respectively parameters estimated variance-covariance matrix hlme, lcmm, Jointlcmm multlcmm object Function summary now returns table containing results fixed effects longitudinal model plots consider now … options Functions plot.linkfunction plot.predict now add argument Function multlcmm now allows “splines” “Splines” specification link functions Functions lcmm multlcmm now compute transformations even maximum number iterations reached without convergence bug identified solved multlcmm response variables integers bug identified solved multlcmm using contrast bug identified solved plot.linkfunction y axes positions bug identified solved hlme, lcmm, Jointlcmm multlcmm including interactions mixture.","code":""},{"path":"/news/index.html","id":"changes-in-version-1-6-2-2013-03-06","dir":"Changelog","previous_headings":"","what":"Changes in Version 1.6.2 (2013-03-06):","title":"Changes in Version 1.6.2 (2013-03-06):","text":"CRAN release: 2013-03-07 new function multlcmm now estimates latent process mixed models multivariate curvilinear longitudinal outcomes (link functions: linear, beta splines). Various post-fit computation output functions also available including plot.linkfunction, predictY, predictL, etc functions hlme, lcmm, Jointlcmm include cor option including brownian motion first-order autoregressive error process addition independent errors measurement bug identified solved predictL, predictY plot.predict used factor covariate","code":""},{"path":"/news/index.html","id":"changes-in-version-1-5-8-2012-10-01","dir":"Changelog","previous_headings":"","what":"Changes in Version 1.5.8 (2012-10-01):","title":"Changes in Version 1.5.8 (2012-10-01):","text":"CRAN release: 2012-10-04 bug identified solved predictY.lcmm used splines link function outcome minimum value 0","code":""},{"path":"/news/index.html","id":"changes-in-version-1-5-7-2012-07-24","dir":"Changelog","previous_headings":"","what":"Changes in Version 1.5.7 (2012-07-24):","title":"Changes in Version 1.5.7 (2012-07-24):","text":"CRAN release: 2012-07-24 function predictY now computes predicted values (possibly class-specific) longitudinal outcome lcmm object also hlme Jointlcmm object specified profile covariates. bug identified solved predictY.lcmm used threshold link function Monte Carlo method","code":""},{"path":"/news/index.html","id":"changes-in-version-1-5-6-2012-07-16","dir":"Changelog","previous_headings":"","what":"Changes in Version 1.5.6 (2012-07-16):","title":"Changes in Version 1.5.6 (2012-07-16):","text":"CRAN release: 2012-07-16 missing data handled hlme, lcmm Jointlcmm using na.action attributes 1 na.omit 2 na.fail new function predictY.lcmm computes predicted values lcmm object natural outcome scale specified profile covariates, also provides confidence bands using Monte Carlo method. bugs epoce computation solved (splines baseline risk function, /NaN values solaris system) bug identified solved summary functions regarding labels covariate effects peculiar cases","code":""},{"path":"/news/index.html","id":"changes-in-version-1-5-2-2012-04-06","dir":"Changelog","previous_headings":"","what":"Changes in Version 1.5.2 (2012-04-06):","title":"Changes in Version 1.5.2 (2012-04-06):","text":"CRAN release: 2012-04-16 categorical variables using factor() variables entered functions using () interaction terms using \"*\" “:” computation predictive accuracy measure EPOCE Jointlcmm object either training data external data (post-fit functions epoce Diffepoce) discrete outcomes, lcmm function now computates posterior discrete log-likelihood universal approximate cross-validation criterion (UACV) Jointlcmm now includes two parameterizations -splines piecewise-constant baseline risks functions ensure positive risks: either log/exp sqrt/square (option logscale=).","code":""}]
